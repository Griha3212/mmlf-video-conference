[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"28","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx":"29","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts":"30","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts":"31"},{"size":462,"mtime":1611587033817,"results":"32","hashOfConfig":"33"},{"size":999,"mtime":1611219535180,"results":"34","hashOfConfig":"33"},{"size":88,"mtime":1609151476043,"results":"35","hashOfConfig":"33"},{"size":355,"mtime":1611587774795,"results":"36","hashOfConfig":"33"},{"size":4843,"mtime":1610437764729,"results":"37","hashOfConfig":"33"},{"size":845,"mtime":1609924589133,"results":"38","hashOfConfig":"33"},{"size":433,"mtime":1609754100539,"results":"39","hashOfConfig":"33"},{"size":596,"mtime":1611219984263,"results":"40","hashOfConfig":"33"},{"size":1360,"mtime":1611588354280,"results":"41","hashOfConfig":"33"},{"size":455,"mtime":1609923543629,"results":"42","hashOfConfig":"33"},{"size":304,"mtime":1609923543632,"results":"43","hashOfConfig":"33"},{"size":853,"mtime":1611587359651,"results":"44","hashOfConfig":"33"},{"size":7098,"mtime":1611562544240,"results":"45","hashOfConfig":"33"},{"size":1287,"mtime":1611562566718,"results":"46","hashOfConfig":"33"},{"size":360,"mtime":1609927664710,"results":"47","hashOfConfig":"33"},{"size":474,"mtime":1609927609396,"results":"48","hashOfConfig":"33"},{"size":22238,"mtime":1611588281511,"results":"49","hashOfConfig":"33"},{"size":8430,"mtime":1611566596654,"results":"50","hashOfConfig":"33"},{"size":1088,"mtime":1611078096440,"results":"51","hashOfConfig":"33"},{"size":304,"mtime":1610521474487,"results":"52","hashOfConfig":"33"},{"size":7992,"mtime":1611588541647,"results":"53","hashOfConfig":"33"},{"size":8807,"mtime":1611570200455,"results":"54","hashOfConfig":"33"},{"size":804,"mtime":1610544223943,"results":"55","hashOfConfig":"33"},{"size":304,"mtime":1610534492141,"results":"56","hashOfConfig":"33"},{"size":3122,"mtime":1611587463670,"results":"57","hashOfConfig":"33"},{"size":1257,"mtime":1611561293120,"results":"58","hashOfConfig":"33"},{"size":16243,"mtime":1611588648675,"results":"59","hashOfConfig":"33"},{"size":6168,"mtime":1611380873975,"results":"60","hashOfConfig":"33"},{"size":7038,"mtime":1611247105532,"results":"61","hashOfConfig":"33"},{"size":1409,"mtime":1611245672776,"results":"62","hashOfConfig":"33"},{"size":551,"mtime":1611587442270,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vtgqsx",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",[],["135","136","137","138","139","140"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["141","142","143","144"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["145"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["146","147","148"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["149","150","151","152","153","154"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["155"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport useStyles from './style';\r\nimport { apiGetUser } from '../../api/user';\r\nimport parseToken from '../../utils/parseToken';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { apiChangeActiveSpeakerInChannel, apiSetBrakeInChannel } from '../../api/admin';\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\ntype DataForAdmin = {\r\n  // channelAdminInfo: {\r\n  //   break: boolean, id: number, link: string,\r\n  //   number: number\r\n  // },\r\n  // description: string;\r\n  // id: number;\r\n  // letter: string;\r\n  // name: string;\r\n  // speakers: Array<Speaker>\r\n\r\n  channelAdminInfo: {\r\n    number: number,\r\n  }\r\n\r\n  foundAllSessionsInAdminChannel: Array<Session>\r\n\r\n};\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\ntype Session = {\r\n\r\n  description: string;\r\n  id: number;\r\n  letter: string;\r\n  name: string;\r\n  nextSessionDescription: string;\r\n  nextSessionLetter: string;\r\n  speakers: Array<Speaker>;\r\n  voteFoAllSession: boolean;\r\n\r\n};\r\n\r\nconst AdminPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [error]: [string, (error: string) => void] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [activeSpeaker, setActiveSpeaker] = useState('');\r\n\r\n  const [selectedSpeakerToActivate, setSelectedSpeakerToActivate] = useState('');\r\n\r\n  const [dataForAdmin, setDataForAdmin] = useState<DataForAdmin>();\r\n  const [activeButtonId, setActiveButtonId] = useState<number | undefined>();\r\n\r\n  const loadDataForAdmin = async () => {\r\n    const response = await apiGetUser(userData.id, token);\r\n    setDataForAdmin(response);\r\n\r\n    if (response && response.channelAdminInfo && response.channelAdminInfo.activeSpeaker) {\r\n      setActiveSpeaker(`${response.channelAdminInfo.activeSpeaker.lastName} ${response.channelAdminInfo.activeSpeaker.firstName}`);\r\n      setActiveButtonId(response.channelAdminInfo.activeSpeaker.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForAdmin();\r\n  }, []);\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  const activateSelectedSpeaker = async (speakerId: string) => {\r\n    const response = await apiChangeActiveSpeakerInChannel(\r\n      token,\r\n      Number(speakerId),\r\n      Number(dataForAdmin && dataForAdmin.channelAdminInfo.number),\r\n    );\r\n\r\n    setActiveSpeaker(`${response.lastName} ${response.firstName}`);\r\n  };\r\n\r\n  const setBreakBetweenSessions = async () => {\r\n    await apiSetBrakeInChannel(\r\n      token,\r\n      Number(dataForAdmin && dataForAdmin.channelAdminInfo.number),\r\n      Number(activeButtonId),\r\n    );\r\n    setActiveSpeaker('');\r\n    setActiveButtonId(undefined);\r\n  };\r\n\r\n  const renderSpeakersDataForAdmin = (element: Speaker) => {\r\n    if (!element.isModerator) {\r\n      return (\r\n\r\n        <Grid container xs={12} justify=\"center\">\r\n          <Button\r\n            onClick={(e) => {\r\n              setSelectedSpeakerToActivate(e.currentTarget.value);\r\n              setActiveButtonId(Number(e.currentTarget.value));\r\n            }}\r\n            value={element.id}\r\n            data-id=\"\"\r\n            className={activeButtonId === element.id ?\r\n              classes.speakerButtonActive : classes.speakerButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {`${element.lastName}  ${element.firstName}`}\r\n          </Button>\r\n        </Grid>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Администратора\r\n          </Typography>\r\n          <p className={classes.sessionLetter}>\r\n            Канал №\r\n            {dataForAdmin && String(dataForAdmin.channelAdminInfo.number)}\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <Grid container justify=\"space-around\">\r\n\r\n        <Grid item xs={4}>\r\n\r\n          {\r\n            dataForAdmin && dataForAdmin.foundAllSessionsInAdminChannel.map(\r\n              (session: Session) => (\r\n                <>\r\n                  <p className={classes.sessionLetter}>\r\n                    {session.letter}\r\n                  </p>\r\n                  <p>\r\n                    {session.speakers.map(\r\n                      (speaker: Speaker) => renderSpeakersDataForAdmin(speaker),\r\n                    )}\r\n                  </p>\r\n                </>\r\n              ),\r\n            )\r\n          }\r\n\r\n          {/* {\r\n            dataForAdmin && dataForAdmin.foundAllSessionsInAdminChannel.map(\r\n              (element: Session) => renderSpeakersDataForAdmin(element),\r\n            )\r\n          } */}\r\n        </Grid>\r\n\r\n        <Grid item justify=\"center\" xs={4}>\r\n          <p className={`${classes.textCenter} ${classes.activateSelectedSpeakerP}`}>\r\n            <Button onClick={() => activateSelectedSpeaker(selectedSpeakerToActivate)} variant=\"contained\" color=\"primary\">Активировать выбранного спикера</Button>\r\n          </p>\r\n\r\n          <p className={classes.textCenter}>\r\n            <Button onClick={() => setBreakBetweenSessions()} variant=\"contained\" color=\"primary\">Активировать перерыв</Button>\r\n          </p>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <p className={classes.activeSpeakerText}>\r\n            Активный спикер:\r\n            {' '}\r\n            {`${activeSpeaker}`}\r\n          </p>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AdminPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["156"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["157","158","159","160","161","162","163","164"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["165","166","167","168","169","170","171","172"],"import React, { memo, useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport { createPortal } from 'react-dom';\nimport useStyles from './style';\n\nconst VideoPlayerMain = (props: any) => {\n  const classes = useStyles();\n\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef;\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\n\n  const playVideo = (): any => {\n\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      data-testid=\"loading-page\"\n    >\n      <div\n        className={props.classNameInner}\n        ref={inputRef}\n      >\n        <Iframe\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\n          url={props.videoURL}\n          width=\"100%\"\n          height={props.height}\n          position=\"relative\"\n          allow=\"fullscreen\"\n          onLoad={playVideo()}\n        />\n      </div>\n    </Grid>\n\n  );\n};\n\nexport default memo(VideoPlayerMain);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["173"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx",["174","175","176","177","178","179","180","181","182","183"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["184","185","186","187","188","189"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["190","191"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\nexport const apiChangeActiveSpeakerInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  speakerIdToActivate: number,\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveSpeakerInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerIdToActivate, channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetBrakeInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  channelForShowingNumber: number,\n  prevSpeakerid: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setBrakeInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelForShowingNumber, prevSpeakerid }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["192","193","194","195","196","197","198","199","200"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx",["201","202","203"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { apiGetStats } from '../../api/stats';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport parseToken from '../../utils/parseToken';\r\nimport useStyles from './style';\r\n\r\ntype User = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n\r\n};\r\n\r\ntype Vote = {\r\n  rate: number;\r\n  user: User;\r\n  createdAt: Date;\r\n};\r\n\r\ntype DataForStats = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n  usersWhoWatchedSpeaker: Array<User>;\r\n  votes: Array<Vote>;\r\n\r\n};\r\n\r\nconst StatsPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [dataForStatsViewer, setDataForStatsViewer] = useState<DataForStats[]>();\r\n\r\n  const loadDataForStatsViewer = async () => {\r\n    const response = await apiGetStats(userData.id, token);\r\n    setDataForStatsViewer(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForStatsViewer();\r\n  }, []);\r\n\r\n  const Row = (props: { row: DataForStats }) => {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let sum = 0;\r\n\r\n    row.votes.map((element) => {\r\n      sum += element.rate;\r\n    });\r\n\r\n    const medianValue = (+sum / +row.votes.length || 0).toFixed(2);\r\n\r\n    const renderRate = (historyRow: any) => {\r\n      const currentRate = row && row!.votes.find(\r\n        (element: any) => element.user.id === historyRow.id,\r\n      );\r\n\r\n      if (currentRate && currentRate.createdAt && !currentRate.rate) return '0';\r\n      return currentRate && currentRate.rate || 'без оценки';\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <TableRow className={classes.root}>\r\n          <TableCell align=\"center\">\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n            {`${row.firstName} ${row.lastName}`}\r\n          </TableCell>\r\n          <TableCell align=\"center\">{row.usersWhoWatchedSpeaker.length}</TableCell>\r\n          <TableCell align=\"center\">{row.votes.length}</TableCell>\r\n          <TableCell align=\"center\">{medianValue}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Подробнее\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Имя Фамилия участника</TableCell>\r\n                      <TableCell align=\"center\">Просмотрел</TableCell>\r\n                      <TableCell align=\"center\">Оценка</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {row.usersWhoWatchedSpeaker.map((historyRow) => (\r\n                      <TableRow key={historyRow.id}>\r\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                          {`${historyRow.firstName} ${historyRow.lastName}`}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            defaultChecked\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{renderRate(historyRow)}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.pageNameContainer} component=\"main\" maxWidth=\"xs\">\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Просмотра Статистики\r\n          </Typography>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <div className={classes.root}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell align=\"center\">Имя Фамилия спикера</TableCell>\r\n                <TableCell align=\"center\">Количество просмотров</TableCell>\r\n                <TableCell align=\"center\">Количество оценок</TableCell>\r\n                <TableCell align=\"center\">Средняя оценка</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataForStatsViewer && dataForStatsViewer.map((row) => (\r\n                <Row key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(StatsPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts",["204"],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":19,"column":3,"nodeType":"219","messageId":"220","endLine":19,"endColumn":14},{"ruleId":"217","severity":1,"message":"221","line":19,"column":16,"nodeType":"219","messageId":"220","endLine":19,"endColumn":22},{"ruleId":"217","severity":1,"message":"222","line":28,"column":11,"nodeType":"219","messageId":"220","endLine":28,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":33,"column":23,"nodeType":"225","messageId":"226","endLine":33,"endColumn":26,"suggestions":"227"},{"ruleId":"223","severity":1,"message":"224","line":10,"column":12,"nodeType":"225","messageId":"226","endLine":10,"endColumn":15,"suggestions":"228"},{"ruleId":"217","severity":1,"message":"229","line":16,"column":8,"nodeType":"219","messageId":"220","endLine":16,"endColumn":17},{"ruleId":"217","severity":1,"message":"230","line":20,"column":18,"nodeType":"219","messageId":"220","endLine":20,"endColumn":27},{"ruleId":"217","severity":1,"message":"231","line":24,"column":20,"nodeType":"219","messageId":"220","endLine":24,"endColumn":31},{"ruleId":"205","replacedBy":"232"},{"ruleId":"207","replacedBy":"233"},{"ruleId":"209","replacedBy":"234"},{"ruleId":"211","replacedBy":"235"},{"ruleId":"213","replacedBy":"236"},{"ruleId":"215","replacedBy":"237"},{"ruleId":"223","severity":1,"message":"224","line":60,"column":23,"nodeType":"225","messageId":"226","endLine":60,"endColumn":26,"suggestions":"238"},{"ruleId":"217","severity":1,"message":"239","line":2,"column":10,"nodeType":"219","messageId":"220","endLine":2,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":269,"column":47,"nodeType":"225","messageId":"226","endLine":269,"endColumn":50,"suggestions":"240"},{"ruleId":"223","severity":1,"message":"224","line":287,"column":46,"nodeType":"225","messageId":"226","endLine":287,"endColumn":49,"suggestions":"241"},{"ruleId":"223","severity":1,"message":"224","line":318,"column":62,"nodeType":"225","messageId":"226","endLine":318,"endColumn":65,"suggestions":"242"},{"ruleId":"223","severity":1,"message":"224","line":334,"column":67,"nodeType":"225","messageId":"226","endLine":334,"endColumn":70,"suggestions":"243"},{"ruleId":"217","severity":1,"message":"244","line":353,"column":9,"nodeType":"219","messageId":"220","endLine":353,"endColumn":13},{"ruleId":"217","severity":1,"message":"245","line":354,"column":9,"nodeType":"219","messageId":"220","endLine":354,"endColumn":13},{"ruleId":"223","severity":1,"message":"224","line":363,"column":41,"nodeType":"225","messageId":"226","endLine":363,"endColumn":44,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":364,"column":28,"nodeType":"249","messageId":"250","endLine":364,"endColumn":40,"suggestions":"251"},{"ruleId":"217","severity":1,"message":"252","line":2,"column":16,"nodeType":"219","messageId":"220","endLine":2,"endColumn":32},{"ruleId":"217","severity":1,"message":"253","line":4,"column":10,"nodeType":"219","messageId":"220","endLine":4,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":7,"column":33,"nodeType":"225","messageId":"226","endLine":7,"endColumn":36,"suggestions":"254"},{"ruleId":"217","severity":1,"message":"255","line":8,"column":9,"nodeType":"219","messageId":"220","endLine":8,"endColumn":16},{"ruleId":"217","severity":1,"message":"256","line":10,"column":22,"nodeType":"219","messageId":"220","endLine":10,"endColumn":35},{"ruleId":"217","severity":1,"message":"257","line":11,"column":9,"nodeType":"219","messageId":"220","endLine":11,"endColumn":18},{"ruleId":"223","severity":1,"message":"224","line":12,"column":19,"nodeType":"225","messageId":"226","endLine":12,"endColumn":22,"suggestions":"258"},{"ruleId":"223","severity":1,"message":"224","line":14,"column":25,"nodeType":"225","messageId":"226","endLine":14,"endColumn":28,"suggestions":"259"},{"ruleId":"223","severity":1,"message":"224","line":12,"column":34,"nodeType":"225","messageId":"226","endLine":12,"endColumn":37,"suggestions":"260"},{"ruleId":"217","severity":1,"message":"252","line":3,"column":9,"nodeType":"219","messageId":"220","endLine":3,"endColumn":25},{"ruleId":"217","severity":1,"message":"261","line":3,"column":27,"nodeType":"219","messageId":"220","endLine":3,"endColumn":37},{"ruleId":"217","severity":1,"message":"262","line":3,"column":39,"nodeType":"219","messageId":"220","endLine":3,"endColumn":45},{"ruleId":"217","severity":1,"message":"263","line":5,"column":8,"nodeType":"219","messageId":"220","endLine":5,"endColumn":14},{"ruleId":"217","severity":1,"message":"264","line":6,"column":8,"nodeType":"219","messageId":"220","endLine":6,"endColumn":11},{"ruleId":"217","severity":1,"message":"265","line":7,"column":8,"nodeType":"219","messageId":"220","endLine":7,"endColumn":14},{"ruleId":"217","severity":1,"message":"266","line":8,"column":8,"nodeType":"219","messageId":"220","endLine":8,"endColumn":15},{"ruleId":"217","severity":1,"message":"267","line":10,"column":8,"nodeType":"219","messageId":"220","endLine":10,"endColumn":23},{"ruleId":"223","severity":1,"message":"224","line":12,"column":31,"nodeType":"225","messageId":"226","endLine":12,"endColumn":34,"suggestions":"268"},{"ruleId":"217","severity":1,"message":"255","line":13,"column":9,"nodeType":"219","messageId":"220","endLine":13,"endColumn":16},{"ruleId":"223","severity":1,"message":"224","line":14,"column":12,"nodeType":"225","messageId":"226","endLine":14,"endColumn":15,"suggestions":"269"},{"ruleId":"223","severity":1,"message":"224","line":37,"column":12,"nodeType":"225","messageId":"226","endLine":37,"endColumn":15,"suggestions":"270"},{"ruleId":"223","severity":1,"message":"224","line":59,"column":12,"nodeType":"225","messageId":"226","endLine":59,"endColumn":15,"suggestions":"271"},{"ruleId":"223","severity":1,"message":"224","line":81,"column":12,"nodeType":"225","messageId":"226","endLine":81,"endColumn":15,"suggestions":"272"},{"ruleId":"223","severity":1,"message":"224","line":103,"column":12,"nodeType":"225","messageId":"226","endLine":103,"endColumn":15,"suggestions":"273"},{"ruleId":"223","severity":1,"message":"224","line":125,"column":12,"nodeType":"225","messageId":"226","endLine":125,"endColumn":15,"suggestions":"274"},{"ruleId":"223","severity":1,"message":"224","line":13,"column":12,"nodeType":"225","messageId":"226","endLine":13,"endColumn":15,"suggestions":"275"},{"ruleId":"223","severity":1,"message":"224","line":35,"column":12,"nodeType":"225","messageId":"226","endLine":35,"endColumn":15,"suggestions":"276"},{"ruleId":"217","severity":1,"message":"277","line":16,"column":8,"nodeType":"219","messageId":"220","endLine":16,"endColumn":21},{"ruleId":"217","severity":1,"message":"278","line":19,"column":8,"nodeType":"219","messageId":"220","endLine":19,"endColumn":29},{"ruleId":"223","severity":1,"message":"224","line":46,"column":42,"nodeType":"225","messageId":"226","endLine":46,"endColumn":45,"suggestions":"279"},{"ruleId":"223","severity":1,"message":"224","line":69,"column":19,"nodeType":"225","messageId":"226","endLine":69,"endColumn":22,"suggestions":"280"},{"ruleId":"223","severity":1,"message":"224","line":80,"column":41,"nodeType":"225","messageId":"226","endLine":80,"endColumn":44,"suggestions":"281"},{"ruleId":"247","severity":1,"message":"248","line":82,"column":11,"nodeType":"249","messageId":"250","endLine":82,"endColumn":47,"suggestions":"282"},{"ruleId":"247","severity":1,"message":"248","line":83,"column":27,"nodeType":"249","messageId":"250","endLine":83,"endColumn":63,"suggestions":"283"},{"ruleId":"223","severity":1,"message":"224","line":84,"column":18,"nodeType":"225","messageId":"226","endLine":84,"endColumn":21,"suggestions":"284"},{"ruleId":"223","severity":1,"message":"224","line":299,"column":46,"nodeType":"225","messageId":"226","endLine":299,"endColumn":49,"suggestions":"285"},{"ruleId":"223","severity":1,"message":"224","line":96,"column":37,"nodeType":"225","messageId":"226","endLine":96,"endColumn":40,"suggestions":"286"},{"ruleId":"247","severity":1,"message":"248","line":97,"column":34,"nodeType":"249","messageId":"250","endLine":97,"endColumn":38,"suggestions":"287"},{"ruleId":"223","severity":1,"message":"224","line":98,"column":19,"nodeType":"225","messageId":"226","endLine":98,"endColumn":22,"suggestions":"288"},{"ruleId":"223","severity":1,"message":"224","line":12,"column":12,"nodeType":"225","messageId":"226","endLine":12,"endColumn":15,"suggestions":"289"},"lines-around-directive",["290"],"no-spaced-func",["291"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'Prompt' is defined but never used.","'Props' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["292","293"],["294","295"],"'LoginPage' is defined but never used.","'setIsAuth' is assigned a value but never used.","'setUserData' is assigned a value but never used.",["290"],["291"],[],[],[],[],["296","297"],"'Hidden' is defined but never used.",["298","299"],["300","301"],["302","303"],["304","305"],"'isMd' is assigned a value but never used.","'isSm' is assigned a value but never used.",["306","307"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["308"],"'CircularProgress' is defined but never used.","'createPortal' is defined but never used.",["309","310"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["311","312"],["313","314"],["315","316"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Iframe' is defined but never used.","'Box' is defined but never used.","'Rating' is defined but never used.","'Divider' is defined but never used.","'VideoPlayerMain' is defined but never used.",["317","318"],["319","320"],["321","322"],["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],["333","334"],"'ShareContacts' is defined but never used.","'ShareContactsDisabled' is defined but never used.",["335","336"],["337","338"],["339","340"],["341"],["342"],["343","344"],["345","346"],["347","348"],["349"],["350","351"],["352","353"],"padding-line-between-statements","func-call-spacing",{"messageId":"354","fix":"355","desc":"356"},{"messageId":"357","fix":"358","desc":"359"},{"messageId":"354","fix":"360","desc":"356"},{"messageId":"357","fix":"361","desc":"359"},{"messageId":"354","fix":"362","desc":"356"},{"messageId":"357","fix":"363","desc":"359"},{"messageId":"354","fix":"364","desc":"356"},{"messageId":"357","fix":"365","desc":"359"},{"messageId":"354","fix":"366","desc":"356"},{"messageId":"357","fix":"367","desc":"359"},{"messageId":"354","fix":"368","desc":"356"},{"messageId":"357","fix":"369","desc":"359"},{"messageId":"354","fix":"370","desc":"356"},{"messageId":"357","fix":"371","desc":"359"},{"messageId":"354","fix":"372","desc":"356"},{"messageId":"357","fix":"373","desc":"359"},{"messageId":"374","fix":"375","desc":"376"},{"messageId":"354","fix":"377","desc":"356"},{"messageId":"357","fix":"378","desc":"359"},{"messageId":"354","fix":"379","desc":"356"},{"messageId":"357","fix":"380","desc":"359"},{"messageId":"354","fix":"381","desc":"356"},{"messageId":"357","fix":"382","desc":"359"},{"messageId":"354","fix":"383","desc":"356"},{"messageId":"357","fix":"384","desc":"359"},{"messageId":"354","fix":"385","desc":"356"},{"messageId":"357","fix":"386","desc":"359"},{"messageId":"354","fix":"387","desc":"356"},{"messageId":"357","fix":"388","desc":"359"},{"messageId":"354","fix":"389","desc":"356"},{"messageId":"357","fix":"390","desc":"359"},{"messageId":"354","fix":"391","desc":"356"},{"messageId":"357","fix":"392","desc":"359"},{"messageId":"354","fix":"393","desc":"356"},{"messageId":"357","fix":"394","desc":"359"},{"messageId":"354","fix":"395","desc":"356"},{"messageId":"357","fix":"396","desc":"359"},{"messageId":"354","fix":"397","desc":"356"},{"messageId":"357","fix":"398","desc":"359"},{"messageId":"354","fix":"399","desc":"356"},{"messageId":"357","fix":"400","desc":"359"},{"messageId":"354","fix":"401","desc":"356"},{"messageId":"357","fix":"402","desc":"359"},{"messageId":"354","fix":"403","desc":"356"},{"messageId":"357","fix":"404","desc":"359"},{"messageId":"354","fix":"405","desc":"356"},{"messageId":"357","fix":"406","desc":"359"},{"messageId":"354","fix":"407","desc":"356"},{"messageId":"357","fix":"408","desc":"359"},{"messageId":"374","fix":"409","desc":"376"},{"messageId":"374","fix":"410","desc":"376"},{"messageId":"354","fix":"411","desc":"356"},{"messageId":"357","fix":"412","desc":"359"},{"messageId":"354","fix":"413","desc":"356"},{"messageId":"357","fix":"414","desc":"359"},{"messageId":"354","fix":"415","desc":"356"},{"messageId":"357","fix":"416","desc":"359"},{"messageId":"374","fix":"417","desc":"376"},{"messageId":"354","fix":"418","desc":"356"},{"messageId":"357","fix":"419","desc":"359"},{"messageId":"354","fix":"420","desc":"356"},{"messageId":"357","fix":"421","desc":"359"},"suggestUnknown",{"range":"422","text":"423"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"422","text":"424"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"425","text":"423"},{"range":"425","text":"424"},{"range":"426","text":"423"},{"range":"426","text":"424"},{"range":"427","text":"423"},{"range":"427","text":"424"},{"range":"428","text":"423"},{"range":"428","text":"424"},{"range":"429","text":"423"},{"range":"429","text":"424"},{"range":"430","text":"423"},{"range":"430","text":"424"},{"range":"431","text":"423"},{"range":"431","text":"424"},"suggestOptionalChain",{"range":"432","text":"433"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"434","text":"423"},{"range":"434","text":"424"},{"range":"435","text":"423"},{"range":"435","text":"424"},{"range":"436","text":"423"},{"range":"436","text":"424"},{"range":"437","text":"423"},{"range":"437","text":"424"},{"range":"438","text":"423"},{"range":"438","text":"424"},{"range":"439","text":"423"},{"range":"439","text":"424"},{"range":"440","text":"423"},{"range":"440","text":"424"},{"range":"441","text":"423"},{"range":"441","text":"424"},{"range":"442","text":"423"},{"range":"442","text":"424"},{"range":"443","text":"423"},{"range":"443","text":"424"},{"range":"444","text":"423"},{"range":"444","text":"424"},{"range":"445","text":"423"},{"range":"445","text":"424"},{"range":"446","text":"423"},{"range":"446","text":"424"},{"range":"447","text":"423"},{"range":"447","text":"424"},{"range":"448","text":"423"},{"range":"448","text":"424"},{"range":"449","text":"423"},{"range":"449","text":"424"},{"range":"450","text":"433"},{"range":"451","text":"433"},{"range":"452","text":"423"},{"range":"452","text":"424"},{"range":"453","text":"423"},{"range":"453","text":"424"},{"range":"454","text":"423"},{"range":"454","text":"424"},{"range":"455","text":"433"},{"range":"456","text":"423"},{"range":"456","text":"424"},{"range":"457","text":"423"},{"range":"457","text":"424"},[965,968],"unknown","never",[222,225],[1706,1709],[9636,9639],[10147,10150],[11029,11032],[11524,11527],[12511,12514],[12560,12561],"?",[250,253],[396,399],[498,501],[414,417],[421,424],[302,305],[793,796],[1300,1303],[1824,1827],[2308,2311],[2796,2799],[361,364],[916,919],[1332,1335],[2129,2132],[2352,2355],[2456,2457],[2534,2535],[2560,2563],[9977,9980],[2811,2814],[2858,2859],[2891,2894],[255,258]]