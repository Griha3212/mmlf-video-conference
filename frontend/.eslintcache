[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\capitalizeFirstLetter.helper.ts":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"28"},{"size":462,"mtime":1611896918476,"results":"29","hashOfConfig":"30"},{"size":999,"mtime":1611219535180,"results":"31","hashOfConfig":"30"},{"size":88,"mtime":1609151476043,"results":"32","hashOfConfig":"30"},{"size":1360,"mtime":1611588354280,"results":"33","hashOfConfig":"30"},{"size":4843,"mtime":1610437764729,"results":"34","hashOfConfig":"30"},{"size":8065,"mtime":1611654867557,"results":"35","hashOfConfig":"30"},{"size":8983,"mtime":1612364205005,"results":"36","hashOfConfig":"30"},{"size":23525,"mtime":1612363281469,"results":"37","hashOfConfig":"30"},{"size":845,"mtime":1609924589133,"results":"38","hashOfConfig":"30"},{"size":1409,"mtime":1611245672776,"results":"39","hashOfConfig":"30"},{"size":1461,"mtime":1612364228958,"results":"40","hashOfConfig":"30"},{"size":816,"mtime":1611588730436,"results":"41","hashOfConfig":"30"},{"size":355,"mtime":1611587774795,"results":"42","hashOfConfig":"30"},{"size":433,"mtime":1609754100539,"results":"43","hashOfConfig":"30"},{"size":3599,"mtime":1611590733718,"results":"44","hashOfConfig":"30"},{"size":2161,"mtime":1611749738661,"results":"45","hashOfConfig":"30"},{"size":551,"mtime":1611587442270,"results":"46","hashOfConfig":"30"},{"size":360,"mtime":1609927664710,"results":"47","hashOfConfig":"30"},{"size":13285,"mtime":1612370632432,"results":"48","hashOfConfig":"30"},{"size":1132,"mtime":1612189320479,"results":"49","hashOfConfig":"30"},{"size":9660,"mtime":1612365985644,"results":"50","hashOfConfig":"30"},{"size":18827,"mtime":1612366144193,"results":"51","hashOfConfig":"30"},{"size":792,"mtime":1611739960283,"results":"52","hashOfConfig":"30"},{"size":474,"mtime":1609927609396,"results":"53","hashOfConfig":"30"},{"size":304,"mtime":1612189320481,"results":"54","hashOfConfig":"30"},{"size":12114,"mtime":1612365310833,"results":"55","hashOfConfig":"30"},{"size":174,"mtime":1611746555158,"results":"56","hashOfConfig":"30"},{"size":8495,"mtime":1612366627109,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"vtgqsx",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"60"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",[],["125","126","127","128","129","130"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["131","132","133"],"import React, {\r\n  FC, memo, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\n// import LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (userData.hasAccessToStatisticPage) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["134","135","136","137"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx",["138","139","140","141","142","143","144"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { apiGetStats } from '../../api/stats';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport parseToken from '../../utils/parseToken';\r\nimport useStyles from './style';\r\n\r\ntype User = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  email: string;\r\n\r\n};\r\n\r\ntype Vote = {\r\n  rate: number;\r\n  user: User;\r\n  createdAt: Date;\r\n};\r\n\r\ntype DataForStats = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n  usersWhoWatchedSpeaker: Array<User>;\r\n  usersWhoSendContacts: Array<User>;\r\n  votes: Array<Vote>;\r\n\r\n};\r\n\r\nconst StatsPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [dataForStatsViewer, setDataForStatsViewer] = useState<DataForStats[]>();\r\n\r\n  const loadDataForStatsViewer = async () => {\r\n    const response = await apiGetStats(userData.id, token);\r\n    setDataForStatsViewer(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForStatsViewer();\r\n  }, []);\r\n\r\n  const Row = (props: { row: DataForStats }) => {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let sum = 0;\r\n\r\n    row.votes.map((element) => {\r\n      sum += element.rate;\r\n    });\r\n\r\n    const medianValue = (+sum / +row.votes.length || 0).toFixed(2);\r\n\r\n    const renderRate = (historyRow: any) => {\r\n      const currentRate = row && row!.votes.find(\r\n        (element: any) => element.user.id === historyRow.id,\r\n      );\r\n\r\n      if (currentRate && currentRate.createdAt && !currentRate.rate) return '0';\r\n      return currentRate && currentRate.rate || 'без оценки';\r\n    };\r\n\r\n    const renderContactCheckbox = (historyRow: any) => {\r\n      console.log('row :>> ', row);\r\n\r\n      const currentContact = row && row!.usersWhoSendContacts.find(\r\n        (element: any) => element.id === historyRow.id,\r\n      );\r\n\r\n      if (currentContact) return true;\r\n\r\n      return false;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <TableRow className={classes.root}>\r\n          <TableCell align=\"center\">\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n            {`${row.firstName} ${row.lastName}`}\r\n          </TableCell>\r\n          <TableCell align=\"center\">{row.usersWhoWatchedSpeaker.length}</TableCell>\r\n          <TableCell align=\"center\">{row.votes.length}</TableCell>\r\n          <TableCell align=\"center\">{medianValue}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Подробнее\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Имя Фамилия участника</TableCell>\r\n                      <TableCell align=\"center\">Просмотрел</TableCell>\r\n                      <TableCell align=\"center\">Хочет отправить контакты</TableCell>\r\n                      <TableCell align=\"center\">Email</TableCell>\r\n                      <TableCell align=\"center\">Оценка</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {row.usersWhoWatchedSpeaker.map((historyRow) => (\r\n                      <TableRow key={historyRow.id}>\r\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                          {`${historyRow.firstName} ${historyRow.lastName}`}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            defaultChecked\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            checked={renderContactCheckbox(historyRow)}\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{`${historyRow.email || '-'}`}</TableCell>\r\n                        <TableCell align=\"center\">{renderRate(historyRow)}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.pageNameContainer} component=\"main\" maxWidth=\"xs\">\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Просмотра Статистики\r\n          </Typography>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <div className={classes.root}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell align=\"center\">Имя Фамилия спикера</TableCell>\r\n                <TableCell align=\"center\">Количество просмотров</TableCell>\r\n                <TableCell align=\"center\">Количество оценок</TableCell>\r\n                <TableCell align=\"center\">Средняя оценка</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataForStatsViewer && dataForStatsViewer.map((row) => (\r\n                <Row key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(StatsPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["145"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["146","147","148","149","150","151","152"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["153"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["154","155","156","157","158","159","160"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n\n// Login\nexport const apiGetUser = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getUser}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiVoteForSpeaker = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  rate: number | null,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.voteForSpeaker}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId, rate }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakers = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakers}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateContactedSpeakers = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateContactedSpeakers}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakersAllInSession = async (\n  sessionId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakersAll}`;\n\n  try {\n    const { data } = await axios.post(url, { sessionId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiGetAllChannels = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getAllChannels}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserChangeActiveChannel = async (\n  channelNumber: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelNumber, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["161","162","163","164"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\nexport const apiChangeActiveSpeakerInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  speakerIdToActivate: number,\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveSpeakerInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerIdToActivate, channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetBrakeInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  channelForShowingNumber: number,\n  prevSpeakerid: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setBrakeInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelForShowingNumber, prevSpeakerid }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetLogistOfTheYearSession = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setLogistOfTheYear}`;\n\n  try {\n    const { data } = await axios.post(url, {}, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiDisableLogistOfTheYearSession = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.disableLogistOfTheYear}`;\n\n  try {\n    const { data } = await axios.post(url, {}, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts",["165"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n\nexport const apiGetStats = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getStats}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["166"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["167","168","169","170","171","172","173","174"],"import React, { memo, useState } from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport Iframe from 'react-iframe';\r\nimport { createPortal } from 'react-dom';\r\nimport useStyles from './style';\r\n\r\nconst VideoPlayerMain = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [contentRef, setContentRef] = useState(null);\r\n  const mountNode = contentRef;\r\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\r\n\r\n  const playVideo = (): any => {\r\n\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      data-testid=\"loading-page\"\r\n    >\r\n      <div\r\n        className={props.classNameInner}\r\n        ref={inputRef}\r\n      >\r\n        <Iframe\r\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\r\n          url={props.videoURL}\r\n          width=\"100%\"\r\n          height={props.height}\r\n          position=\"relative\"\r\n          allow=\"fullscreen\"\r\n          onLoad={playVideo()}\r\n        />\r\n      </div>\r\n    </Grid>\r\n\r\n  );\r\n};\r\n\r\nexport default memo(VideoPlayerMain);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["175","176"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["177","178","179","180","181","182","183","184","185"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\capitalizeFirstLetter.helper.ts",["186"],"/* eslint-disable import/prefer-default-export */\nexport const capitalizeFirstLetter = (string: string) => string\n  .charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":16,"column":8,"nodeType":"201","messageId":"202","endLine":16,"endColumn":17},{"ruleId":"199","severity":1,"message":"203","line":20,"column":18,"nodeType":"201","messageId":"202","endLine":20,"endColumn":27},{"ruleId":"199","severity":1,"message":"204","line":24,"column":20,"nodeType":"201","messageId":"202","endLine":24,"endColumn":31},{"ruleId":"199","severity":1,"message":"205","line":19,"column":3,"nodeType":"201","messageId":"202","endLine":19,"endColumn":14},{"ruleId":"199","severity":1,"message":"206","line":19,"column":16,"nodeType":"201","messageId":"202","endLine":19,"endColumn":22},{"ruleId":"199","severity":1,"message":"207","line":28,"column":11,"nodeType":"201","messageId":"202","endLine":28,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":33,"column":23,"nodeType":"210","messageId":"211","endLine":33,"endColumn":26,"suggestions":"212"},{"ruleId":"208","severity":1,"message":"209","line":98,"column":37,"nodeType":"210","messageId":"211","endLine":98,"endColumn":40,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":99,"column":34,"nodeType":"216","messageId":"217","endLine":99,"endColumn":38,"suggestions":"218"},{"ruleId":"208","severity":1,"message":"209","line":100,"column":19,"nodeType":"210","messageId":"211","endLine":100,"endColumn":22,"suggestions":"219"},{"ruleId":"208","severity":1,"message":"209","line":107,"column":48,"nodeType":"210","messageId":"211","endLine":107,"endColumn":51,"suggestions":"220"},{"ruleId":"221","severity":1,"message":"222","line":108,"column":7,"nodeType":"223","messageId":"224","endLine":108,"endColumn":18},{"ruleId":"214","severity":1,"message":"215","line":110,"column":37,"nodeType":"216","messageId":"217","endLine":110,"endColumn":41,"suggestions":"225"},{"ruleId":"208","severity":1,"message":"209","line":111,"column":19,"nodeType":"210","messageId":"211","endLine":111,"endColumn":22,"suggestions":"226"},{"ruleId":"208","severity":1,"message":"209","line":54,"column":23,"nodeType":"210","messageId":"211","endLine":54,"endColumn":26,"suggestions":"227"},{"ruleId":"199","severity":1,"message":"228","line":29,"column":45,"nodeType":"201","messageId":"202","endLine":29,"endColumn":75},{"ruleId":"208","severity":1,"message":"209","line":270,"column":47,"nodeType":"210","messageId":"211","endLine":270,"endColumn":50,"suggestions":"229"},{"ruleId":"208","severity":1,"message":"209","line":292,"column":46,"nodeType":"210","messageId":"211","endLine":292,"endColumn":49,"suggestions":"230"},{"ruleId":"208","severity":1,"message":"209","line":321,"column":62,"nodeType":"210","messageId":"211","endLine":321,"endColumn":65,"suggestions":"231"},{"ruleId":"208","severity":1,"message":"209","line":337,"column":67,"nodeType":"210","messageId":"211","endLine":337,"endColumn":70,"suggestions":"232"},{"ruleId":"208","severity":1,"message":"209","line":374,"column":41,"nodeType":"210","messageId":"211","endLine":374,"endColumn":44,"suggestions":"233"},{"ruleId":"214","severity":1,"message":"215","line":375,"column":28,"nodeType":"216","messageId":"217","endLine":375,"endColumn":40,"suggestions":"234"},{"ruleId":"208","severity":1,"message":"209","line":10,"column":12,"nodeType":"210","messageId":"211","endLine":10,"endColumn":15,"suggestions":"235"},{"ruleId":"208","severity":1,"message":"209","line":13,"column":12,"nodeType":"210","messageId":"211","endLine":13,"endColumn":15,"suggestions":"236"},{"ruleId":"208","severity":1,"message":"209","line":36,"column":12,"nodeType":"210","messageId":"211","endLine":36,"endColumn":15,"suggestions":"237"},{"ruleId":"208","severity":1,"message":"209","line":58,"column":12,"nodeType":"210","messageId":"211","endLine":58,"endColumn":15,"suggestions":"238"},{"ruleId":"208","severity":1,"message":"209","line":80,"column":12,"nodeType":"210","messageId":"211","endLine":80,"endColumn":15,"suggestions":"239"},{"ruleId":"208","severity":1,"message":"209","line":102,"column":12,"nodeType":"210","messageId":"211","endLine":102,"endColumn":15,"suggestions":"240"},{"ruleId":"208","severity":1,"message":"209","line":124,"column":12,"nodeType":"210","messageId":"211","endLine":124,"endColumn":15,"suggestions":"241"},{"ruleId":"208","severity":1,"message":"209","line":146,"column":12,"nodeType":"210","messageId":"211","endLine":146,"endColumn":15,"suggestions":"242"},{"ruleId":"208","severity":1,"message":"209","line":13,"column":12,"nodeType":"210","messageId":"211","endLine":13,"endColumn":15,"suggestions":"243"},{"ruleId":"208","severity":1,"message":"209","line":35,"column":12,"nodeType":"210","messageId":"211","endLine":35,"endColumn":15,"suggestions":"244"},{"ruleId":"208","severity":1,"message":"209","line":56,"column":12,"nodeType":"210","messageId":"211","endLine":56,"endColumn":15,"suggestions":"245"},{"ruleId":"208","severity":1,"message":"209","line":77,"column":12,"nodeType":"210","messageId":"211","endLine":77,"endColumn":15,"suggestions":"246"},{"ruleId":"208","severity":1,"message":"209","line":12,"column":12,"nodeType":"210","messageId":"211","endLine":12,"endColumn":15,"suggestions":"247"},{"ruleId":"199","severity":1,"message":"248","line":2,"column":10,"nodeType":"201","messageId":"202","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"249","line":2,"column":16,"nodeType":"201","messageId":"202","endLine":2,"endColumn":32},{"ruleId":"199","severity":1,"message":"250","line":4,"column":10,"nodeType":"201","messageId":"202","endLine":4,"endColumn":22},{"ruleId":"208","severity":1,"message":"209","line":7,"column":33,"nodeType":"210","messageId":"211","endLine":7,"endColumn":36,"suggestions":"251"},{"ruleId":"199","severity":1,"message":"252","line":8,"column":9,"nodeType":"201","messageId":"202","endLine":8,"endColumn":16},{"ruleId":"199","severity":1,"message":"253","line":10,"column":22,"nodeType":"201","messageId":"202","endLine":10,"endColumn":35},{"ruleId":"199","severity":1,"message":"254","line":11,"column":9,"nodeType":"201","messageId":"202","endLine":11,"endColumn":18},{"ruleId":"208","severity":1,"message":"209","line":12,"column":19,"nodeType":"210","messageId":"211","endLine":12,"endColumn":22,"suggestions":"255"},{"ruleId":"208","severity":1,"message":"209","line":14,"column":25,"nodeType":"210","messageId":"211","endLine":14,"endColumn":28,"suggestions":"256"},{"ruleId":"208","severity":1,"message":"209","line":13,"column":34,"nodeType":"210","messageId":"211","endLine":13,"endColumn":37,"suggestions":"257"},{"ruleId":"208","severity":1,"message":"209","line":137,"column":19,"nodeType":"210","messageId":"211","endLine":137,"endColumn":22,"suggestions":"258"},{"ruleId":"208","severity":1,"message":"209","line":48,"column":42,"nodeType":"210","messageId":"211","endLine":48,"endColumn":45,"suggestions":"259"},{"ruleId":"208","severity":1,"message":"209","line":71,"column":19,"nodeType":"210","messageId":"211","endLine":71,"endColumn":22,"suggestions":"260"},{"ruleId":"208","severity":1,"message":"209","line":85,"column":19,"nodeType":"210","messageId":"211","endLine":85,"endColumn":22,"suggestions":"261"},{"ruleId":"208","severity":1,"message":"209","line":93,"column":25,"nodeType":"210","messageId":"211","endLine":93,"endColumn":28,"suggestions":"262"},{"ruleId":"208","severity":1,"message":"209","line":108,"column":41,"nodeType":"210","messageId":"211","endLine":108,"endColumn":44,"suggestions":"263"},{"ruleId":"214","severity":1,"message":"215","line":110,"column":11,"nodeType":"216","messageId":"217","endLine":110,"endColumn":47,"suggestions":"264"},{"ruleId":"214","severity":1,"message":"215","line":111,"column":27,"nodeType":"216","messageId":"217","endLine":111,"endColumn":63,"suggestions":"265"},{"ruleId":"208","severity":1,"message":"209","line":112,"column":18,"nodeType":"210","messageId":"211","endLine":112,"endColumn":21,"suggestions":"266"},{"ruleId":"208","severity":1,"message":"209","line":335,"column":46,"nodeType":"210","messageId":"211","endLine":335,"endColumn":49,"suggestions":"267"},{"ruleId":"268","severity":1,"message":"269","line":2,"column":38,"nodeType":"270","messageId":"271","endLine":2,"endColumn":57},"lines-around-directive",["272"],"no-spaced-func",["273"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'LoginPage' is defined but never used.","Identifier","unusedVar","'setIsAuth' is assigned a value but never used.","'setUserData' is assigned a value but never used.","'useLocation' is defined but never used.","'Prompt' is defined but never used.","'Props' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["274","275"],["276","277"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["278"],["279","280"],["281","282"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["283"],["284","285"],["286","287"],"'apiUserUpdateContactedSpeakers' is defined but never used.",["288","289"],["290","291"],["292","293"],["294","295"],["296","297"],["298"],["299","300"],["301","302"],["303","304"],["305","306"],["307","308"],["309","310"],["311","312"],["313","314"],["315","316"],["317","318"],["319","320"],["321","322"],["323","324"],"'Hidden' is defined but never used.","'CircularProgress' is defined but never used.","'createPortal' is defined but never used.",["325","326"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["327","328"],["329","330"],["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],["341","342"],["343","344"],["345"],["346"],["347","348"],["349","350"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","padding-line-between-statements","func-call-spacing",{"messageId":"351","fix":"352","desc":"353"},{"messageId":"354","fix":"355","desc":"356"},{"messageId":"351","fix":"357","desc":"353"},{"messageId":"354","fix":"358","desc":"356"},{"messageId":"359","fix":"360","desc":"361"},{"messageId":"351","fix":"362","desc":"353"},{"messageId":"354","fix":"363","desc":"356"},{"messageId":"351","fix":"364","desc":"353"},{"messageId":"354","fix":"365","desc":"356"},{"messageId":"359","fix":"366","desc":"361"},{"messageId":"351","fix":"367","desc":"353"},{"messageId":"354","fix":"368","desc":"356"},{"messageId":"351","fix":"369","desc":"353"},{"messageId":"354","fix":"370","desc":"356"},{"messageId":"351","fix":"371","desc":"353"},{"messageId":"354","fix":"372","desc":"356"},{"messageId":"351","fix":"373","desc":"353"},{"messageId":"354","fix":"374","desc":"356"},{"messageId":"351","fix":"375","desc":"353"},{"messageId":"354","fix":"376","desc":"356"},{"messageId":"351","fix":"377","desc":"353"},{"messageId":"354","fix":"378","desc":"356"},{"messageId":"351","fix":"379","desc":"353"},{"messageId":"354","fix":"380","desc":"356"},{"messageId":"359","fix":"381","desc":"361"},{"messageId":"351","fix":"382","desc":"353"},{"messageId":"354","fix":"383","desc":"356"},{"messageId":"351","fix":"384","desc":"353"},{"messageId":"354","fix":"385","desc":"356"},{"messageId":"351","fix":"386","desc":"353"},{"messageId":"354","fix":"387","desc":"356"},{"messageId":"351","fix":"388","desc":"353"},{"messageId":"354","fix":"389","desc":"356"},{"messageId":"351","fix":"390","desc":"353"},{"messageId":"354","fix":"391","desc":"356"},{"messageId":"351","fix":"392","desc":"353"},{"messageId":"354","fix":"393","desc":"356"},{"messageId":"351","fix":"394","desc":"353"},{"messageId":"354","fix":"395","desc":"356"},{"messageId":"351","fix":"396","desc":"353"},{"messageId":"354","fix":"397","desc":"356"},{"messageId":"351","fix":"398","desc":"353"},{"messageId":"354","fix":"399","desc":"356"},{"messageId":"351","fix":"400","desc":"353"},{"messageId":"354","fix":"401","desc":"356"},{"messageId":"351","fix":"402","desc":"353"},{"messageId":"354","fix":"403","desc":"356"},{"messageId":"351","fix":"404","desc":"353"},{"messageId":"354","fix":"405","desc":"356"},{"messageId":"351","fix":"406","desc":"353"},{"messageId":"354","fix":"407","desc":"356"},{"messageId":"351","fix":"408","desc":"353"},{"messageId":"354","fix":"409","desc":"356"},{"messageId":"351","fix":"410","desc":"353"},{"messageId":"354","fix":"411","desc":"356"},{"messageId":"351","fix":"412","desc":"353"},{"messageId":"354","fix":"413","desc":"356"},{"messageId":"351","fix":"414","desc":"353"},{"messageId":"354","fix":"415","desc":"356"},{"messageId":"351","fix":"416","desc":"353"},{"messageId":"354","fix":"417","desc":"356"},{"messageId":"351","fix":"418","desc":"353"},{"messageId":"354","fix":"419","desc":"356"},{"messageId":"351","fix":"420","desc":"353"},{"messageId":"354","fix":"421","desc":"356"},{"messageId":"351","fix":"422","desc":"353"},{"messageId":"354","fix":"423","desc":"356"},{"messageId":"351","fix":"424","desc":"353"},{"messageId":"354","fix":"425","desc":"356"},{"messageId":"351","fix":"426","desc":"353"},{"messageId":"354","fix":"427","desc":"356"},{"messageId":"359","fix":"428","desc":"361"},{"messageId":"359","fix":"429","desc":"361"},{"messageId":"351","fix":"430","desc":"353"},{"messageId":"354","fix":"431","desc":"356"},{"messageId":"351","fix":"432","desc":"353"},{"messageId":"354","fix":"433","desc":"356"},"suggestUnknown",{"range":"434","text":"435"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"434","text":"436"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"437","text":"435"},{"range":"437","text":"436"},"suggestOptionalChain",{"range":"438","text":"439"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"440","text":"435"},{"range":"440","text":"436"},{"range":"441","text":"435"},{"range":"441","text":"436"},{"range":"442","text":"439"},{"range":"443","text":"435"},{"range":"443","text":"436"},{"range":"444","text":"435"},{"range":"444","text":"436"},{"range":"445","text":"435"},{"range":"445","text":"436"},{"range":"446","text":"435"},{"range":"446","text":"436"},{"range":"447","text":"435"},{"range":"447","text":"436"},{"range":"448","text":"435"},{"range":"448","text":"436"},{"range":"449","text":"435"},{"range":"449","text":"436"},{"range":"450","text":"439"},{"range":"451","text":"435"},{"range":"451","text":"436"},{"range":"452","text":"435"},{"range":"452","text":"436"},{"range":"453","text":"435"},{"range":"453","text":"436"},{"range":"454","text":"435"},{"range":"454","text":"436"},{"range":"455","text":"435"},{"range":"455","text":"436"},{"range":"456","text":"435"},{"range":"456","text":"436"},{"range":"457","text":"435"},{"range":"457","text":"436"},{"range":"458","text":"435"},{"range":"458","text":"436"},{"range":"459","text":"435"},{"range":"459","text":"436"},{"range":"460","text":"435"},{"range":"460","text":"436"},{"range":"461","text":"435"},{"range":"461","text":"436"},{"range":"462","text":"435"},{"range":"462","text":"436"},{"range":"463","text":"435"},{"range":"463","text":"436"},{"range":"464","text":"435"},{"range":"464","text":"436"},{"range":"465","text":"435"},{"range":"465","text":"436"},{"range":"466","text":"435"},{"range":"466","text":"436"},{"range":"467","text":"435"},{"range":"467","text":"436"},{"range":"468","text":"435"},{"range":"468","text":"436"},{"range":"469","text":"435"},{"range":"469","text":"436"},{"range":"470","text":"435"},{"range":"470","text":"436"},{"range":"471","text":"435"},{"range":"471","text":"436"},{"range":"472","text":"435"},{"range":"472","text":"436"},{"range":"473","text":"435"},{"range":"473","text":"436"},{"range":"474","text":"439"},{"range":"475","text":"439"},{"range":"476","text":"435"},{"range":"476","text":"436"},{"range":"477","text":"435"},{"range":"477","text":"436"},[965,968],"unknown","never",[2867,2870],[2914,2915],"?",[2947,2950],[3205,3208],[3294,3295],[3342,3345],[1552,1555],[9702,9705],[10305,10308],[11079,11082],[11574,11577],[12777,12780],[12826,12827],[222,225],[263,266],[754,757],[1261,1264],[1775,1778],[2301,2304],[2785,2788],[3273,3276],[361,364],[916,919],[1403,1406],[1855,1858],[255,258],[256,259],[407,410],[511,514],[536,539],[4683,4686],[1531,1534],[2328,2331],[2785,2788],[3140,3143],[3891,3894],[3995,3996],[4073,4074],[4099,4102],[11776,11779]]