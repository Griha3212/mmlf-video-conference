[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"28","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"29","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"30"},{"size":545,"mtime":1610473645677,"results":"31","hashOfConfig":"32"},{"size":436,"mtime":1609149080634,"results":"33","hashOfConfig":"32"},{"size":1020,"mtime":1610988569202,"results":"34","hashOfConfig":"32"},{"size":88,"mtime":1609151476043,"results":"35","hashOfConfig":"32"},{"size":254,"mtime":1609941695606,"results":"36","hashOfConfig":"32"},{"size":4843,"mtime":1610437764729,"results":"37","hashOfConfig":"32"},{"size":845,"mtime":1609924589133,"results":"38","hashOfConfig":"32"},{"size":433,"mtime":1609754100539,"results":"39","hashOfConfig":"32"},{"size":314,"mtime":1610960700943,"results":"40","hashOfConfig":"32"},{"size":2980,"mtime":1610443450073,"results":"41","hashOfConfig":"32"},{"size":455,"mtime":1609923543629,"results":"42","hashOfConfig":"32"},{"size":304,"mtime":1609923543632,"results":"43","hashOfConfig":"32"},{"size":368,"mtime":1609937434279,"results":"44","hashOfConfig":"32"},{"size":5903,"mtime":1610988640873,"results":"45","hashOfConfig":"32"},{"size":948,"mtime":1610805274238,"results":"46","hashOfConfig":"32"},{"size":360,"mtime":1609927664710,"results":"47","hashOfConfig":"32"},{"size":474,"mtime":1609927609396,"results":"48","hashOfConfig":"32"},{"size":9623,"mtime":1611038159911,"results":"49","hashOfConfig":"32"},{"size":2013,"mtime":1610559596608,"results":"50","hashOfConfig":"32"},{"size":752,"mtime":1610469885795,"results":"51","hashOfConfig":"32"},{"size":1126,"mtime":1610644921808,"results":"52","hashOfConfig":"32"},{"size":304,"mtime":1610521474487,"results":"53","hashOfConfig":"32"},{"size":4630,"mtime":1611000818278,"results":"54","hashOfConfig":"32"},{"size":3195,"mtime":1610889342460,"results":"55","hashOfConfig":"32"},{"size":804,"mtime":1610544223943,"results":"56","hashOfConfig":"32"},{"size":304,"mtime":1610534492141,"results":"57","hashOfConfig":"32"},{"size":1116,"mtime":1610960707514,"results":"58","hashOfConfig":"32"},{"size":1217,"mtime":1610804935909,"results":"59","hashOfConfig":"32"},{"size":7975,"mtime":1611037616340,"results":"60","hashOfConfig":"32"},{"size":3774,"mtime":1610912132641,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"vtgqsx",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"65"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",["137","138"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './indexTheme';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["139","140","141","142","143","144"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts",["145"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",["146"],"const getLocalStorageData = (): any => {\n  const accessToken = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n\n  return {\n    token: { accessToken, refreshToken },\n  };\n};\n\nexport default getLocalStorageData;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["147","148","149","150"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["151"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["152","153","154","155","156","157","158"],"import React, {\r\n  FC, memo, useEffect, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\ninterface UserData {\r\n  isAdmin: boolean;\r\n}\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  // const loadUserInfoFromLocalStorage = async () => {\r\n  //   if (token.accessToken && token.refreshToken) {\r\n  //     setUserData(parseToken(token.accessToken as string));\r\n  //     console.log('here admin :>> ');\r\n  //     console.log('userData', parseToken(token.accessToken as string));\r\n  //     setIsAuth(true);\r\n  //   } else {\r\n  //     setIsAuth(false);\r\n  //   }\r\n  // };\r\n\r\n  // loadUserInfoFromLocalStorage();\r\n\r\n  // useEffect(() => {\r\n  //   loadUserInfoFromLocalStorage();\r\n\r\n  //   // if (token.accessToken && token.refreshToken) {\r\n  //   //   setUserData(parseToken(token.accessToken as string));\r\n  //   //   console.log('here admin :>> ');\r\n  //   //   console.log('userData', userData);\r\n  //   //   setIsAuth(true);\r\n  //   // } else {\r\n  //   //   setIsAuth(false);\r\n  //   // }\r\n  // }, []);\r\n\r\n  console.log('userData ProtectedRoutes :>> ', userData);\r\n\r\n  // // if (!isAdmin) return <Redirect to=\"/signin\" />;\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (userData.hasAccessToStatisticPage) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // if (isAuth && !userData?.isAdmin) return <Redirect to=\"/user\" />;\r\n  // if (isAuth && userData?.isAdmin) return <Redirect to=\"/admin\" />;\r\n\r\n  //   return (\r\n  //     <Route\r\n  //       {...rest}\r\n  //       render={props =>\r\n  //         isLoggedIn ? (\r\n  //           <Component {...props} />\r\n  //         ) : (\r\n  //             <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n  //           )\r\n  //       }\r\n  //     />\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n\r\n  // return (\r\n\r\n  //   <Switch>\r\n  //     {(userData && userData.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n  //   </Switch>\r\n\r\n  // );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["159","160","161","162","163","164"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",["165"],"export const parseToken = (token: string) => {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  const jsonPayload = JSON.parse(decodeURIComponent(atob(base64).split('').map((c) => `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`).join('')));\r\n  return jsonPayload;\r\n};\r\n\r\nexport default parseToken;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["166","167","168","169","170","171","172","173","174"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm } from 'react-hook-form';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport clsx from 'clsx';\r\nimport useStyles from './style';\r\nimport { apiGetUser } from '../../api/user';\r\nimport parseToken from '../../utils/parseToken';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { apiChangeActiveSpeakerInChannel, apiSetBrakeInChannel } from '../../api/admin';\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\ntype DataForAdmin = {\r\n  channelForShowing: {\r\n    break: boolean, id: number, link: string,\r\n    number: number\r\n  },\r\n  description: string;\r\n  id: number;\r\n  letter: string;\r\n  name: string;\r\n  speakers: Array<Speaker>\r\n\r\n};\r\n\r\ntype FormData = {\r\n  loginCode: string;\r\n};\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AdminPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [error]: [string, (error: string) => void] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [activeSpeaker, setActiveSpeaker] = React.useState('');\r\n\r\n  const [selectedSpeakerToActivate, setSelectedSpeakerToActivate] = React.useState('');\r\n\r\n  const [dataForAdmin, setDataForAdmin] = React.useState<DataForAdmin>();\r\n\r\n  const loadDataForAdmin = async () => {\r\n    const response = await apiGetUser(userData.id, token);\r\n    setDataForAdmin(response);\r\n\r\n    if (response && response.channelForShowing && response.channelForShowing.activeSpeaker) {\r\n      setActiveSpeaker(`${response.channelForShowing.activeSpeaker.lastName} ${response.channelForShowing.activeSpeaker.firstName}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForAdmin();\r\n  }, []);\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  const activateSelectedSpeaker = async (speakerId: string) => {\r\n    const response = await apiChangeActiveSpeakerInChannel(\r\n      token,\r\n      Number(speakerId),\r\n      Number(dataForAdmin && dataForAdmin.channelForShowing.number),\r\n    );\r\n\r\n    setActiveSpeaker(`${response.lastName} ${response.firstName}`);\r\n  };\r\n\r\n  const setBreakBetweenSessions = async () => {\r\n    setActiveSpeaker('');\r\n  };\r\n\r\n  const renderSpeakersDataForAdmin = (element: Speaker) => {\r\n    if (!element.isModerator) {\r\n      return (\r\n\r\n        <Grid container xs={12} justify=\"center\">\r\n          <Button\r\n            onClick={(e) => { setSelectedSpeakerToActivate(e.currentTarget.value); }}\r\n            value={element.id}\r\n            data-id=\"\"\r\n            className={classes.speakerButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {`${element.lastName}  ${element.firstName}`}\r\n          </Button>\r\n        </Grid>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Администратора\r\n\r\n          </Typography>\r\n          <p>\r\n            {' '}\r\n            {dataForAdmin && dataForAdmin.letter}\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <Grid container>\r\n        <Grid item container xs={6}>\r\n\r\n          <Grid item xs={6}>\r\n            {\r\n              dataForAdmin && dataForAdmin.speakers.map(\r\n                (element) => renderSpeakersDataForAdmin(element),\r\n              )\r\n            }\r\n          </Grid>\r\n\r\n          <Grid item justify=\"center\" xs={6}>\r\n            <p className={classes.textCenter}>\r\n              {' '}\r\n              <Button onClick={() => activateSelectedSpeaker(selectedSpeakerToActivate)} variant=\"contained\" color=\"primary\">Активировать выбранного спикера</Button>\r\n            </p>\r\n\r\n            <p className={classes.textCenter}>\r\n              {' '}\r\n              <Button onClick={() => setBreakBetweenSessions()} variant=\"contained\" color=\"primary\">Активировать перерыв</Button>\r\n              {' '}\r\n            </p>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <p>\r\n            Активный спикер:\r\n            {' '}\r\n            {`${activeSpeaker}`}\r\n          </p>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AdminPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["175"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["176","177","178","179","180","181","182","183"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts",["184"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["185","186","187","188","189","190","191","192"],"import React, { memo, useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport { createPortal } from 'react-dom';\nimport useStyles from './style';\n\nconst VideoPlayerMain = (props: any) => {\n  const classes = useStyles();\n\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef;\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\n\n  const playVideo = (): any => {\n\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      data-testid=\"loading-page\"\n    >\n      <div\n        className=\"myClassname2\"\n        ref={inputRef}\n      >\n        <Iframe\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\n          url={props.videoURL}\n          width=\"100%\"\n          height=\"auto\"\n          id=\"myId\"\n          className=\"myClassname\"\n          position=\"relative\"\n          allow=\"fullscreen\"\n          onLoad={playVideo()}\n        />\n      </div>\n    </Grid>\n\n  );\n};\n\nexport default memo(VideoPlayerMain);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["193","194","195","196","197","198","199","200"],"import React, { memo, useEffect } from 'react';\nimport {\n  Grid, CircularProgress, Typography, Button,\n} from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport Divider from '@material-ui/core/Divider';\nimport useStyles from './style';\nimport VideoPlayerMain from '../VideoPlayerMain/VideoPlayerMain';\nimport ModeratorCard from '../ModeratorCard/ModeratorCard';\nimport noAvatar from '../../img/speakersImg/noAvatar.svg';\nimport { apiVoteForSpeaker } from '../../api/user';\n\nconst SessionInfoBlock = (props: any) => {\n  const { currentSpeakerInfo, currentSpeakerRate, activeSessionSpeakersAllRates } = props;\n  const classes = useStyles();\n  const [rate, setRate] = React.useState<number | null>(currentSpeakerRate || null);\n\n  useEffect(() => {\n    setRate(currentSpeakerRate);\n  }, [currentSpeakerRate]);\n\n  const sendVoteForSpeaker = async (rateDirectlyFromUI: number | null) => {\n    const response = await apiVoteForSpeaker(\n      props.currentSpeakerInfo.id,\n      props.userId,\n      props.token,\n      rateDirectlyFromUI,\n    );\n  };\n\n  return (\n    <>\n\n      <Grid item container className={classes.darkBlueBckg}>\n        <Grid item xs={12}>\n          <p className={props.currentSessionLetter && props.currentSessionLetter.length > 10\n            ? classes.sessionLetterTextLong : classes.sessionLetterText}\n          >\n            {props.currentSessionLetter || 'Сессия #'}\n          </p>\n\n        </Grid>\n\n        <p className={classes.sessionNameText}>\n          {props.currentSessionDescription || 'Тема сессии'}\n        </p>\n\n      </Grid>\n\n      <Grid item container justify=\"space-between\" className={classes.lightBlueBckg}>\n\n        <Grid item className={classes.speakerInfoBlock} xs={8}>\n          <p className={classes.speakerTheme}>\n            {currentSpeakerInfo && currentSpeakerInfo.topicName || 'Тема доклада'}\n          </p>\n\n          <Grid container spacing={5}>\n\n            <Grid item xs={2}>\n              <img className={classes.speakerAvatarImg} width=\"100%\" src={currentSpeakerInfo && currentSpeakerInfo.linkToImg || noAvatar} alt=\"\" />\n\n            </Grid>\n            <Grid item xs={8}>\n              <p className={classes.speakerHeaderText}>Спикер</p>\n              <p className={classes.speakerFullNameText}>{`${currentSpeakerInfo && currentSpeakerInfo.lastName || 'ФАМИЛИЯ'} ${currentSpeakerInfo && currentSpeakerInfo.firstName || 'Имя'}`}</p>\n              <p className={classes.speakerFullCompanyText}>{`${currentSpeakerInfo && currentSpeakerInfo.company || 'Компания'}, ${currentSpeakerInfo && currentSpeakerInfo.statusInCompany || 'должность'}`}</p>\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n        <Grid alignItems=\"center\" alignContent=\"center\" xs={3}>\n\n          <p className={classes.textCenter}>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography className={classes.rateSpeakerText} component=\"legend\">Оцените выступление</Typography>\n              <Rating\n                className={classes.rateSpeakerStarsImg}\n                name=\"simple-controlled\"\n                value={rate}\n                onChange={async (event, newValue) => {\n                  setRate(newValue);\n                  sendVoteForSpeaker(newValue);\n                }}\n              />\n            </Box>\n          </p>\n\n          <p className={classes.textCenter}>\n            <Button\n              onClick={() => window.open(`${currentSpeakerInfo && currentSpeakerInfo.linkToPresentation}`, '_blank')}\n              className={classes.loadPresenationButton}\n            >\n              Скачать презентацию\n\n            </Button>\n          </p>\n\n          {\n            currentSpeakerInfo && currentSpeakerInfo.linkToZoom ? (\n              <p className={classes.textCenter}>\n                <Button\n                  onClick={() => window.open(`${currentSpeakerInfo && currentSpeakerInfo.linkToZoom}`, '_blank')}\n                  className={classes.goToZoomButton}\n                >\n                  Перейти в Zoom\n\n                </Button>\n              </p>\n            ) : null\n          }\n\n        </Grid>\n\n        {/* <p className={classes.speakerTheme}>\n          {props.currentSpeakerTheme || 'Тема доклада'}\n        </p>\n        <p className={classes.sessionNameText}>\n          {props.currentSessionName || 'Тема сессии'}\n        </p> */}\n\n      </Grid>\n\n    </>\n  );\n};\n\nexport default memo(SessionInfoBlock);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx",["201","202","203","204","205","206","207","208","209","210"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["211","212"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiGetUser = async (\n  userId: string,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getUser}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiVoteForSpeaker = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  rate: number | null,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.voteForSpeaker}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId, rate }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["213","214"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\nexport const apiChangeActiveSpeakerInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  speakerIdToActivate: number,\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveSpeakerInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerIdToActivate, channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetBrakeInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setBrakeInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["215","216","217","218","219"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],{"ruleId":"220","severity":1,"message":"221","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":23},{"ruleId":"220","severity":1,"message":"224","line":7,"column":10,"nodeType":"222","messageId":"223","endLine":7,"endColumn":15},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":3,"column":25,"nodeType":"239","messageId":"240","endLine":3,"endColumn":57},{"ruleId":"241","severity":1,"message":"242","line":1,"column":33,"nodeType":"243","messageId":"244","endLine":1,"endColumn":36,"suggestions":"245"},{"ruleId":"220","severity":1,"message":"246","line":19,"column":3,"nodeType":"222","messageId":"223","endLine":19,"endColumn":14},{"ruleId":"220","severity":1,"message":"247","line":19,"column":16,"nodeType":"222","messageId":"223","endLine":19,"endColumn":22},{"ruleId":"220","severity":1,"message":"248","line":28,"column":11,"nodeType":"222","messageId":"223","endLine":28,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":33,"column":23,"nodeType":"243","messageId":"244","endLine":33,"endColumn":26,"suggestions":"249"},{"ruleId":"241","severity":1,"message":"242","line":10,"column":12,"nodeType":"243","messageId":"244","endLine":10,"endColumn":15,"suggestions":"250"},{"ruleId":"220","severity":1,"message":"251","line":2,"column":13,"nodeType":"222","messageId":"223","endLine":2,"endColumn":22},{"ruleId":"220","severity":1,"message":"252","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":19},{"ruleId":"220","severity":1,"message":"253","line":16,"column":8,"nodeType":"222","messageId":"223","endLine":16,"endColumn":17},{"ruleId":"220","severity":1,"message":"254","line":19,"column":11,"nodeType":"222","messageId":"223","endLine":19,"endColumn":19},{"ruleId":"220","severity":1,"message":"255","line":24,"column":18,"nodeType":"222","messageId":"223","endLine":24,"endColumn":27},{"ruleId":"220","severity":1,"message":"256","line":28,"column":20,"nodeType":"222","messageId":"223","endLine":28,"endColumn":31},{"ruleId":"257","severity":1,"message":"258","line":56,"column":3,"nodeType":"259","messageId":"260","endLine":56,"endColumn":14},{"ruleId":"225","replacedBy":"261"},{"ruleId":"227","replacedBy":"262"},{"ruleId":"229","replacedBy":"263"},{"ruleId":"231","replacedBy":"264"},{"ruleId":"233","replacedBy":"265"},{"ruleId":"235","replacedBy":"266"},{"ruleId":"237","severity":1,"message":"238","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":51},{"ruleId":"220","severity":1,"message":"267","line":18,"column":10,"nodeType":"222","messageId":"223","endLine":18,"endColumn":17},{"ruleId":"220","severity":1,"message":"268","line":21,"column":8,"nodeType":"222","messageId":"223","endLine":21,"endColumn":12},{"ruleId":"220","severity":1,"message":"269","line":26,"column":43,"nodeType":"222","messageId":"223","endLine":26,"endColumn":63},{"ruleId":"220","severity":1,"message":"270","line":56,"column":6,"nodeType":"222","messageId":"223","endLine":56,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":60,"column":23,"nodeType":"243","messageId":"244","endLine":60,"endColumn":26,"suggestions":"271"},{"ruleId":"220","severity":1,"message":"272","line":69,"column":10,"nodeType":"222","messageId":"223","endLine":69,"endColumn":17},{"ruleId":"220","severity":1,"message":"273","line":69,"column":19,"nodeType":"222","messageId":"223","endLine":69,"endColumn":29},{"ruleId":"220","severity":1,"message":"274","line":70,"column":10,"nodeType":"222","messageId":"223","endLine":70,"endColumn":17},{"ruleId":"220","severity":1,"message":"275","line":70,"column":19,"nodeType":"222","messageId":"223","endLine":70,"endColumn":29},{"ruleId":"220","severity":1,"message":"276","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":16},{"ruleId":"220","severity":1,"message":"277","line":6,"column":3,"nodeType":"222","messageId":"223","endLine":6,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":73,"column":23,"nodeType":"243","messageId":"244","endLine":73,"endColumn":26,"suggestions":"278"},{"ruleId":"241","severity":1,"message":"242","line":137,"column":48,"nodeType":"243","messageId":"244","endLine":137,"endColumn":51,"suggestions":"279"},{"ruleId":"241","severity":1,"message":"242","line":139,"column":56,"nodeType":"243","messageId":"244","endLine":139,"endColumn":59,"suggestions":"280"},{"ruleId":"241","severity":1,"message":"242","line":164,"column":21,"nodeType":"243","messageId":"244","endLine":164,"endColumn":24,"suggestions":"281"},{"ruleId":"241","severity":1,"message":"242","line":176,"column":47,"nodeType":"243","messageId":"244","endLine":176,"endColumn":50,"suggestions":"282"},{"ruleId":"241","severity":1,"message":"242","line":196,"column":46,"nodeType":"243","messageId":"244","endLine":196,"endColumn":49,"suggestions":"283"},{"ruleId":"257","severity":1,"message":"258","line":286,"column":12,"nodeType":"259","messageId":"260","endLine":286,"endColumn":23},{"ruleId":"220","severity":1,"message":"284","line":15,"column":9,"nodeType":"222","messageId":"223","endLine":15,"endColumn":20},{"ruleId":"220","severity":1,"message":"285","line":2,"column":16,"nodeType":"222","messageId":"223","endLine":2,"endColumn":32},{"ruleId":"220","severity":1,"message":"286","line":4,"column":10,"nodeType":"222","messageId":"223","endLine":4,"endColumn":22},{"ruleId":"241","severity":1,"message":"242","line":7,"column":33,"nodeType":"243","messageId":"244","endLine":7,"endColumn":36,"suggestions":"287"},{"ruleId":"220","severity":1,"message":"288","line":8,"column":9,"nodeType":"222","messageId":"223","endLine":8,"endColumn":16},{"ruleId":"220","severity":1,"message":"289","line":10,"column":22,"nodeType":"222","messageId":"223","endLine":10,"endColumn":35},{"ruleId":"220","severity":1,"message":"290","line":11,"column":9,"nodeType":"222","messageId":"223","endLine":11,"endColumn":18},{"ruleId":"241","severity":1,"message":"242","line":12,"column":19,"nodeType":"243","messageId":"244","endLine":12,"endColumn":22,"suggestions":"291"},{"ruleId":"241","severity":1,"message":"242","line":14,"column":25,"nodeType":"243","messageId":"244","endLine":14,"endColumn":28,"suggestions":"292"},{"ruleId":"220","severity":1,"message":"285","line":3,"column":9,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"293","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":14},{"ruleId":"220","severity":1,"message":"294","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":15},{"ruleId":"220","severity":1,"message":"295","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":23},{"ruleId":"220","severity":1,"message":"296","line":11,"column":8,"nodeType":"222","messageId":"223","endLine":11,"endColumn":21},{"ruleId":"241","severity":1,"message":"242","line":15,"column":34,"nodeType":"243","messageId":"244","endLine":15,"endColumn":37,"suggestions":"297"},{"ruleId":"220","severity":1,"message":"298","line":16,"column":51,"nodeType":"222","messageId":"223","endLine":16,"endColumn":80},{"ruleId":"220","severity":1,"message":"299","line":25,"column":11,"nodeType":"222","messageId":"223","endLine":25,"endColumn":19},{"ruleId":"220","severity":1,"message":"285","line":3,"column":9,"nodeType":"222","messageId":"223","endLine":3,"endColumn":25},{"ruleId":"220","severity":1,"message":"300","line":3,"column":27,"nodeType":"222","messageId":"223","endLine":3,"endColumn":37},{"ruleId":"220","severity":1,"message":"301","line":3,"column":39,"nodeType":"222","messageId":"223","endLine":3,"endColumn":45},{"ruleId":"220","severity":1,"message":"293","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":14},{"ruleId":"220","severity":1,"message":"302","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":11},{"ruleId":"220","severity":1,"message":"303","line":7,"column":8,"nodeType":"222","messageId":"223","endLine":7,"endColumn":14},{"ruleId":"220","severity":1,"message":"294","line":8,"column":8,"nodeType":"222","messageId":"223","endLine":8,"endColumn":15},{"ruleId":"220","severity":1,"message":"295","line":10,"column":8,"nodeType":"222","messageId":"223","endLine":10,"endColumn":23},{"ruleId":"241","severity":1,"message":"242","line":12,"column":31,"nodeType":"243","messageId":"244","endLine":12,"endColumn":34,"suggestions":"304"},{"ruleId":"220","severity":1,"message":"288","line":13,"column":9,"nodeType":"222","messageId":"223","endLine":13,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":14,"column":12,"nodeType":"243","messageId":"244","endLine":14,"endColumn":15,"suggestions":"305"},{"ruleId":"241","severity":1,"message":"242","line":37,"column":12,"nodeType":"243","messageId":"244","endLine":37,"endColumn":15,"suggestions":"306"},{"ruleId":"241","severity":1,"message":"242","line":13,"column":12,"nodeType":"243","messageId":"244","endLine":13,"endColumn":15,"suggestions":"307"},{"ruleId":"241","severity":1,"message":"242","line":34,"column":12,"nodeType":"243","messageId":"244","endLine":34,"endColumn":15,"suggestions":"308"},{"ruleId":"241","severity":1,"message":"242","line":16,"column":42,"nodeType":"243","messageId":"244","endLine":16,"endColumn":45,"suggestions":"309"},{"ruleId":"257","severity":1,"message":"258","line":26,"column":3,"nodeType":"259","messageId":"260","endLine":26,"endColumn":14},{"ruleId":"241","severity":1,"message":"242","line":190,"column":46,"nodeType":"243","messageId":"244","endLine":190,"endColumn":49,"suggestions":"310"},{"ruleId":"257","severity":1,"message":"258","line":203,"column":20,"nodeType":"259","messageId":"260","endLine":203,"endColumn":31},{"ruleId":"241","severity":1,"message":"242","line":204,"column":166,"nodeType":"243","messageId":"244","endLine":204,"endColumn":169,"suggestions":"311"},"@typescript-eslint/no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'theme' is defined but never used.","lines-around-directive",["312"],"no-spaced-func",["313"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["314","315"],"'useLocation' is defined but never used.","'Prompt' is defined but never used.","'Props' is defined but never used.",["316","317"],["318","319"],"'useEffect' is defined but never used.","'LoadingPage' is defined but never used.","'LoginPage' is defined but never used.","'UserData' is defined but never used.","'setIsAuth' is assigned a value but never used.","'setUserData' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected",["312"],["313"],[],[],[],[],"'useForm' is defined but never used.","'clsx' is defined but never used.","'apiSetBrakeInChannel' is defined but never used.","'FormData' is defined but never used.",["320","321"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'Hidden' is defined but never used.","'useReducer' is defined but never used.",["322","323"],["324","325"],["326","327"],["328","329"],["330","331"],["332","333"],"'breakpoints' is assigned a value but never used.","'CircularProgress' is defined but never used.","'createPortal' is defined but never used.",["334","335"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["336","337"],["338","339"],"'Iframe' is defined but never used.","'Divider' is defined but never used.","'VideoPlayerMain' is defined but never used.","'ModeratorCard' is defined but never used.",["340","341"],"'activeSessionSpeakersAllRates' is assigned a value but never used.","'response' is assigned a value but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Rating' is defined but never used.",["342","343"],["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],"padding-line-between-statements","func-call-spacing",{"messageId":"358","fix":"359","desc":"360"},{"messageId":"361","fix":"362","desc":"363"},{"messageId":"358","fix":"364","desc":"360"},{"messageId":"361","fix":"365","desc":"363"},{"messageId":"358","fix":"366","desc":"360"},{"messageId":"361","fix":"367","desc":"363"},{"messageId":"358","fix":"368","desc":"360"},{"messageId":"361","fix":"369","desc":"363"},{"messageId":"358","fix":"370","desc":"360"},{"messageId":"361","fix":"371","desc":"363"},{"messageId":"358","fix":"372","desc":"360"},{"messageId":"361","fix":"373","desc":"363"},{"messageId":"358","fix":"374","desc":"360"},{"messageId":"361","fix":"375","desc":"363"},{"messageId":"358","fix":"376","desc":"360"},{"messageId":"361","fix":"377","desc":"363"},{"messageId":"358","fix":"378","desc":"360"},{"messageId":"361","fix":"379","desc":"363"},{"messageId":"358","fix":"380","desc":"360"},{"messageId":"361","fix":"381","desc":"363"},{"messageId":"358","fix":"382","desc":"360"},{"messageId":"361","fix":"383","desc":"363"},{"messageId":"358","fix":"384","desc":"360"},{"messageId":"361","fix":"385","desc":"363"},{"messageId":"358","fix":"386","desc":"360"},{"messageId":"361","fix":"387","desc":"363"},{"messageId":"358","fix":"388","desc":"360"},{"messageId":"361","fix":"389","desc":"363"},{"messageId":"358","fix":"390","desc":"360"},{"messageId":"361","fix":"391","desc":"363"},{"messageId":"358","fix":"392","desc":"360"},{"messageId":"361","fix":"393","desc":"363"},{"messageId":"358","fix":"394","desc":"360"},{"messageId":"361","fix":"395","desc":"363"},{"messageId":"358","fix":"396","desc":"360"},{"messageId":"361","fix":"397","desc":"363"},{"messageId":"358","fix":"398","desc":"360"},{"messageId":"361","fix":"399","desc":"363"},{"messageId":"358","fix":"400","desc":"360"},{"messageId":"361","fix":"401","desc":"363"},{"messageId":"358","fix":"402","desc":"360"},{"messageId":"361","fix":"403","desc":"363"},{"messageId":"358","fix":"404","desc":"360"},{"messageId":"361","fix":"405","desc":"363"},"suggestUnknown",{"range":"406","text":"407"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"406","text":"408"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"409","text":"407"},{"range":"409","text":"408"},{"range":"410","text":"407"},{"range":"410","text":"408"},{"range":"411","text":"407"},{"range":"411","text":"408"},{"range":"412","text":"407"},{"range":"412","text":"408"},{"range":"413","text":"407"},{"range":"413","text":"408"},{"range":"414","text":"407"},{"range":"414","text":"408"},{"range":"415","text":"407"},{"range":"415","text":"408"},{"range":"416","text":"407"},{"range":"416","text":"408"},{"range":"417","text":"407"},{"range":"417","text":"408"},{"range":"418","text":"407"},{"range":"418","text":"408"},{"range":"419","text":"407"},{"range":"419","text":"408"},{"range":"420","text":"407"},{"range":"420","text":"408"},{"range":"421","text":"407"},{"range":"421","text":"408"},{"range":"422","text":"407"},{"range":"422","text":"408"},{"range":"423","text":"407"},{"range":"423","text":"408"},{"range":"424","text":"407"},{"range":"424","text":"408"},{"range":"425","text":"407"},{"range":"425","text":"408"},{"range":"426","text":"407"},{"range":"426","text":"408"},{"range":"427","text":"407"},{"range":"427","text":"408"},{"range":"428","text":"407"},{"range":"428","text":"408"},{"range":"429","text":"407"},{"range":"429","text":"408"},[32,35],"unknown","never",[965,968],[222,225],[1694,1697],[2053,2056],[4339,4342],[4444,4447],[5428,5431],[5821,5824],[6413,6416],[250,253],[396,399],[498,501],[606,609],[421,424],[302,305],[793,796],[361,364],[891,894],[624,627],[5026,5029],[5807,5810]]