[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"9"},{"size":501,"mtime":1609149071141,"results":"10","hashOfConfig":"11"},{"size":436,"mtime":1609149080634,"results":"12","hashOfConfig":"11"},{"size":820,"mtime":1609753240378,"results":"13","hashOfConfig":"11"},{"size":88,"mtime":1609151476043,"results":"14","hashOfConfig":"11"},{"size":255,"mtime":1609318188222,"results":"15","hashOfConfig":"11"},{"size":3270,"mtime":1609751467970,"results":"16","hashOfConfig":"11"},{"size":487,"mtime":1609320087903,"results":"17","hashOfConfig":"11"},{"size":401,"mtime":1609753165636,"results":"18","hashOfConfig":"11"},{"size":94,"mtime":1609326591701,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vtgqsx",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",[],["45","46","47","48","49","50"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts",["51"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",["52","53","54","55"],"import React, {\n  memo, FC, useState, useEffect,\n} from 'react';\nimport {\n  Route,\n  Router,\n  Switch,\n} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport history from './core/history';\nimport logo from './logo.svg';\nimport './App.css';\nimport getLocalStorageData from './utils/helpers/localStorage.helper';\nimport LoginPage from './containers/Login/LoginPage';\n\nconsole.log('process.env.API_URL :>> ', process.env.REACT_APP_API_URL);\n\nexport const App: FC = () => {\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token);\n  return (\n    <Router history={history}>\n      <CssBaseline />\n      {/* <Snackbar /> */}\n\n      <Switch>\n        <Route path=\"/\" component={isAuth ? LoginPage : LoginPage} />\n      </Switch>\n\n    </Router>\n  );\n};\n\nexport default memo(App);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",["56"],"const getLocalStorageData = () => {\n  const accessToken = localStorage.getItem('accessToken');\n  const refreshToken = localStorage.getItem('refreshToken');\n\n  return {\n    token: { accessToken, refreshToken },\n  };\n};\n\nexport default getLocalStorageData;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"import React, { FC, memo, useState } from 'react';\n\nimport { Copyright } from '@material-ui/icons';\n// import ContentContainer from '../ContentContainer/ContentContainer';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const {\n    register, handleSubmit, watch,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    console.log(data);\n    await apiLogin(data.loginCode);\n  };\n\n  const [user, setUser] = useState();\n\n  const [loading, setLoading]: [boolean, (loading: boolean) => void]\n    = React.useState<boolean>(true);\n  const [error, setError]: [string, (error: string) => void] = React.useState('');\n\n  // const sendLoginDataToServer =\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Войти\n          </Button>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["74","75"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n  console.log('url :>> ', url);\n  const { data } = await axios.post(url, { loginCode });\n  return data;\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],["76","77","78","79","80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":25,"nodeType":"96","messageId":"97","endLine":3,"endColumn":57},{"ruleId":"98","severity":1,"message":"99","line":2,"column":23,"nodeType":"100","messageId":"101","endLine":2,"endColumn":32},{"ruleId":"98","severity":1,"message":"102","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":12},{"ruleId":"103","severity":1,"message":"104","line":16,"column":1,"nodeType":"105","messageId":"106","endLine":16,"endColumn":12},{"ruleId":"98","severity":1,"message":"107","line":19,"column":18,"nodeType":"100","messageId":"101","endLine":19,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":1,"column":29,"nodeType":"96","messageId":"97","endLine":1,"endColumn":34},{"ruleId":"98","severity":1,"message":"108","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":19},{"ruleId":"98","severity":1,"message":"109","line":10,"column":8,"nodeType":"100","messageId":"101","endLine":10,"endColumn":24},{"ruleId":"98","severity":1,"message":"110","line":11,"column":8,"nodeType":"100","messageId":"101","endLine":11,"endColumn":16},{"ruleId":"98","severity":1,"message":"111","line":12,"column":8,"nodeType":"100","messageId":"101","endLine":12,"endColumn":12},{"ruleId":"98","severity":1,"message":"112","line":13,"column":8,"nodeType":"100","messageId":"101","endLine":13,"endColumn":12},{"ruleId":"98","severity":1,"message":"113","line":14,"column":8,"nodeType":"100","messageId":"101","endLine":14,"endColumn":11},{"ruleId":"98","severity":1,"message":"114","line":17,"column":10,"nodeType":"100","messageId":"101","endLine":17,"endColumn":20},{"ruleId":"98","severity":1,"message":"115","line":27,"column":11,"nodeType":"100","messageId":"101","endLine":27,"endColumn":16},{"ruleId":"98","severity":1,"message":"116","line":35,"column":5,"nodeType":"100","messageId":"101","endLine":35,"endColumn":13},{"ruleId":"98","severity":1,"message":"117","line":35,"column":29,"nodeType":"100","messageId":"101","endLine":35,"endColumn":34},{"ruleId":"103","severity":1,"message":"104","line":39,"column":5,"nodeType":"105","messageId":"106","endLine":39,"endColumn":16},{"ruleId":"98","severity":1,"message":"118","line":43,"column":10,"nodeType":"100","messageId":"101","endLine":43,"endColumn":14},{"ruleId":"98","severity":1,"message":"119","line":43,"column":16,"nodeType":"100","messageId":"101","endLine":43,"endColumn":23},{"ruleId":"98","severity":1,"message":"120","line":45,"column":10,"nodeType":"100","messageId":"101","endLine":45,"endColumn":17},{"ruleId":"98","severity":1,"message":"121","line":45,"column":19,"nodeType":"100","messageId":"101","endLine":45,"endColumn":29},{"ruleId":"98","severity":1,"message":"122","line":47,"column":10,"nodeType":"100","messageId":"101","endLine":47,"endColumn":15},{"ruleId":"98","severity":1,"message":"123","line":47,"column":17,"nodeType":"100","messageId":"101","endLine":47,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":10,"column":12,"nodeType":"126","messageId":"127","endLine":10,"endColumn":15,"suggestions":"128"},{"ruleId":"103","severity":1,"message":"104","line":12,"column":3,"nodeType":"105","messageId":"106","endLine":12,"endColumn":14},{"ruleId":"82","replacedBy":"129"},{"ruleId":"84","replacedBy":"130"},{"ruleId":"86","replacedBy":"131"},{"ruleId":"88","replacedBy":"132"},{"ruleId":"90","replacedBy":"133"},{"ruleId":"92","replacedBy":"134"},"lines-around-directive",["135"],"no-spaced-func",["136"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'setIsAuth' is assigned a value but never used.","'Copyright' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'Props' is defined but never used.","'register' is assigned a value but never used.","'watch' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["137","138"],["135"],["136"],[],[],[],[],"padding-line-between-statements","func-call-spacing",{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},"suggestUnknown",{"range":"145","text":"146"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"145","text":"147"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[222,225],"unknown","never"]