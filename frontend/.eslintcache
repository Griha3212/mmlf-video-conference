[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"28","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx":"29","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts":"30","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts":"31","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\capitalizeFirstLetter.helper.ts":"32"},{"size":462,"mtime":1611587033817,"results":"33","hashOfConfig":"34"},{"size":999,"mtime":1611219535180,"results":"35","hashOfConfig":"34"},{"size":88,"mtime":1609151476043,"results":"36","hashOfConfig":"34"},{"size":355,"mtime":1611587774795,"results":"37","hashOfConfig":"34"},{"size":4843,"mtime":1610437764729,"results":"38","hashOfConfig":"34"},{"size":845,"mtime":1609924589133,"results":"39","hashOfConfig":"34"},{"size":433,"mtime":1609754100539,"results":"40","hashOfConfig":"34"},{"size":792,"mtime":1611739960283,"results":"41","hashOfConfig":"34"},{"size":1360,"mtime":1611588354280,"results":"42","hashOfConfig":"34"},{"size":455,"mtime":1609923543629,"results":"43","hashOfConfig":"34"},{"size":304,"mtime":1609923543632,"results":"44","hashOfConfig":"34"},{"size":816,"mtime":1611588730436,"results":"45","hashOfConfig":"34"},{"size":7704,"mtime":1611739823825,"results":"46","hashOfConfig":"34"},{"size":1287,"mtime":1611562566718,"results":"47","hashOfConfig":"34"},{"size":360,"mtime":1609927664710,"results":"48","hashOfConfig":"34"},{"size":474,"mtime":1609927609396,"results":"49","hashOfConfig":"34"},{"size":23603,"mtime":1611749556659,"results":"50","hashOfConfig":"34"},{"size":11285,"mtime":1611747771594,"results":"51","hashOfConfig":"34"},{"size":1088,"mtime":1611078096440,"results":"52","hashOfConfig":"34"},{"size":304,"mtime":1610521474487,"results":"53","hashOfConfig":"34"},{"size":9627,"mtime":1611746628682,"results":"54","hashOfConfig":"34"},{"size":10114,"mtime":1611745961095,"results":"55","hashOfConfig":"34"},{"size":804,"mtime":1610544223943,"results":"56","hashOfConfig":"34"},{"size":304,"mtime":1610534492141,"results":"57","hashOfConfig":"34"},{"size":3599,"mtime":1611590733718,"results":"58","hashOfConfig":"34"},{"size":1705,"mtime":1611747041008,"results":"59","hashOfConfig":"34"},{"size":19965,"mtime":1611746671071,"results":"60","hashOfConfig":"34"},{"size":6565,"mtime":1611725446644,"results":"61","hashOfConfig":"34"},{"size":8065,"mtime":1611654867557,"results":"62","hashOfConfig":"34"},{"size":1409,"mtime":1611245672776,"results":"63","hashOfConfig":"34"},{"size":551,"mtime":1611587442270,"results":"64","hashOfConfig":"34"},{"size":174,"mtime":1611746555158,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"vtgqsx",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",[],["140","141","142","143","144","145"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["146","147","148","149"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["150"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["151","152","153"],"import React, {\r\n  FC, memo, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\n// import LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (userData.hasAccessToStatisticPage) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["154","155","156","157","158","159"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["160"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["161"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["162","163","164","165","166","167","168"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["169","170","171","172","173","174","175","176"],"import React, { memo, useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport { createPortal } from 'react-dom';\nimport useStyles from './style';\n\nconst VideoPlayerMain = (props: any) => {\n  const classes = useStyles();\n\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef;\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\n\n  const playVideo = (): any => {\n\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      data-testid=\"loading-page\"\n    >\n      <div\n        className={props.classNameInner}\n        ref={inputRef}\n      >\n        <Iframe\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\n          url={props.videoURL}\n          width=\"100%\"\n          height={props.height}\n          position=\"relative\"\n          allow=\"fullscreen\"\n          onLoad={playVideo()}\n        />\n      </div>\n    </Grid>\n\n  );\n};\n\nexport default memo(VideoPlayerMain);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["177","178"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx",["179","180","181","182","183","184","185","186","187","188"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["189","190","191","192","193","194","195"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n\n// Login\nexport const apiGetUser = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getUser}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiVoteForSpeaker = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  rate: number | null,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.voteForSpeaker}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId, rate }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakers = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakers}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateContactedSpeakers = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateContactedSpeakers}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakersAllInSession = async (\n  sessionId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakersAll}`;\n\n  try {\n    const { data } = await axios.post(url, { sessionId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiGetAllChannels = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getAllChannels}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserChangeActiveChannel = async (\n  channelNumber: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelNumber, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["196","197","198"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["199","200","201","202","203","204","205","206","207"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx",["208","209","210","211","212","213","214"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { apiGetStats } from '../../api/stats';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport parseToken from '../../utils/parseToken';\r\nimport useStyles from './style';\r\n\r\ntype User = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  email: string;\r\n\r\n};\r\n\r\ntype Vote = {\r\n  rate: number;\r\n  user: User;\r\n  createdAt: Date;\r\n};\r\n\r\ntype DataForStats = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n  usersWhoWatchedSpeaker: Array<User>;\r\n  usersWhoSendContacts: Array<User>;\r\n  votes: Array<Vote>;\r\n\r\n};\r\n\r\nconst StatsPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [dataForStatsViewer, setDataForStatsViewer] = useState<DataForStats[]>();\r\n\r\n  const loadDataForStatsViewer = async () => {\r\n    const response = await apiGetStats(userData.id, token);\r\n    setDataForStatsViewer(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForStatsViewer();\r\n  }, []);\r\n\r\n  const Row = (props: { row: DataForStats }) => {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let sum = 0;\r\n\r\n    row.votes.map((element) => {\r\n      sum += element.rate;\r\n    });\r\n\r\n    const medianValue = (+sum / +row.votes.length || 0).toFixed(2);\r\n\r\n    const renderRate = (historyRow: any) => {\r\n      const currentRate = row && row!.votes.find(\r\n        (element: any) => element.user.id === historyRow.id,\r\n      );\r\n\r\n      if (currentRate && currentRate.createdAt && !currentRate.rate) return '0';\r\n      return currentRate && currentRate.rate || 'без оценки';\r\n    };\r\n\r\n    const renderContactCheckbox = (historyRow: any) => {\r\n      console.log('row :>> ', row);\r\n\r\n      const currentContact = row && row!.usersWhoSendContacts.find(\r\n        (element: any) => element.id === historyRow.id,\r\n      );\r\n\r\n      if (currentContact) return true;\r\n\r\n      return false;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <TableRow className={classes.root}>\r\n          <TableCell align=\"center\">\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n            {`${row.firstName} ${row.lastName}`}\r\n          </TableCell>\r\n          <TableCell align=\"center\">{row.usersWhoWatchedSpeaker.length}</TableCell>\r\n          <TableCell align=\"center\">{row.votes.length}</TableCell>\r\n          <TableCell align=\"center\">{medianValue}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Подробнее\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Имя Фамилия участника</TableCell>\r\n                      <TableCell align=\"center\">Просмотрел</TableCell>\r\n                      <TableCell align=\"center\">Хочет отправить контакты</TableCell>\r\n                      <TableCell align=\"center\">Email</TableCell>\r\n                      <TableCell align=\"center\">Оценка</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {row.usersWhoWatchedSpeaker.map((historyRow) => (\r\n                      <TableRow key={historyRow.id}>\r\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                          {`${historyRow.firstName} ${historyRow.lastName}`}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            defaultChecked\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            checked={renderContactCheckbox(historyRow)}\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{`${historyRow.email || '-'}`}</TableCell>\r\n                        <TableCell align=\"center\">{renderRate(historyRow)}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.pageNameContainer} component=\"main\" maxWidth=\"xs\">\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Просмотра Статистики\r\n          </Typography>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <div className={classes.root}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell align=\"center\">Имя Фамилия спикера</TableCell>\r\n                <TableCell align=\"center\">Количество просмотров</TableCell>\r\n                <TableCell align=\"center\">Количество оценок</TableCell>\r\n                <TableCell align=\"center\">Средняя оценка</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataForStatsViewer && dataForStatsViewer.map((row) => (\r\n                <Row key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(StatsPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts",["215"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n\nexport const apiGetStats = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getStats}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\capitalizeFirstLetter.helper.ts",["216"],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":19,"column":3,"nodeType":"231","messageId":"232","endLine":19,"endColumn":14},{"ruleId":"229","severity":1,"message":"233","line":19,"column":16,"nodeType":"231","messageId":"232","endLine":19,"endColumn":22},{"ruleId":"229","severity":1,"message":"234","line":28,"column":11,"nodeType":"231","messageId":"232","endLine":28,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":33,"column":23,"nodeType":"237","messageId":"238","endLine":33,"endColumn":26,"suggestions":"239"},{"ruleId":"235","severity":1,"message":"236","line":10,"column":12,"nodeType":"237","messageId":"238","endLine":10,"endColumn":15,"suggestions":"240"},{"ruleId":"229","severity":1,"message":"241","line":16,"column":8,"nodeType":"231","messageId":"232","endLine":16,"endColumn":17},{"ruleId":"229","severity":1,"message":"242","line":20,"column":18,"nodeType":"231","messageId":"232","endLine":20,"endColumn":27},{"ruleId":"229","severity":1,"message":"243","line":24,"column":20,"nodeType":"231","messageId":"232","endLine":24,"endColumn":31},{"ruleId":"217","replacedBy":"244"},{"ruleId":"219","replacedBy":"245"},{"ruleId":"221","replacedBy":"246"},{"ruleId":"223","replacedBy":"247"},{"ruleId":"225","replacedBy":"248"},{"ruleId":"227","replacedBy":"249"},{"ruleId":"235","severity":1,"message":"236","line":60,"column":23,"nodeType":"237","messageId":"238","endLine":60,"endColumn":26,"suggestions":"250"},{"ruleId":"229","severity":1,"message":"251","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"252","line":215,"column":9,"nodeType":"231","messageId":"232","endLine":215,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":277,"column":47,"nodeType":"237","messageId":"238","endLine":277,"endColumn":50,"suggestions":"253"},{"ruleId":"235","severity":1,"message":"236","line":299,"column":46,"nodeType":"237","messageId":"238","endLine":299,"endColumn":49,"suggestions":"254"},{"ruleId":"235","severity":1,"message":"236","line":328,"column":62,"nodeType":"237","messageId":"238","endLine":328,"endColumn":65,"suggestions":"255"},{"ruleId":"235","severity":1,"message":"236","line":344,"column":67,"nodeType":"237","messageId":"238","endLine":344,"endColumn":70,"suggestions":"256"},{"ruleId":"235","severity":1,"message":"236","line":381,"column":41,"nodeType":"237","messageId":"238","endLine":381,"endColumn":44,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":382,"column":28,"nodeType":"260","messageId":"261","endLine":382,"endColumn":40,"suggestions":"262"},{"ruleId":"229","severity":1,"message":"263","line":2,"column":16,"nodeType":"231","messageId":"232","endLine":2,"endColumn":32},{"ruleId":"229","severity":1,"message":"264","line":4,"column":10,"nodeType":"231","messageId":"232","endLine":4,"endColumn":22},{"ruleId":"235","severity":1,"message":"236","line":7,"column":33,"nodeType":"237","messageId":"238","endLine":7,"endColumn":36,"suggestions":"265"},{"ruleId":"229","severity":1,"message":"266","line":8,"column":9,"nodeType":"231","messageId":"232","endLine":8,"endColumn":16},{"ruleId":"229","severity":1,"message":"267","line":10,"column":22,"nodeType":"231","messageId":"232","endLine":10,"endColumn":35},{"ruleId":"229","severity":1,"message":"268","line":11,"column":9,"nodeType":"231","messageId":"232","endLine":11,"endColumn":18},{"ruleId":"235","severity":1,"message":"236","line":12,"column":19,"nodeType":"237","messageId":"238","endLine":12,"endColumn":22,"suggestions":"269"},{"ruleId":"235","severity":1,"message":"236","line":14,"column":25,"nodeType":"237","messageId":"238","endLine":14,"endColumn":28,"suggestions":"270"},{"ruleId":"235","severity":1,"message":"236","line":13,"column":34,"nodeType":"237","messageId":"238","endLine":13,"endColumn":37,"suggestions":"271"},{"ruleId":"235","severity":1,"message":"236","line":137,"column":19,"nodeType":"237","messageId":"238","endLine":137,"endColumn":22,"suggestions":"272"},{"ruleId":"229","severity":1,"message":"263","line":3,"column":9,"nodeType":"231","messageId":"232","endLine":3,"endColumn":25},{"ruleId":"229","severity":1,"message":"273","line":3,"column":27,"nodeType":"231","messageId":"232","endLine":3,"endColumn":37},{"ruleId":"229","severity":1,"message":"274","line":3,"column":39,"nodeType":"231","messageId":"232","endLine":3,"endColumn":45},{"ruleId":"229","severity":1,"message":"275","line":5,"column":8,"nodeType":"231","messageId":"232","endLine":5,"endColumn":14},{"ruleId":"229","severity":1,"message":"276","line":6,"column":8,"nodeType":"231","messageId":"232","endLine":6,"endColumn":11},{"ruleId":"229","severity":1,"message":"277","line":7,"column":8,"nodeType":"231","messageId":"232","endLine":7,"endColumn":14},{"ruleId":"229","severity":1,"message":"278","line":8,"column":8,"nodeType":"231","messageId":"232","endLine":8,"endColumn":15},{"ruleId":"229","severity":1,"message":"279","line":10,"column":8,"nodeType":"231","messageId":"232","endLine":10,"endColumn":23},{"ruleId":"235","severity":1,"message":"236","line":12,"column":31,"nodeType":"237","messageId":"238","endLine":12,"endColumn":34,"suggestions":"280"},{"ruleId":"229","severity":1,"message":"266","line":13,"column":9,"nodeType":"231","messageId":"232","endLine":13,"endColumn":16},{"ruleId":"235","severity":1,"message":"236","line":13,"column":12,"nodeType":"237","messageId":"238","endLine":13,"endColumn":15,"suggestions":"281"},{"ruleId":"235","severity":1,"message":"236","line":36,"column":12,"nodeType":"237","messageId":"238","endLine":36,"endColumn":15,"suggestions":"282"},{"ruleId":"235","severity":1,"message":"236","line":58,"column":12,"nodeType":"237","messageId":"238","endLine":58,"endColumn":15,"suggestions":"283"},{"ruleId":"235","severity":1,"message":"236","line":80,"column":12,"nodeType":"237","messageId":"238","endLine":80,"endColumn":15,"suggestions":"284"},{"ruleId":"235","severity":1,"message":"236","line":102,"column":12,"nodeType":"237","messageId":"238","endLine":102,"endColumn":15,"suggestions":"285"},{"ruleId":"235","severity":1,"message":"236","line":124,"column":12,"nodeType":"237","messageId":"238","endLine":124,"endColumn":15,"suggestions":"286"},{"ruleId":"235","severity":1,"message":"236","line":146,"column":12,"nodeType":"237","messageId":"238","endLine":146,"endColumn":15,"suggestions":"287"},{"ruleId":"235","severity":1,"message":"236","line":13,"column":12,"nodeType":"237","messageId":"238","endLine":13,"endColumn":15,"suggestions":"288"},{"ruleId":"235","severity":1,"message":"236","line":35,"column":12,"nodeType":"237","messageId":"238","endLine":35,"endColumn":15,"suggestions":"289"},{"ruleId":"235","severity":1,"message":"236","line":56,"column":12,"nodeType":"237","messageId":"238","endLine":56,"endColumn":15,"suggestions":"290"},{"ruleId":"235","severity":1,"message":"236","line":48,"column":42,"nodeType":"237","messageId":"238","endLine":48,"endColumn":45,"suggestions":"291"},{"ruleId":"235","severity":1,"message":"236","line":71,"column":19,"nodeType":"237","messageId":"238","endLine":71,"endColumn":22,"suggestions":"292"},{"ruleId":"235","severity":1,"message":"236","line":85,"column":19,"nodeType":"237","messageId":"238","endLine":85,"endColumn":22,"suggestions":"293"},{"ruleId":"235","severity":1,"message":"236","line":93,"column":25,"nodeType":"237","messageId":"238","endLine":93,"endColumn":28,"suggestions":"294"},{"ruleId":"235","severity":1,"message":"236","line":108,"column":41,"nodeType":"237","messageId":"238","endLine":108,"endColumn":44,"suggestions":"295"},{"ruleId":"258","severity":1,"message":"259","line":110,"column":11,"nodeType":"260","messageId":"261","endLine":110,"endColumn":47,"suggestions":"296"},{"ruleId":"258","severity":1,"message":"259","line":111,"column":27,"nodeType":"260","messageId":"261","endLine":111,"endColumn":63,"suggestions":"297"},{"ruleId":"235","severity":1,"message":"236","line":112,"column":18,"nodeType":"237","messageId":"238","endLine":112,"endColumn":21,"suggestions":"298"},{"ruleId":"235","severity":1,"message":"236","line":364,"column":46,"nodeType":"237","messageId":"238","endLine":364,"endColumn":49,"suggestions":"299"},{"ruleId":"235","severity":1,"message":"236","line":98,"column":37,"nodeType":"237","messageId":"238","endLine":98,"endColumn":40,"suggestions":"300"},{"ruleId":"258","severity":1,"message":"259","line":99,"column":34,"nodeType":"260","messageId":"261","endLine":99,"endColumn":38,"suggestions":"301"},{"ruleId":"235","severity":1,"message":"236","line":100,"column":19,"nodeType":"237","messageId":"238","endLine":100,"endColumn":22,"suggestions":"302"},{"ruleId":"235","severity":1,"message":"236","line":107,"column":48,"nodeType":"237","messageId":"238","endLine":107,"endColumn":51,"suggestions":"303"},{"ruleId":"304","severity":1,"message":"305","line":108,"column":7,"nodeType":"306","messageId":"307","endLine":108,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":110,"column":37,"nodeType":"260","messageId":"261","endLine":110,"endColumn":41,"suggestions":"308"},{"ruleId":"235","severity":1,"message":"236","line":111,"column":19,"nodeType":"237","messageId":"238","endLine":111,"endColumn":22,"suggestions":"309"},{"ruleId":"235","severity":1,"message":"236","line":12,"column":12,"nodeType":"237","messageId":"238","endLine":12,"endColumn":15,"suggestions":"310"},{"ruleId":"311","severity":1,"message":"312","line":2,"column":38,"nodeType":"313","messageId":"314","endLine":2,"endColumn":57},"lines-around-directive",["315"],"no-spaced-func",["316"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'Prompt' is defined but never used.","'Props' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["317","318"],["319","320"],"'LoginPage' is defined but never used.","'setIsAuth' is assigned a value but never used.","'setUserData' is assigned a value but never used.",["315"],["316"],[],[],[],[],["321","322"],"'Hidden' is defined but never used.","'updateContactedSpeaker' is assigned a value but never used.",["323","324"],["325","326"],["327","328"],["329","330"],["331","332"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["333"],"'CircularProgress' is defined but never used.","'createPortal' is defined but never used.",["334","335"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["336","337"],["338","339"],["340","341"],["342","343"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Iframe' is defined but never used.","'Box' is defined but never used.","'Rating' is defined but never used.","'Divider' is defined but never used.","'VideoPlayerMain' is defined but never used.",["344","345"],["346","347"],["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],["360","361"],["362","363"],["364","365"],["366","367"],["368","369"],["370","371"],["372","373"],["374","375"],["376"],["377"],["378","379"],["380","381"],["382","383"],["384"],["385","386"],["387","388"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["389"],["390","391"],["392","393"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","padding-line-between-statements","func-call-spacing",{"messageId":"394","fix":"395","desc":"396"},{"messageId":"397","fix":"398","desc":"399"},{"messageId":"394","fix":"400","desc":"396"},{"messageId":"397","fix":"401","desc":"399"},{"messageId":"394","fix":"402","desc":"396"},{"messageId":"397","fix":"403","desc":"399"},{"messageId":"394","fix":"404","desc":"396"},{"messageId":"397","fix":"405","desc":"399"},{"messageId":"394","fix":"406","desc":"396"},{"messageId":"397","fix":"407","desc":"399"},{"messageId":"394","fix":"408","desc":"396"},{"messageId":"397","fix":"409","desc":"399"},{"messageId":"394","fix":"410","desc":"396"},{"messageId":"397","fix":"411","desc":"399"},{"messageId":"394","fix":"412","desc":"396"},{"messageId":"397","fix":"413","desc":"399"},{"messageId":"414","fix":"415","desc":"416"},{"messageId":"394","fix":"417","desc":"396"},{"messageId":"397","fix":"418","desc":"399"},{"messageId":"394","fix":"419","desc":"396"},{"messageId":"397","fix":"420","desc":"399"},{"messageId":"394","fix":"421","desc":"396"},{"messageId":"397","fix":"422","desc":"399"},{"messageId":"394","fix":"423","desc":"396"},{"messageId":"397","fix":"424","desc":"399"},{"messageId":"394","fix":"425","desc":"396"},{"messageId":"397","fix":"426","desc":"399"},{"messageId":"394","fix":"427","desc":"396"},{"messageId":"397","fix":"428","desc":"399"},{"messageId":"394","fix":"429","desc":"396"},{"messageId":"397","fix":"430","desc":"399"},{"messageId":"394","fix":"431","desc":"396"},{"messageId":"397","fix":"432","desc":"399"},{"messageId":"394","fix":"433","desc":"396"},{"messageId":"397","fix":"434","desc":"399"},{"messageId":"394","fix":"435","desc":"396"},{"messageId":"397","fix":"436","desc":"399"},{"messageId":"394","fix":"437","desc":"396"},{"messageId":"397","fix":"438","desc":"399"},{"messageId":"394","fix":"439","desc":"396"},{"messageId":"397","fix":"440","desc":"399"},{"messageId":"394","fix":"441","desc":"396"},{"messageId":"397","fix":"442","desc":"399"},{"messageId":"394","fix":"443","desc":"396"},{"messageId":"397","fix":"444","desc":"399"},{"messageId":"394","fix":"445","desc":"396"},{"messageId":"397","fix":"446","desc":"399"},{"messageId":"394","fix":"447","desc":"396"},{"messageId":"397","fix":"448","desc":"399"},{"messageId":"394","fix":"449","desc":"396"},{"messageId":"397","fix":"450","desc":"399"},{"messageId":"394","fix":"451","desc":"396"},{"messageId":"397","fix":"452","desc":"399"},{"messageId":"394","fix":"453","desc":"396"},{"messageId":"397","fix":"454","desc":"399"},{"messageId":"394","fix":"455","desc":"396"},{"messageId":"397","fix":"456","desc":"399"},{"messageId":"394","fix":"457","desc":"396"},{"messageId":"397","fix":"458","desc":"399"},{"messageId":"414","fix":"459","desc":"416"},{"messageId":"414","fix":"460","desc":"416"},{"messageId":"394","fix":"461","desc":"396"},{"messageId":"397","fix":"462","desc":"399"},{"messageId":"394","fix":"463","desc":"396"},{"messageId":"397","fix":"464","desc":"399"},{"messageId":"394","fix":"465","desc":"396"},{"messageId":"397","fix":"466","desc":"399"},{"messageId":"414","fix":"467","desc":"416"},{"messageId":"394","fix":"468","desc":"396"},{"messageId":"397","fix":"469","desc":"399"},{"messageId":"394","fix":"470","desc":"396"},{"messageId":"397","fix":"471","desc":"399"},{"messageId":"414","fix":"472","desc":"416"},{"messageId":"394","fix":"473","desc":"396"},{"messageId":"397","fix":"474","desc":"399"},{"messageId":"394","fix":"475","desc":"396"},{"messageId":"397","fix":"476","desc":"399"},"suggestUnknown",{"range":"477","text":"478"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"477","text":"479"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"480","text":"478"},{"range":"480","text":"479"},{"range":"481","text":"478"},{"range":"481","text":"479"},{"range":"482","text":"478"},{"range":"482","text":"479"},{"range":"483","text":"478"},{"range":"483","text":"479"},{"range":"484","text":"478"},{"range":"484","text":"479"},{"range":"485","text":"478"},{"range":"485","text":"479"},{"range":"486","text":"478"},{"range":"486","text":"479"},"suggestOptionalChain",{"range":"487","text":"488"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"489","text":"478"},{"range":"489","text":"479"},{"range":"490","text":"478"},{"range":"490","text":"479"},{"range":"491","text":"478"},{"range":"491","text":"479"},{"range":"492","text":"478"},{"range":"492","text":"479"},{"range":"493","text":"478"},{"range":"493","text":"479"},{"range":"494","text":"478"},{"range":"494","text":"479"},{"range":"495","text":"478"},{"range":"495","text":"479"},{"range":"496","text":"478"},{"range":"496","text":"479"},{"range":"497","text":"478"},{"range":"497","text":"479"},{"range":"498","text":"478"},{"range":"498","text":"479"},{"range":"499","text":"478"},{"range":"499","text":"479"},{"range":"500","text":"478"},{"range":"500","text":"479"},{"range":"501","text":"478"},{"range":"501","text":"479"},{"range":"502","text":"478"},{"range":"502","text":"479"},{"range":"503","text":"478"},{"range":"503","text":"479"},{"range":"504","text":"478"},{"range":"504","text":"479"},{"range":"505","text":"478"},{"range":"505","text":"479"},{"range":"506","text":"478"},{"range":"506","text":"479"},{"range":"507","text":"478"},{"range":"507","text":"479"},{"range":"508","text":"478"},{"range":"508","text":"479"},{"range":"509","text":"478"},{"range":"509","text":"479"},{"range":"510","text":"488"},{"range":"511","text":"488"},{"range":"512","text":"478"},{"range":"512","text":"479"},{"range":"513","text":"478"},{"range":"513","text":"479"},{"range":"514","text":"478"},{"range":"514","text":"479"},{"range":"515","text":"488"},{"range":"516","text":"478"},{"range":"516","text":"479"},{"range":"517","text":"478"},{"range":"517","text":"479"},{"range":"518","text":"488"},{"range":"519","text":"478"},{"range":"519","text":"479"},{"range":"520","text":"478"},{"range":"520","text":"479"},[965,968],"unknown","never",[222,225],[1736,1739],[9857,9860],[10457,10460],[11231,11234],[11726,11729],[12929,12932],[12978,12979],"?",[250,253],[396,399],[498,501],[536,539],[4683,4686],[421,424],[263,266],[754,757],[1261,1264],[1775,1778],[2301,2304],[2785,2788],[3273,3276],[361,364],[916,919],[1403,1406],[1499,1502],[2296,2299],[2753,2756],[3108,3111],[3859,3862],[3963,3964],[4041,4042],[4067,4070],[12914,12917],[2867,2870],[2914,2915],[2947,2950],[3205,3208],[3294,3295],[3342,3345],[255,258]]