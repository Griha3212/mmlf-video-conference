[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"28","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"29","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"30","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx":"31","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts":"32","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts":"33"},{"size":545,"mtime":1610473645677,"results":"34","hashOfConfig":"35"},{"size":436,"mtime":1609149080634,"results":"36","hashOfConfig":"35"},{"size":999,"mtime":1611219535180,"results":"37","hashOfConfig":"35"},{"size":88,"mtime":1609151476043,"results":"38","hashOfConfig":"35"},{"size":254,"mtime":1609941695606,"results":"39","hashOfConfig":"35"},{"size":4843,"mtime":1610437764729,"results":"40","hashOfConfig":"35"},{"size":845,"mtime":1609924589133,"results":"41","hashOfConfig":"35"},{"size":433,"mtime":1609754100539,"results":"42","hashOfConfig":"35"},{"size":596,"mtime":1611219984263,"results":"43","hashOfConfig":"35"},{"size":2980,"mtime":1611092216226,"results":"44","hashOfConfig":"35"},{"size":455,"mtime":1609923543629,"results":"45","hashOfConfig":"35"},{"size":304,"mtime":1609923543632,"results":"46","hashOfConfig":"35"},{"size":368,"mtime":1609937434279,"results":"47","hashOfConfig":"35"},{"size":6089,"mtime":1611246370515,"results":"48","hashOfConfig":"35"},{"size":1262,"mtime":1611218298710,"results":"49","hashOfConfig":"35"},{"size":360,"mtime":1609927664710,"results":"50","hashOfConfig":"35"},{"size":474,"mtime":1609927609396,"results":"51","hashOfConfig":"35"},{"size":22234,"mtime":1611346369969,"results":"52","hashOfConfig":"35"},{"size":8227,"mtime":1611346432861,"results":"53","hashOfConfig":"35"},{"size":752,"mtime":1610469885795,"results":"54","hashOfConfig":"35"},{"size":1088,"mtime":1611078096440,"results":"55","hashOfConfig":"35"},{"size":304,"mtime":1610521474487,"results":"56","hashOfConfig":"35"},{"size":7496,"mtime":1611345698893,"results":"57","hashOfConfig":"35"},{"size":7533,"mtime":1611331931084,"results":"58","hashOfConfig":"35"},{"size":804,"mtime":1610544223943,"results":"59","hashOfConfig":"35"},{"size":304,"mtime":1610534492141,"results":"60","hashOfConfig":"35"},{"size":3122,"mtime":1611213301102,"results":"61","hashOfConfig":"35"},{"size":1217,"mtime":1610804935909,"results":"62","hashOfConfig":"35"},{"size":13506,"mtime":1611336126900,"results":"63","hashOfConfig":"35"},{"size":6078,"mtime":1611342995484,"results":"64","hashOfConfig":"35"},{"size":7038,"mtime":1611247105532,"results":"65","hashOfConfig":"35"},{"size":1409,"mtime":1611245672776,"results":"66","hashOfConfig":"35"},{"size":551,"mtime":1611219982410,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"vtgqsx",{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"71"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"71"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"71"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"71"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"71"},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",["151","152"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './indexTheme';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["153","154","155","156","157","158"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts",["159"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",["160"],"const getLocalStorageData = (): any => {\n  const accessToken = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n\n  return {\n    token: { accessToken, refreshToken },\n  };\n};\n\nexport default getLocalStorageData;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["161","162","163","164"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["165"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["166","167","168","169","170","171","172"],"import React, {\r\n  FC, memo, useEffect, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\ninterface UserData {\r\n  isAdmin: boolean;\r\n}\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  // const loadUserInfoFromLocalStorage = async () => {\r\n  //   if (token.accessToken && token.refreshToken) {\r\n  //     setUserData(parseToken(token.accessToken as string));\r\n  //     console.log('here admin :>> ');\r\n  //     console.log('userData', parseToken(token.accessToken as string));\r\n  //     setIsAuth(true);\r\n  //   } else {\r\n  //     setIsAuth(false);\r\n  //   }\r\n  // };\r\n\r\n  // loadUserInfoFromLocalStorage();\r\n\r\n  // useEffect(() => {\r\n  //   loadUserInfoFromLocalStorage();\r\n\r\n  //   // if (token.accessToken && token.refreshToken) {\r\n  //   //   setUserData(parseToken(token.accessToken as string));\r\n  //   //   console.log('here admin :>> ');\r\n  //   //   console.log('userData', userData);\r\n  //   //   setIsAuth(true);\r\n  //   // } else {\r\n  //   //   setIsAuth(false);\r\n  //   // }\r\n  // }, []);\r\n\r\n  console.log('userData ProtectedRoutes :>> ', userData);\r\n\r\n  // // if (!isAdmin) return <Redirect to=\"/signin\" />;\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (userData.hasAccessToStatisticPage) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // if (isAuth && !userData?.isAdmin) return <Redirect to=\"/user\" />;\r\n  // if (isAuth && userData?.isAdmin) return <Redirect to=\"/admin\" />;\r\n\r\n  //   return (\r\n  //     <Route\r\n  //       {...rest}\r\n  //       render={props =>\r\n  //         isLoggedIn ? (\r\n  //           <Component {...props} />\r\n  //         ) : (\r\n  //             <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n  //           )\r\n  //       }\r\n  //     />\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n\r\n  // return (\r\n\r\n  //   <Switch>\r\n  //     {(userData && userData.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n  //   </Switch>\r\n\r\n  // );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["173","174","175","176","177","178"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",["179"],"export const parseToken = (token: string) => {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  const jsonPayload = JSON.parse(decodeURIComponent(atob(base64).split('').map((c) => `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`).join('')));\r\n  return jsonPayload;\r\n};\r\n\r\nexport default parseToken;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["180"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport useStyles from './style';\r\nimport { apiGetUser } from '../../api/user';\r\nimport parseToken from '../../utils/parseToken';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { apiChangeActiveSpeakerInChannel, apiSetBrakeInChannel } from '../../api/admin';\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\ntype DataForAdmin = {\r\n  channelForShowing: {\r\n    break: boolean, id: number, link: string,\r\n    number: number\r\n  },\r\n  description: string;\r\n  id: number;\r\n  letter: string;\r\n  name: string;\r\n  speakers: Array<Speaker>\r\n\r\n};\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AdminPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [error]: [string, (error: string) => void] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [activeSpeaker, setActiveSpeaker] = useState('');\r\n\r\n  const [selectedSpeakerToActivate, setSelectedSpeakerToActivate] = useState('');\r\n\r\n  const [dataForAdmin, setDataForAdmin] = useState<DataForAdmin>();\r\n  const [activeButtonId, setActiveButtonId] = useState<number | undefined>();\r\n\r\n  const loadDataForAdmin = async () => {\r\n    const response = await apiGetUser(userData.id, token);\r\n    setDataForAdmin(response);\r\n\r\n    if (response && response.channelForShowing && response.channelForShowing.activeSpeaker) {\r\n      setActiveSpeaker(`${response.channelForShowing.activeSpeaker.lastName} ${response.channelForShowing.activeSpeaker.firstName}`);\r\n      setActiveButtonId(response.channelForShowing.activeSpeaker.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForAdmin();\r\n  }, []);\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  const activateSelectedSpeaker = async (speakerId: string) => {\r\n    const response = await apiChangeActiveSpeakerInChannel(\r\n      token,\r\n      Number(speakerId),\r\n      Number(dataForAdmin && dataForAdmin.channelForShowing.number),\r\n    );\r\n\r\n    setActiveSpeaker(`${response.lastName} ${response.firstName}`);\r\n  };\r\n\r\n  const setBreakBetweenSessions = async () => {\r\n    await apiSetBrakeInChannel(\r\n      token,\r\n      Number(dataForAdmin && dataForAdmin.channelForShowing.number),\r\n    );\r\n    setActiveSpeaker('');\r\n    setActiveButtonId(undefined);\r\n  };\r\n\r\n  const renderSpeakersDataForAdmin = (element: Speaker) => {\r\n    if (!element.isModerator) {\r\n      return (\r\n\r\n        <Grid container xs={12} justify=\"center\">\r\n          <Button\r\n            onClick={(e) => {\r\n              setSelectedSpeakerToActivate(e.currentTarget.value);\r\n              setActiveButtonId(Number(e.currentTarget.value));\r\n            }}\r\n            value={element.id}\r\n            data-id=\"\"\r\n            className={activeButtonId === element.id ?\r\n              classes.speakerButtonActive : classes.speakerButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {`${element.lastName}  ${element.firstName}`}\r\n          </Button>\r\n        </Grid>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Администратора\r\n          </Typography>\r\n          <p className={classes.sessionLetter}>\r\n            {dataForAdmin && dataForAdmin.letter}\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <Grid container justify=\"space-around\">\r\n\r\n        <Grid item xs={4}>\r\n          {\r\n            dataForAdmin && dataForAdmin.speakers.map(\r\n              (element) => renderSpeakersDataForAdmin(element),\r\n            )\r\n          }\r\n        </Grid>\r\n\r\n        <Grid item justify=\"center\" xs={4}>\r\n          <p className={`${classes.textCenter} ${classes.activateSelectedSpeakerP}`}>\r\n            <Button onClick={() => activateSelectedSpeaker(selectedSpeakerToActivate)} variant=\"contained\" color=\"primary\">Активировать выбранного спикера</Button>\r\n          </p>\r\n\r\n          <p className={classes.textCenter}>\r\n            <Button onClick={() => setBreakBetweenSessions()} variant=\"contained\" color=\"primary\">Активировать перерыв</Button>\r\n          </p>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <p className={classes.activeSpeakerText}>\r\n            Активный спикер:\r\n            {' '}\r\n            {`${activeSpeaker}`}\r\n          </p>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AdminPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["181"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["182","183","184","185","186","187","188","189","190"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts",["191"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["192","193","194","195","196","197","198","199"],"import React, { memo, useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport { createPortal } from 'react-dom';\nimport useStyles from './style';\n\nconst VideoPlayerMain = (props: any) => {\n  const classes = useStyles();\n\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef;\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\n\n  const playVideo = (): any => {\n\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      data-testid=\"loading-page\"\n    >\n      <div\n        className={props.classNameInner}\n        ref={inputRef}\n      >\n        <Iframe\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\n          url={props.videoURL}\n          width=\"100%\"\n          height={props.height}\n          position=\"relative\"\n          allow=\"fullscreen\"\n          onLoad={playVideo()}\n        />\n      </div>\n    </Grid>\n\n  );\n};\n\nexport default memo(VideoPlayerMain);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["200"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx",["201","202","203","204","205","206","207","208","209","210"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["211","212","213","214","215","216"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiGetUser = async (\n  userId: string,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getUser}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiVoteForSpeaker = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  rate: number | null,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.voteForSpeaker}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId, rate }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakers = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakers}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakersAllInSession = async (\n  sessionId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakersAll}`;\n\n  try {\n    const { data } = await axios.post(url, { sessionId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiGetAllChannels = async (\n  userId: string,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getAllChannels}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserChangeActiveChannel = async (\n  channelNumber: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelNumber, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["217","218"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\nexport const apiChangeActiveSpeakerInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  speakerIdToActivate: number,\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveSpeakerInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerIdToActivate, channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetBrakeInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setBrakeInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["219","220","221","222","223","224","225","226"],"/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\nimport React, { memo, useEffect } from 'react';\r\nimport {\r\n  Grid, Hidden,\r\n} from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport Rating from '@material-ui/lab/Rating';\r\n// import { useEffect } from 'react';\r\nimport useStyles from './style';\r\nimport noAvatar from '../../img/speakersImg/noAvatar.svg';\r\nimport PDF from '../../img/pdf_icon.svg';\r\nimport Zoom from '../../img/zoomfondo-blanco-vertical-seeklogo.svg';\r\nimport PDFDisabled from '../../img/pdf_icon_black_and_white.svg';\r\nimport ZoomDisabled from '../../img/zoomfondo_black_and_white.svg';\r\nimport { apiVoteForSpeaker } from '../../api/user';\r\n\r\ntype Vote = {\r\n\r\n  createdAt: Date;\r\n  id: number;\r\n  rate: number;\r\n  speaker: Speaker\r\n\r\n};\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\nconst SpeakersSessionInfoBlock = (props: any) => {\r\n  const classes = useStyles();\r\n  const [value] = React.useState<number | null>(5);\r\n\r\n  const {\r\n    currentModeratorInfo,\r\n    currentSessionSpeakersInfo,\r\n    currentSessionSpeakersAllRates,\r\n    currentUserData,\r\n\r\n  } = props;\r\n\r\n  const [currentSessionSpeakersAllRatesState,\r\n    setCurrentSessionSpeakersAllRatesState] =\r\n    React.useState<Vote[]>(currentSessionSpeakersAllRates);\r\n\r\n  useEffect(() => {\r\n    setCurrentSessionSpeakersAllRatesState(currentSessionSpeakersAllRates);\r\n  }, [currentSessionSpeakersAllRates]);\r\n\r\n  const checkIsWatched = (speakerId: number) => {\r\n    if (currentUserData && currentUserData.foundUser && currentUserData.foundUser.watchedSpeakers) {\r\n      const foundWtchedSpeaker = currentUserData.foundUser.watchedSpeakers.find(\r\n        (speaker: any) => speaker.id === speakerId,\r\n      );\r\n\r\n      if (foundWtchedSpeaker) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    } else return true;\r\n  };\r\n\r\n  const renderSpeakersRates = (element: any) => {\r\n    if (currentSessionSpeakersAllRatesState) {\r\n      if (currentSessionSpeakersAllRatesState!.length > 0) {\r\n        const foundRate = currentSessionSpeakersAllRatesState!.find(\r\n          (vote: any) => vote.speaker.id === element.id,\r\n        );\r\n\r\n        if (foundRate) {\r\n          return foundRate.rate;\r\n        } else return 0;\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderMockedSessionSpeakers = () => (\r\n    <>\r\n      <Grid xs={12} lg={2} xl={2} item>\r\n\r\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\r\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\r\n        </p>\r\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\r\n        <p className={classes.speakerNameInsideSession}>Имя</p>\r\n        <p>\r\n          {' '}\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\r\n          </Box>\r\n\r\n        </p>\r\n\r\n        <Grid container justify=\"space-around\">\r\n          <Grid item>\r\n\r\n            <img src={PDF} alt=\"\" />\r\n\r\n          </Grid>\r\n\r\n          <Grid item>\r\n\r\n            <img src={Zoom} alt=\"\" />\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Grid item>\r\n\r\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\r\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\r\n        </p>\r\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\r\n        <p className={classes.speakerNameInsideSession}>Имя</p>\r\n        <p>\r\n          {' '}\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\r\n          </Box>\r\n\r\n        </p>\r\n\r\n        <Grid container justify=\"space-around\">\r\n          <Grid item>\r\n\r\n            <img src={PDF} alt=\"\" />\r\n\r\n          </Grid>\r\n          <Grid item>\r\n\r\n            <img src={Zoom} alt=\"\" />\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Grid item>\r\n\r\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\r\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\r\n        </p>\r\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\r\n        <p className={classes.speakerNameInsideSession}>Имя</p>\r\n        <p>\r\n          {' '}\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\r\n          </Box>\r\n\r\n        </p>\r\n\r\n        <Grid container justify=\"space-around\">\r\n          <Grid item>\r\n\r\n            <img src={PDF} alt=\"\" />\r\n\r\n          </Grid>\r\n          <Grid item>\r\n\r\n            <img src={Zoom} alt=\"\" />\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Grid item>\r\n\r\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\r\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\r\n        </p>\r\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\r\n        <p className={classes.speakerNameInsideSession}>Имя</p>\r\n        <p>\r\n          {' '}\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\r\n          </Box>\r\n\r\n        </p>\r\n\r\n        <Grid container justify=\"space-around\">\r\n          <Grid item>\r\n\r\n            <img src={PDF} alt=\"\" />\r\n\r\n          </Grid>\r\n          <Grid item>\r\n\r\n            <img src={Zoom} alt=\"\" />\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Grid item>\r\n\r\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\r\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\r\n        </p>\r\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\r\n        <p className={classes.speakerNameInsideSession}>Имя</p>\r\n        <p>\r\n          {' '}\r\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\r\n          </Box>\r\n\r\n        </p>\r\n\r\n        <Grid container justify=\"space-around\">\r\n          <Grid item>\r\n\r\n            <img src={PDF} alt=\"\" />\r\n\r\n          </Grid>\r\n          <Grid item>\r\n\r\n            <img src={Zoom} alt=\"\" />\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  const sendVoteForSpeaker = async (\r\n    rateDirectlyFromUI: number | null,\r\n    currentSpeakerId: number,\r\n  ) => {\r\n    console.log('1 :>> ');\r\n    await apiVoteForSpeaker(\r\n      currentSpeakerId,\r\n      props.userId,\r\n      props.token,\r\n      rateDirectlyFromUI,\r\n    );\r\n  };\r\n\r\n  const renderSessionSpeakers = () => (\r\n\r\n    currentSessionSpeakersInfo.map((element: any) => {\r\n      if (!element.isModerator) {\r\n        return (\r\n          <>\r\n            <Grid className={classes.singleSpeakerBlock} xs={12} lg={2} xl={2} item>\r\n\r\n              <p className={classes.speakerAvatarInsideSessionParagraph}>\r\n                <img className={classes.speakerAvatarInsideSession} src={element.linkToImg} alt=\"\" />\r\n              </p>\r\n              <p className={classes.speakerNameInsideSession}>{element.lastName}</p>\r\n              <p className={classes.speakerNameInsideSession}>{element.firstName}</p>\r\n              <p className={classes.textCenter}>\r\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                  <Rating\r\n                    id={element.id}\r\n                    classes={{ iconEmpty: 'rateSmallDefault' }}\r\n                    className={classes.smallScoreStarImg}\r\n                    name={element.id}\r\n                    disabled={checkIsWatched(element.id)}\r\n                    value={renderSpeakersRates(element) || 0}\r\n                    readOnly={checkIsWatched(element.id)}\r\n                    onChange={async (name, newValue) => {\r\n                      sendVoteForSpeaker(newValue, +element.id);\r\n                    }}\r\n                  />\r\n                </Box>\r\n\r\n              </p>\r\n\r\n              <Grid xs={6} lg={10} xl={10} container className={classes.mxAuto} justify=\"space-around\">\r\n                <Grid item>\r\n\r\n                  <img\r\n                    className={checkIsWatched(element.id) ? `${classes.loadPDFImg} ${classes.disabledImg}`\r\n                      : `${classes.pointerImg} ${classes.loadPDFImg}`}\r\n                    src={checkIsWatched(element.id) ? PDFDisabled : PDF}\r\n                    onClick={() => window.open(`${element.linkToPresentation}`, '_blank')}\r\n                    alt=\"\"\r\n                  />\r\n\r\n                </Grid>\r\n\r\n                {\r\n                  element.linkToZoom ? (\r\n                    <Grid item>\r\n\r\n                      <img\r\n                        src={checkIsWatched(element.id) ? ZoomDisabled : Zoom}\r\n                        className={\r\n                          checkIsWatched(element.id) ? `${classes.loadZoomImg} ${classes.disabledImg}`\r\n                            : `${classes.pointerImg} ${classes.loadZoomImg}`\r\n                        }\r\n                        onClick={() => window.open(`${element.linkToZoom}`, '_blank')}\r\n                        alt=\"\"\r\n                      />\r\n\r\n                    </Grid>\r\n                  ) : null\r\n                }\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n          </>\r\n        );\r\n      }\r\n    })\r\n  );\r\n\r\n  const renderSpeakers = () => {\r\n    if (currentUserData) {\r\n      if (!currentUserData.channelUserInfo.activeSession\r\n        && currentUserData.channelUserInfo.break) {\r\n        return renderMockedSessionSpeakers();\r\n      }\r\n\r\n      if (currentUserData.channelUserInfo.activeSession\r\n        && currentUserData.channelUserInfo.break) {\r\n        return renderMockedSessionSpeakers();\r\n      }\r\n\r\n      if (props.currentSessionSpeakersInfo) {\r\n        return renderSessionSpeakers();\r\n      } else renderMockedSessionSpeakers();\r\n    } else renderMockedSessionSpeakers();\r\n  };\r\n\r\n  const renderModeratorImgSrc = () => {\r\n    if (currentUserData) {\r\n      if (!currentUserData.channelUserInfo.activeSession\r\n        && currentUserData.channelUserInfo.break) {\r\n        return noAvatar;\r\n      }\r\n\r\n      if (currentUserData.channelUserInfo.activeSession\r\n        && currentUserData.channelUserInfo.break) {\r\n        return noAvatar;\r\n      }\r\n\r\n      if (currentModeratorInfo) {\r\n        return currentModeratorInfo.linkToImg;\r\n      } else return noAvatar;\r\n    } else return noAvatar;\r\n  };\r\n\r\n  const renderModeratorFullName = () => {\r\n    if (currentUserData) {\r\n      if (!currentUserData.channelUserInfo.activeSession\r\n        && currentUserData.channelUserInfo.break) {\r\n        return 'ФАМИЛИЯ Имя';\r\n      }\r\n\r\n      if (currentUserData.channelUserInfo.activeSession\r\n        && currentUserData.channelUserInfo.break) {\r\n        return 'ФАМИЛИЯ Имя';\r\n      }\r\n\r\n      if (currentModeratorInfo) {\r\n        return `${currentModeratorInfo.lastName} ${currentModeratorInfo.firstName}`;\r\n      } else return 'ФАМИЛИЯ Имя';\r\n    } else return 'ФАМИЛИЯ Имя';\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      <Grid xs={12} item container className={classes.mainContainerBckg}>\r\n        {/* mobile */}\r\n        <Hidden only={['sm', 'lg', 'xl', 'md']}>\r\n          <Grid justify=\"space-around\" item className={classes.moderatorContainerInfoBlock} container xs={12} lg={4} xl={4}>\r\n\r\n            <Grid item xs={4} xl={3}>\r\n              <img width=\"100%\" src={renderModeratorImgSrc()} alt=\"\" />\r\n\r\n            </Grid>\r\n            <Grid className={classes.moderatorInfoBlock} item xs={6} xl={8} lg={8}>\r\n\r\n              <p className={classes.moderatorHeaderText}>Модератор</p>\r\n              <p className={classes.moderatorFullName}>{renderModeratorFullName()}</p>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid item xs={12} lg={8} xl={8}>\r\n          <p className={classes.speakersBlockHeader}>Спикеры сессии</p>\r\n        </Grid>\r\n        <Hidden xsDown>\r\n          <Grid justify=\"space-between\" item className={classes.moderatorContainerInfoBlock} container xs={4} lg={4} xl={4}>\r\n\r\n            <Grid item xs={3} xl={3}>\r\n              <img width=\"100%\" src={renderModeratorImgSrc()} alt=\"\" />\r\n\r\n            </Grid>\r\n            <Grid className={classes.moderatorInfoBlock} item xs={8} xl={8} lg={8}>\r\n\r\n              <p className={classes.moderatorHeaderText}>Модератор</p>\r\n              <p className={classes.moderatorFullName}>{renderModeratorFullName()}</p>\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Hidden>\r\n        <Grid className={classes.sessionSpeakersBlock} justify=\"space-around\" container xs={12}>\r\n\r\n          {\r\n            renderSpeakers()\r\n            // currentSessionSpeakersInfo ?\r\n            //  renderSessionSpeakers() : renderMockedSessionSpeakers()\r\n          }\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(SpeakersSessionInfoBlock);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx",["227","228","229"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { apiGetStats } from '../../api/stats';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport parseToken from '../../utils/parseToken';\r\nimport useStyles from './style';\r\n\r\ntype User = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n\r\n};\r\n\r\ntype Vote = {\r\n  rate: number;\r\n  user: User;\r\n  createdAt: Date;\r\n};\r\n\r\ntype DataForStats = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n  usersWhoWatchedSpeaker: Array<User>;\r\n  votes: Array<Vote>;\r\n\r\n};\r\n\r\nconst StatsPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [dataForStatsViewer, setDataForStatsViewer] = useState<DataForStats[]>();\r\n\r\n  const loadDataForStatsViewer = async () => {\r\n    const response = await apiGetStats(userData.id, token);\r\n    setDataForStatsViewer(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForStatsViewer();\r\n  }, []);\r\n\r\n  const Row = (props: { row: DataForStats }) => {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let sum = 0;\r\n\r\n    row.votes.map((element) => {\r\n      sum += element.rate;\r\n    });\r\n\r\n    const medianValue = (+sum / +row.votes.length || 0).toFixed(2);\r\n\r\n    const renderRate = (historyRow: any) => {\r\n      const currentRate = row && row!.votes.find(\r\n        (element: any) => element.user.id === historyRow.id,\r\n      );\r\n\r\n      if (currentRate && currentRate.createdAt && !currentRate.rate) return '0';\r\n      return currentRate && currentRate.rate || 'без оценки';\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <TableRow className={classes.root}>\r\n          <TableCell align=\"center\">\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n            {`${row.firstName} ${row.lastName}`}\r\n          </TableCell>\r\n          <TableCell align=\"center\">{row.usersWhoWatchedSpeaker.length}</TableCell>\r\n          <TableCell align=\"center\">{row.votes.length}</TableCell>\r\n          <TableCell align=\"center\">{medianValue}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Подробнее\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Имя Фамилия участника</TableCell>\r\n                      <TableCell align=\"center\">Просмотрел</TableCell>\r\n                      <TableCell align=\"center\">Оценка</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {row.usersWhoWatchedSpeaker.map((historyRow) => (\r\n                      <TableRow key={historyRow.id}>\r\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                          {`${historyRow.firstName} ${historyRow.lastName}`}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            defaultChecked\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{renderRate(historyRow)}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.pageNameContainer} component=\"main\" maxWidth=\"xs\">\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Просмотра Статистики\r\n          </Typography>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <div className={classes.root}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell align=\"center\">Имя Фамилия спикера</TableCell>\r\n                <TableCell align=\"center\">Количество просмотров</TableCell>\r\n                <TableCell align=\"center\">Количество оценок</TableCell>\r\n                <TableCell align=\"center\">Средняя оценка</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataForStatsViewer && dataForStatsViewer.map((row) => (\r\n                <Row key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(StatsPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts",["230"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n\nexport const apiGetStats = async (\n  userId: string,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getStats}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n",{"ruleId":"231","severity":1,"message":"232","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":23},{"ruleId":"231","severity":1,"message":"235","line":7,"column":10,"nodeType":"233","messageId":"234","endLine":7,"endColumn":15},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"248","severity":1,"message":"249","line":3,"column":25,"nodeType":"250","messageId":"251","endLine":3,"endColumn":57},{"ruleId":"252","severity":1,"message":"253","line":1,"column":33,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36,"suggestions":"256"},{"ruleId":"231","severity":1,"message":"257","line":19,"column":3,"nodeType":"233","messageId":"234","endLine":19,"endColumn":14},{"ruleId":"231","severity":1,"message":"258","line":19,"column":16,"nodeType":"233","messageId":"234","endLine":19,"endColumn":22},{"ruleId":"231","severity":1,"message":"259","line":28,"column":11,"nodeType":"233","messageId":"234","endLine":28,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":33,"column":23,"nodeType":"254","messageId":"255","endLine":33,"endColumn":26,"suggestions":"260"},{"ruleId":"252","severity":1,"message":"253","line":10,"column":12,"nodeType":"254","messageId":"255","endLine":10,"endColumn":15,"suggestions":"261"},{"ruleId":"231","severity":1,"message":"262","line":2,"column":13,"nodeType":"233","messageId":"234","endLine":2,"endColumn":22},{"ruleId":"231","severity":1,"message":"263","line":11,"column":8,"nodeType":"233","messageId":"234","endLine":11,"endColumn":19},{"ruleId":"231","severity":1,"message":"264","line":16,"column":8,"nodeType":"233","messageId":"234","endLine":16,"endColumn":17},{"ruleId":"231","severity":1,"message":"265","line":19,"column":11,"nodeType":"233","messageId":"234","endLine":19,"endColumn":19},{"ruleId":"231","severity":1,"message":"266","line":24,"column":18,"nodeType":"233","messageId":"234","endLine":24,"endColumn":27},{"ruleId":"231","severity":1,"message":"267","line":28,"column":20,"nodeType":"233","messageId":"234","endLine":28,"endColumn":31},{"ruleId":"268","severity":1,"message":"269","line":56,"column":3,"nodeType":"270","messageId":"271","endLine":56,"endColumn":14},{"ruleId":"236","replacedBy":"272"},{"ruleId":"238","replacedBy":"273"},{"ruleId":"240","replacedBy":"274"},{"ruleId":"242","replacedBy":"275"},{"ruleId":"244","replacedBy":"276"},{"ruleId":"246","replacedBy":"277"},{"ruleId":"248","severity":1,"message":"249","line":1,"column":27,"nodeType":"250","messageId":"251","endLine":1,"endColumn":51},{"ruleId":"252","severity":1,"message":"253","line":54,"column":23,"nodeType":"254","messageId":"255","endLine":54,"endColumn":26,"suggestions":"278"},{"ruleId":"231","severity":1,"message":"279","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":193,"column":21,"nodeType":"254","messageId":"255","endLine":193,"endColumn":24,"suggestions":"280"},{"ruleId":"252","severity":1,"message":"253","line":269,"column":47,"nodeType":"254","messageId":"255","endLine":269,"endColumn":50,"suggestions":"281"},{"ruleId":"252","severity":1,"message":"253","line":287,"column":46,"nodeType":"254","messageId":"255","endLine":287,"endColumn":49,"suggestions":"282"},{"ruleId":"252","severity":1,"message":"253","line":318,"column":62,"nodeType":"254","messageId":"255","endLine":318,"endColumn":65,"suggestions":"283"},{"ruleId":"252","severity":1,"message":"253","line":334,"column":67,"nodeType":"254","messageId":"255","endLine":334,"endColumn":70,"suggestions":"284"},{"ruleId":"231","severity":1,"message":"285","line":353,"column":9,"nodeType":"233","messageId":"234","endLine":353,"endColumn":13},{"ruleId":"231","severity":1,"message":"286","line":354,"column":9,"nodeType":"233","messageId":"234","endLine":354,"endColumn":13},{"ruleId":"252","severity":1,"message":"253","line":363,"column":41,"nodeType":"254","messageId":"255","endLine":363,"endColumn":44,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":364,"column":28,"nodeType":"290","messageId":"291","endLine":364,"endColumn":40,"suggestions":"292"},{"ruleId":"231","severity":1,"message":"293","line":15,"column":9,"nodeType":"233","messageId":"234","endLine":15,"endColumn":20},{"ruleId":"231","severity":1,"message":"294","line":2,"column":16,"nodeType":"233","messageId":"234","endLine":2,"endColumn":32},{"ruleId":"231","severity":1,"message":"295","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":22},{"ruleId":"252","severity":1,"message":"253","line":7,"column":33,"nodeType":"254","messageId":"255","endLine":7,"endColumn":36,"suggestions":"296"},{"ruleId":"231","severity":1,"message":"297","line":8,"column":9,"nodeType":"233","messageId":"234","endLine":8,"endColumn":16},{"ruleId":"231","severity":1,"message":"298","line":10,"column":22,"nodeType":"233","messageId":"234","endLine":10,"endColumn":35},{"ruleId":"231","severity":1,"message":"299","line":11,"column":9,"nodeType":"233","messageId":"234","endLine":11,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":12,"column":19,"nodeType":"254","messageId":"255","endLine":12,"endColumn":22,"suggestions":"300"},{"ruleId":"252","severity":1,"message":"253","line":14,"column":25,"nodeType":"254","messageId":"255","endLine":14,"endColumn":28,"suggestions":"301"},{"ruleId":"252","severity":1,"message":"253","line":12,"column":34,"nodeType":"254","messageId":"255","endLine":12,"endColumn":37,"suggestions":"302"},{"ruleId":"231","severity":1,"message":"294","line":3,"column":9,"nodeType":"233","messageId":"234","endLine":3,"endColumn":25},{"ruleId":"231","severity":1,"message":"303","line":3,"column":27,"nodeType":"233","messageId":"234","endLine":3,"endColumn":37},{"ruleId":"231","severity":1,"message":"304","line":3,"column":39,"nodeType":"233","messageId":"234","endLine":3,"endColumn":45},{"ruleId":"231","severity":1,"message":"305","line":5,"column":8,"nodeType":"233","messageId":"234","endLine":5,"endColumn":14},{"ruleId":"231","severity":1,"message":"306","line":6,"column":8,"nodeType":"233","messageId":"234","endLine":6,"endColumn":11},{"ruleId":"231","severity":1,"message":"307","line":7,"column":8,"nodeType":"233","messageId":"234","endLine":7,"endColumn":14},{"ruleId":"231","severity":1,"message":"308","line":8,"column":8,"nodeType":"233","messageId":"234","endLine":8,"endColumn":15},{"ruleId":"231","severity":1,"message":"309","line":10,"column":8,"nodeType":"233","messageId":"234","endLine":10,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":12,"column":31,"nodeType":"254","messageId":"255","endLine":12,"endColumn":34,"suggestions":"310"},{"ruleId":"231","severity":1,"message":"297","line":13,"column":9,"nodeType":"233","messageId":"234","endLine":13,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":14,"column":12,"nodeType":"254","messageId":"255","endLine":14,"endColumn":15,"suggestions":"311"},{"ruleId":"252","severity":1,"message":"253","line":37,"column":12,"nodeType":"254","messageId":"255","endLine":37,"endColumn":15,"suggestions":"312"},{"ruleId":"252","severity":1,"message":"253","line":59,"column":12,"nodeType":"254","messageId":"255","endLine":59,"endColumn":15,"suggestions":"313"},{"ruleId":"252","severity":1,"message":"253","line":81,"column":12,"nodeType":"254","messageId":"255","endLine":81,"endColumn":15,"suggestions":"314"},{"ruleId":"252","severity":1,"message":"253","line":103,"column":12,"nodeType":"254","messageId":"255","endLine":103,"endColumn":15,"suggestions":"315"},{"ruleId":"252","severity":1,"message":"253","line":125,"column":12,"nodeType":"254","messageId":"255","endLine":125,"endColumn":15,"suggestions":"316"},{"ruleId":"252","severity":1,"message":"253","line":13,"column":12,"nodeType":"254","messageId":"255","endLine":13,"endColumn":15,"suggestions":"317"},{"ruleId":"252","severity":1,"message":"253","line":34,"column":12,"nodeType":"254","messageId":"255","endLine":34,"endColumn":15,"suggestions":"318"},{"ruleId":"252","severity":1,"message":"253","line":44,"column":42,"nodeType":"254","messageId":"255","endLine":44,"endColumn":45,"suggestions":"319"},{"ruleId":"252","severity":1,"message":"253","line":67,"column":19,"nodeType":"254","messageId":"255","endLine":67,"endColumn":22,"suggestions":"320"},{"ruleId":"252","severity":1,"message":"253","line":78,"column":41,"nodeType":"254","messageId":"255","endLine":78,"endColumn":44,"suggestions":"321"},{"ruleId":"288","severity":1,"message":"289","line":80,"column":11,"nodeType":"290","messageId":"291","endLine":80,"endColumn":47,"suggestions":"322"},{"ruleId":"288","severity":1,"message":"289","line":81,"column":27,"nodeType":"290","messageId":"291","endLine":81,"endColumn":63,"suggestions":"323"},{"ruleId":"252","severity":1,"message":"253","line":82,"column":18,"nodeType":"254","messageId":"255","endLine":82,"endColumn":21,"suggestions":"324"},{"ruleId":"268","severity":1,"message":"269","line":256,"column":5,"nodeType":"270","messageId":"271","endLine":256,"endColumn":16},{"ruleId":"252","severity":1,"message":"253","line":267,"column":46,"nodeType":"254","messageId":"255","endLine":267,"endColumn":49,"suggestions":"325"},{"ruleId":"252","severity":1,"message":"253","line":96,"column":37,"nodeType":"254","messageId":"255","endLine":96,"endColumn":40,"suggestions":"326"},{"ruleId":"288","severity":1,"message":"289","line":97,"column":34,"nodeType":"290","messageId":"291","endLine":97,"endColumn":38,"suggestions":"327"},{"ruleId":"252","severity":1,"message":"253","line":98,"column":19,"nodeType":"254","messageId":"255","endLine":98,"endColumn":22,"suggestions":"328"},{"ruleId":"252","severity":1,"message":"253","line":12,"column":12,"nodeType":"254","messageId":"255","endLine":12,"endColumn":15,"suggestions":"329"},"@typescript-eslint/no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'theme' is defined but never used.","lines-around-directive",["330"],"no-spaced-func",["331"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["332","333"],"'useLocation' is defined but never used.","'Prompt' is defined but never used.","'Props' is defined but never used.",["334","335"],["336","337"],"'useEffect' is defined but never used.","'LoadingPage' is defined but never used.","'LoginPage' is defined but never used.","'UserData' is defined but never used.","'setIsAuth' is assigned a value but never used.","'setUserData' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected",["330"],["331"],[],[],[],[],["338","339"],"'Hidden' is defined but never used.",["340","341"],["342","343"],["344","345"],["346","347"],["348","349"],"'isMd' is assigned a value but never used.","'isSm' is assigned a value but never used.",["350","351"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["352"],"'breakpoints' is assigned a value but never used.","'CircularProgress' is defined but never used.","'createPortal' is defined but never used.",["353","354"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["355","356"],["357","358"],["359","360"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Iframe' is defined but never used.","'Box' is defined but never used.","'Rating' is defined but never used.","'Divider' is defined but never used.","'VideoPlayerMain' is defined but never used.",["361","362"],["363","364"],["365","366"],["367","368"],["369","370"],["371","372"],["373","374"],["375","376"],["377","378"],["379","380"],["381","382"],["383","384"],["385"],["386"],["387","388"],["389","390"],["391","392"],["393"],["394","395"],["396","397"],"padding-line-between-statements","func-call-spacing",{"messageId":"398","fix":"399","desc":"400"},{"messageId":"401","fix":"402","desc":"403"},{"messageId":"398","fix":"404","desc":"400"},{"messageId":"401","fix":"405","desc":"403"},{"messageId":"398","fix":"406","desc":"400"},{"messageId":"401","fix":"407","desc":"403"},{"messageId":"398","fix":"408","desc":"400"},{"messageId":"401","fix":"409","desc":"403"},{"messageId":"398","fix":"410","desc":"400"},{"messageId":"401","fix":"411","desc":"403"},{"messageId":"398","fix":"412","desc":"400"},{"messageId":"401","fix":"413","desc":"403"},{"messageId":"398","fix":"414","desc":"400"},{"messageId":"401","fix":"415","desc":"403"},{"messageId":"398","fix":"416","desc":"400"},{"messageId":"401","fix":"417","desc":"403"},{"messageId":"398","fix":"418","desc":"400"},{"messageId":"401","fix":"419","desc":"403"},{"messageId":"398","fix":"420","desc":"400"},{"messageId":"401","fix":"421","desc":"403"},{"messageId":"422","fix":"423","desc":"424"},{"messageId":"398","fix":"425","desc":"400"},{"messageId":"401","fix":"426","desc":"403"},{"messageId":"398","fix":"427","desc":"400"},{"messageId":"401","fix":"428","desc":"403"},{"messageId":"398","fix":"429","desc":"400"},{"messageId":"401","fix":"430","desc":"403"},{"messageId":"398","fix":"431","desc":"400"},{"messageId":"401","fix":"432","desc":"403"},{"messageId":"398","fix":"433","desc":"400"},{"messageId":"401","fix":"434","desc":"403"},{"messageId":"398","fix":"435","desc":"400"},{"messageId":"401","fix":"436","desc":"403"},{"messageId":"398","fix":"437","desc":"400"},{"messageId":"401","fix":"438","desc":"403"},{"messageId":"398","fix":"439","desc":"400"},{"messageId":"401","fix":"440","desc":"403"},{"messageId":"398","fix":"441","desc":"400"},{"messageId":"401","fix":"442","desc":"403"},{"messageId":"398","fix":"443","desc":"400"},{"messageId":"401","fix":"444","desc":"403"},{"messageId":"398","fix":"445","desc":"400"},{"messageId":"401","fix":"446","desc":"403"},{"messageId":"398","fix":"447","desc":"400"},{"messageId":"401","fix":"448","desc":"403"},{"messageId":"398","fix":"449","desc":"400"},{"messageId":"401","fix":"450","desc":"403"},{"messageId":"398","fix":"451","desc":"400"},{"messageId":"401","fix":"452","desc":"403"},{"messageId":"398","fix":"453","desc":"400"},{"messageId":"401","fix":"454","desc":"403"},{"messageId":"398","fix":"455","desc":"400"},{"messageId":"401","fix":"456","desc":"403"},{"messageId":"422","fix":"457","desc":"424"},{"messageId":"422","fix":"458","desc":"424"},{"messageId":"398","fix":"459","desc":"400"},{"messageId":"401","fix":"460","desc":"403"},{"messageId":"398","fix":"461","desc":"400"},{"messageId":"401","fix":"462","desc":"403"},{"messageId":"398","fix":"463","desc":"400"},{"messageId":"401","fix":"464","desc":"403"},{"messageId":"422","fix":"465","desc":"424"},{"messageId":"398","fix":"466","desc":"400"},{"messageId":"401","fix":"467","desc":"403"},{"messageId":"398","fix":"468","desc":"400"},{"messageId":"401","fix":"469","desc":"403"},"suggestUnknown",{"range":"470","text":"471"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"470","text":"472"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"473","text":"471"},{"range":"473","text":"472"},{"range":"474","text":"471"},{"range":"474","text":"472"},{"range":"475","text":"471"},{"range":"475","text":"472"},{"range":"476","text":"471"},{"range":"476","text":"472"},{"range":"477","text":"471"},{"range":"477","text":"472"},{"range":"478","text":"471"},{"range":"478","text":"472"},{"range":"479","text":"471"},{"range":"479","text":"472"},{"range":"480","text":"471"},{"range":"480","text":"472"},{"range":"481","text":"471"},{"range":"481","text":"472"},"suggestOptionalChain",{"range":"482","text":"483"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"484","text":"471"},{"range":"484","text":"472"},{"range":"485","text":"471"},{"range":"485","text":"472"},{"range":"486","text":"471"},{"range":"486","text":"472"},{"range":"487","text":"471"},{"range":"487","text":"472"},{"range":"488","text":"471"},{"range":"488","text":"472"},{"range":"489","text":"471"},{"range":"489","text":"472"},{"range":"490","text":"471"},{"range":"490","text":"472"},{"range":"491","text":"471"},{"range":"491","text":"472"},{"range":"492","text":"471"},{"range":"492","text":"472"},{"range":"493","text":"471"},{"range":"493","text":"472"},{"range":"494","text":"471"},{"range":"494","text":"472"},{"range":"495","text":"471"},{"range":"495","text":"472"},{"range":"496","text":"471"},{"range":"496","text":"472"},{"range":"497","text":"471"},{"range":"497","text":"472"},{"range":"498","text":"471"},{"range":"498","text":"472"},{"range":"499","text":"471"},{"range":"499","text":"472"},{"range":"500","text":"483"},{"range":"501","text":"483"},{"range":"502","text":"471"},{"range":"502","text":"472"},{"range":"503","text":"471"},{"range":"503","text":"472"},{"range":"504","text":"471"},{"range":"504","text":"472"},{"range":"505","text":"483"},{"range":"506","text":"471"},{"range":"506","text":"472"},{"range":"507","text":"471"},{"range":"507","text":"472"},[32,35],"unknown","never",[965,968],[222,225],[1577,1580],[6334,6337],[9632,9635],[10143,10146],[11025,11028],[11520,11523],[12507,12510],[12556,12557],"?",[250,253],[396,399],[498,501],[414,417],[421,424],[302,305],[793,796],[1300,1303],[1824,1827],[2308,2311],[2796,2799],[361,364],[891,894],[1240,1243],[2037,2040],[2260,2263],[2364,2365],[2442,2443],[2468,2471],[7206,7209],[2811,2814],[2858,2859],[2891,2894],[255,258]]