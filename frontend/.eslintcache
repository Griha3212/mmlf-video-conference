[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"19"},{"size":456,"mtime":1609760826337,"results":"20","hashOfConfig":"21"},{"size":436,"mtime":1609149080634,"results":"22","hashOfConfig":"21"},{"size":2241,"mtime":1609946942606,"results":"23","hashOfConfig":"21"},{"size":88,"mtime":1609151476043,"results":"24","hashOfConfig":"21"},{"size":254,"mtime":1609941695606,"results":"25","hashOfConfig":"21"},{"size":4711,"mtime":1609929499556,"results":"26","hashOfConfig":"21"},{"size":845,"mtime":1609924589133,"results":"27","hashOfConfig":"21"},{"size":433,"mtime":1609754100539,"results":"28","hashOfConfig":"21"},{"size":94,"mtime":1609326591701,"results":"29","hashOfConfig":"21"},{"size":2974,"mtime":1609946911509,"results":"30","hashOfConfig":"21"},{"size":455,"mtime":1609923543629,"results":"31","hashOfConfig":"21"},{"size":304,"mtime":1609923543632,"results":"32","hashOfConfig":"21"},{"size":368,"mtime":1609937434279,"results":"33","hashOfConfig":"21"},{"size":3950,"mtime":1609924615378,"results":"34","hashOfConfig":"21"},{"size":845,"mtime":1609924580526,"results":"35","hashOfConfig":"21"},{"size":360,"mtime":1609927664710,"results":"36","hashOfConfig":"21"},{"size":474,"mtime":1609927609396,"results":"37","hashOfConfig":"21"},{"size":4536,"mtime":1609947210179,"results":"38","hashOfConfig":"21"},{"size":845,"mtime":1609927083927,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"vtgqsx",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"42"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",[],["91","92","93","94","95","96"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts",["97"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",["98","99","100","101","102","103"],"import React, {\n  memo, FC, useState, useEffect,\n} from 'react';\nimport {\n  Route,\n  Router,\n  Switch,\n} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport history from './core/history';\nimport logo from './logo.svg';\nimport './App.css';\nimport getLocalStorageData from './utils/helpers/localStorage.helper';\nimport LoginPage from './containers/Login/LoginPage';\nimport { ProtectedRoutes } from './containers/ProtectedRoutes/ProtectedRoutes';\nimport parseToken from './utils/parseToken';\nimport AdminPage from './containers/Admin/AdminPage';\nimport UserPage from './containers/User/UserPage';\n\nconsole.log('process.env.API_URL :>> ', process.env.REACT_APP_API_URL);\n\nexport const App: FC = () => {\n  const [isAuth, setIsAuth] = useState(getLocalStorageData().token.accessToken);\n\n  console.log('APP isAuth :>> ', isAuth);\n\n  // useEffect(() => {\n  //   const { token } = getLocalStorageData();\n\n  //   if (token.accessToken && token.refreshToken) {\n  //     const userData = parseToken(token.accessToken as string);\n  //     console.log('userData :>> ', userData);\n  //     console.log('isAuth App :>> ', isAuth);\n  //     setIsAuth(true);\n  //   } else {\n  //     setIsAuth(false);\n  //   }\n\n  //   // if (token.accessToken && Object.keys(currentUser).length === 0) {\n  //   //   // const userData = parseToken(token.accessToken as string);\n  //   //   // const key = new Date().getTime() + Math.random();\n  //   //   // dispatch(checkLogin(userData.data.clientData?.id, userData.data.id, token, key));\n  //   //   setIsAuth(true);\n  //   // } else if (token.accessToken && Object.keys(currentUser).length > 0) {\n  //   //   setIsAuth(true);\n  //   // } else {\n  //   //   setIsAuth(false);\n  //   // }\n  // });\n\n  return (\n\n    <Router history={history}>\n      <CssBaseline />\n      {/* <Snackbar /> */}\n\n      <Switch>\n        <Route path=\"/signin\" component={LoginPage} />\n        <Route path=\"/admin\" component={AdminPage} />\n        <Route path=\"/user\" component={UserPage} />\n        {/* TO DO page for stats viewing */}\n        <Route path=\"/stats\" component={UserPage} />\n\n        <Route path=\"/\" component={ProtectedRoutes} />\n      </Switch>\n\n    </Router>\n  );\n};\n\nexport default memo(App);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",["104"],"const getLocalStorageData = (): any => {\n  const accessToken = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n\n  return {\n    token: { accessToken, refreshToken },\n  };\n};\n\nexport default getLocalStorageData;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["105","106"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["107"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["108","109","110","111","112","113","114"],"import React, {\r\n  FC, memo, useEffect, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\ninterface UserData {\r\n  isAdmin: boolean;\r\n}\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  // const loadUserInfoFromLocalStorage = async () => {\r\n  //   if (token.accessToken && token.refreshToken) {\r\n  //     setUserData(parseToken(token.accessToken as string));\r\n  //     console.log('here admin :>> ');\r\n  //     console.log('userData', parseToken(token.accessToken as string));\r\n  //     setIsAuth(true);\r\n  //   } else {\r\n  //     setIsAuth(false);\r\n  //   }\r\n  // };\r\n\r\n  // loadUserInfoFromLocalStorage();\r\n\r\n  // useEffect(() => {\r\n  //   loadUserInfoFromLocalStorage();\r\n\r\n  //   // if (token.accessToken && token.refreshToken) {\r\n  //   //   setUserData(parseToken(token.accessToken as string));\r\n  //   //   console.log('here admin :>> ');\r\n  //   //   console.log('userData', userData);\r\n  //   //   setIsAuth(true);\r\n  //   // } else {\r\n  //   //   setIsAuth(false);\r\n  //   // }\r\n  // }, []);\r\n\r\n  console.log('userData ProtectedRoutes :>> ', userData);\r\n\r\n  // // if (!isAdmin) return <Redirect to=\"/signin\" />;\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (!userData.isStatisticViewer) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // if (isAuth && !userData?.isAdmin) return <Redirect to=\"/user\" />;\r\n  // if (isAuth && userData?.isAdmin) return <Redirect to=\"/admin\" />;\r\n\r\n  //   return (\r\n  //     <Route\r\n  //       {...rest}\r\n  //       render={props =>\r\n  //         isLoggedIn ? (\r\n  //           <Component {...props} />\r\n  //         ) : (\r\n  //             <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n  //           )\r\n  //       }\r\n  //     />\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n\r\n  // return (\r\n\r\n  //   <Switch>\r\n  //     {(userData && userData.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n  //   </Switch>\r\n\r\n  // );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["115","116","117","118","119","120"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",["121"],"export const parseToken = (token: string) => {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  const jsonPayload = JSON.parse(decodeURIComponent(atob(base64).split('').map((c) => `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`).join('')));\r\n  return jsonPayload;\r\n};\r\n\r\nexport default parseToken;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143"],"import React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\nimport { Copyright } from '@material-ui/icons';\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport clsx from 'clsx';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useStyles from './style';\r\nimport { apiLogin } from '../../api/login';\r\n\r\ntype FormData = {\r\n  loginCode: string;\r\n};\r\n\r\ninterface Props {\r\n  onSubmit: (data: FormData) => void;\r\n\r\n}\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AdminPage: FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [error, setError]: [string, (error: string) => void] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    control, errors: fieldsErrors,\r\n  } = useForm<FormData>();\r\n  const onSubmit = async (data: FormData) => {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    const response = await apiLogin(data.loginCode);\r\n\r\n    console.log('response :>> ', response);\r\n\r\n    if (response && response.status === 404) {\r\n      setError('Нет соединения');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (response && response.status === 400) {\r\n      setError('Ошибка');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (!response) {\r\n      setError('Нет соединения');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (response && response.status === 500) {\r\n      setError(`${response.data}`);\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n    if (response && response.token && response.refreshToken) {\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('refreshToken', response.refreshToken);\r\n      setSuccess(true);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  // const sendLoginDataToServer =\r\n\r\n  return (\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Страница Администратора\r\n        </Typography>\r\n\r\n      </div>\r\n    </Container>\r\n\r\n  );\r\n};\r\n\r\nexport default memo(AdminPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["144"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],["145","146","147","148","149","150"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174"],"import React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\nimport { Copyright } from '@material-ui/icons';\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport clsx from 'clsx';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Redirect } from 'react-router-dom';\r\nimport useStyles from './style';\r\nimport { apiLogin } from '../../api/login';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport parseToken from '../../utils/parseToken';\r\n\r\ntype FormData = {\r\n  loginCode: string;\r\n};\r\n\r\ninterface Props {\r\n  onSubmit: (data: FormData) => void;\r\n\r\n}\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst UserPage: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  if (userData.isAdmin) {\r\n    return <Redirect to=\"/admin\" />;\r\n  }\r\n\r\n  if (userData.isStatisticViewer) {\r\n    return <Redirect to=\"/stats\" />;\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState();\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [error, setError]: [string, (error: string) => void] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    control, errors: fieldsErrors,\r\n  } = useForm<FormData>();\r\n  const onSubmit = async (data: FormData) => {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    const response = await apiLogin(data.loginCode);\r\n\r\n    console.log('response :>> ', response);\r\n\r\n    if (response && response.status === 404) {\r\n      setError('Нет соединения');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (response && response.status === 400) {\r\n      setError('Ошибка');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (!response) {\r\n      setError('Нет соединения');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (response && response.status === 500) {\r\n      setError(`${response.data}`);\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n    if (response && response.token && response.refreshToken) {\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('refreshToken', response.refreshToken);\r\n      setSuccess(true);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  // const sendLoginDataToServer =\r\n\r\n  return (\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {error}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Страница Пользователя\r\n        </Typography>\r\n\r\n      </div>\r\n    </Container>\r\n\r\n  );\r\n};\r\n\r\nexport default memo(UserPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":3,"column":25,"nodeType":"189","messageId":"190","endLine":3,"endColumn":57},{"ruleId":"191","severity":1,"message":"192","line":2,"column":23,"nodeType":"193","messageId":"194","endLine":2,"endColumn":32},{"ruleId":"191","severity":1,"message":"195","line":11,"column":8,"nodeType":"193","messageId":"194","endLine":11,"endColumn":12},{"ruleId":"191","severity":1,"message":"196","line":16,"column":8,"nodeType":"193","messageId":"194","endLine":16,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":20,"column":1,"nodeType":"199","messageId":"200","endLine":20,"endColumn":12},{"ruleId":"191","severity":1,"message":"201","line":23,"column":18,"nodeType":"193","messageId":"194","endLine":23,"endColumn":27},{"ruleId":"197","severity":1,"message":"198","line":25,"column":3,"nodeType":"199","messageId":"200","endLine":25,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":1,"column":33,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36,"suggestions":"206"},{"ruleId":"191","severity":1,"message":"207","line":25,"column":11,"nodeType":"193","messageId":"194","endLine":25,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":30,"column":23,"nodeType":"204","messageId":"205","endLine":30,"endColumn":26,"suggestions":"208"},{"ruleId":"202","severity":1,"message":"203","line":10,"column":12,"nodeType":"204","messageId":"205","endLine":10,"endColumn":15,"suggestions":"209"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":13,"nodeType":"193","messageId":"194","endLine":2,"endColumn":22},{"ruleId":"191","severity":1,"message":"210","line":11,"column":8,"nodeType":"193","messageId":"194","endLine":11,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":16,"column":8,"nodeType":"193","messageId":"194","endLine":16,"endColumn":17},{"ruleId":"191","severity":1,"message":"212","line":19,"column":11,"nodeType":"193","messageId":"194","endLine":19,"endColumn":19},{"ruleId":"191","severity":1,"message":"201","line":24,"column":18,"nodeType":"193","messageId":"194","endLine":24,"endColumn":27},{"ruleId":"191","severity":1,"message":"213","line":28,"column":20,"nodeType":"193","messageId":"194","endLine":28,"endColumn":31},{"ruleId":"197","severity":1,"message":"198","line":56,"column":3,"nodeType":"199","messageId":"200","endLine":56,"endColumn":14},{"ruleId":"175","replacedBy":"214"},{"ruleId":"177","replacedBy":"215"},{"ruleId":"179","replacedBy":"216"},{"ruleId":"181","replacedBy":"217"},{"ruleId":"183","replacedBy":"218"},{"ruleId":"185","replacedBy":"219"},{"ruleId":"187","severity":1,"message":"188","line":1,"column":27,"nodeType":"189","messageId":"190","endLine":1,"endColumn":51},{"ruleId":"191","severity":1,"message":"192","line":2,"column":23,"nodeType":"193","messageId":"194","endLine":2,"endColumn":32},{"ruleId":"191","severity":1,"message":"220","line":6,"column":10,"nodeType":"193","messageId":"194","endLine":6,"endColumn":19},{"ruleId":"191","severity":1,"message":"221","line":10,"column":8,"nodeType":"193","messageId":"194","endLine":10,"endColumn":14},{"ruleId":"191","severity":1,"message":"222","line":12,"column":8,"nodeType":"193","messageId":"194","endLine":12,"endColumn":17},{"ruleId":"191","severity":1,"message":"223","line":13,"column":8,"nodeType":"193","messageId":"194","endLine":13,"endColumn":24},{"ruleId":"191","severity":1,"message":"224","line":14,"column":8,"nodeType":"193","messageId":"194","endLine":14,"endColumn":16},{"ruleId":"191","severity":1,"message":"225","line":15,"column":8,"nodeType":"193","messageId":"194","endLine":15,"endColumn":12},{"ruleId":"191","severity":1,"message":"226","line":16,"column":8,"nodeType":"193","messageId":"194","endLine":16,"endColumn":12},{"ruleId":"191","severity":1,"message":"227","line":17,"column":8,"nodeType":"193","messageId":"194","endLine":17,"endColumn":11},{"ruleId":"191","severity":1,"message":"228","line":20,"column":10,"nodeType":"193","messageId":"194","endLine":20,"endColumn":20},{"ruleId":"191","severity":1,"message":"229","line":22,"column":19,"nodeType":"193","messageId":"194","endLine":22,"endColumn":29},{"ruleId":"191","severity":1,"message":"230","line":26,"column":8,"nodeType":"193","messageId":"194","endLine":26,"endColumn":24},{"ruleId":"191","severity":1,"message":"207","line":34,"column":11,"nodeType":"193","messageId":"194","endLine":34,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":39,"column":23,"nodeType":"204","messageId":"205","endLine":39,"endColumn":26,"suggestions":"231"},{"ruleId":"191","severity":1,"message":"232","line":46,"column":10,"nodeType":"193","messageId":"194","endLine":46,"endColumn":14},{"ruleId":"191","severity":1,"message":"233","line":46,"column":16,"nodeType":"193","messageId":"194","endLine":46,"endColumn":23},{"ruleId":"191","severity":1,"message":"234","line":53,"column":9,"nodeType":"193","messageId":"194","endLine":53,"endColumn":24},{"ruleId":"191","severity":1,"message":"235","line":58,"column":5,"nodeType":"193","messageId":"194","endLine":58,"endColumn":17},{"ruleId":"191","severity":1,"message":"236","line":59,"column":5,"nodeType":"193","messageId":"194","endLine":59,"endColumn":12},{"ruleId":"191","severity":1,"message":"237","line":59,"column":22,"nodeType":"193","messageId":"194","endLine":59,"endColumn":34},{"ruleId":"191","severity":1,"message":"238","line":61,"column":9,"nodeType":"193","messageId":"194","endLine":61,"endColumn":17},{"ruleId":"197","severity":1,"message":"198","line":68,"column":5,"nodeType":"199","messageId":"200","endLine":68,"endColumn":16},{"ruleId":"191","severity":1,"message":"239","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"175","replacedBy":"240"},{"ruleId":"177","replacedBy":"241"},{"ruleId":"179","replacedBy":"242"},{"ruleId":"181","replacedBy":"243"},{"ruleId":"183","replacedBy":"244"},{"ruleId":"185","replacedBy":"245"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":23,"nodeType":"193","messageId":"194","endLine":2,"endColumn":32},{"ruleId":"191","severity":1,"message":"220","line":6,"column":10,"nodeType":"193","messageId":"194","endLine":6,"endColumn":19},{"ruleId":"191","severity":1,"message":"221","line":10,"column":8,"nodeType":"193","messageId":"194","endLine":10,"endColumn":14},{"ruleId":"191","severity":1,"message":"222","line":12,"column":8,"nodeType":"193","messageId":"194","endLine":12,"endColumn":17},{"ruleId":"191","severity":1,"message":"223","line":13,"column":8,"nodeType":"193","messageId":"194","endLine":13,"endColumn":24},{"ruleId":"191","severity":1,"message":"224","line":14,"column":8,"nodeType":"193","messageId":"194","endLine":14,"endColumn":16},{"ruleId":"191","severity":1,"message":"225","line":15,"column":8,"nodeType":"193","messageId":"194","endLine":15,"endColumn":12},{"ruleId":"191","severity":1,"message":"226","line":16,"column":8,"nodeType":"193","messageId":"194","endLine":16,"endColumn":12},{"ruleId":"191","severity":1,"message":"227","line":17,"column":8,"nodeType":"193","messageId":"194","endLine":17,"endColumn":11},{"ruleId":"191","severity":1,"message":"228","line":20,"column":10,"nodeType":"193","messageId":"194","endLine":20,"endColumn":20},{"ruleId":"191","severity":1,"message":"229","line":22,"column":19,"nodeType":"193","messageId":"194","endLine":22,"endColumn":29},{"ruleId":"191","severity":1,"message":"230","line":26,"column":8,"nodeType":"193","messageId":"194","endLine":26,"endColumn":24},{"ruleId":"191","severity":1,"message":"207","line":37,"column":11,"nodeType":"193","messageId":"194","endLine":37,"endColumn":16},{"ruleId":"202","severity":1,"message":"203","line":42,"column":23,"nodeType":"204","messageId":"205","endLine":42,"endColumn":26,"suggestions":"246"},{"ruleId":"191","severity":1,"message":"201","line":47,"column":18,"nodeType":"193","messageId":"194","endLine":47,"endColumn":27},{"ruleId":"191","severity":1,"message":"213","line":50,"column":20,"nodeType":"193","messageId":"194","endLine":50,"endColumn":31},{"ruleId":"191","severity":1,"message":"232","line":62,"column":10,"nodeType":"193","messageId":"194","endLine":62,"endColumn":14},{"ruleId":"191","severity":1,"message":"233","line":62,"column":16,"nodeType":"193","messageId":"194","endLine":62,"endColumn":23},{"ruleId":"191","severity":1,"message":"234","line":69,"column":9,"nodeType":"193","messageId":"194","endLine":69,"endColumn":24},{"ruleId":"191","severity":1,"message":"235","line":74,"column":5,"nodeType":"193","messageId":"194","endLine":74,"endColumn":17},{"ruleId":"191","severity":1,"message":"236","line":75,"column":5,"nodeType":"193","messageId":"194","endLine":75,"endColumn":12},{"ruleId":"191","severity":1,"message":"237","line":75,"column":22,"nodeType":"193","messageId":"194","endLine":75,"endColumn":34},{"ruleId":"191","severity":1,"message":"238","line":77,"column":9,"nodeType":"193","messageId":"194","endLine":77,"endColumn":17},{"ruleId":"197","severity":1,"message":"198","line":84,"column":5,"nodeType":"199","messageId":"200","endLine":84,"endColumn":16},"lines-around-directive",["247"],"no-spaced-func",["248"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'parseToken' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'setIsAuth' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["249","250"],"'Props' is defined but never used.",["251","252"],["253","254"],"'LoadingPage' is defined but never used.","'LoginPage' is defined but never used.","'UserData' is defined but never used.","'setUserData' is assigned a value but never used.",["247"],["248"],[],[],[],[],"'Copyright' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'Controller' is defined but never used.","'CircularProgress' is defined but never used.",["255","256"],"'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'buttonClassname' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'control' is assigned a value but never used.","'fieldsErrors' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'Hidden' is defined but never used.",["247"],["248"],[],[],[],[],["257","258"],"padding-line-between-statements","func-call-spacing",{"messageId":"259","fix":"260","desc":"261"},{"messageId":"262","fix":"263","desc":"264"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"262","fix":"266","desc":"264"},{"messageId":"259","fix":"267","desc":"261"},{"messageId":"262","fix":"268","desc":"264"},{"messageId":"259","fix":"269","desc":"261"},{"messageId":"262","fix":"270","desc":"264"},{"messageId":"259","fix":"271","desc":"261"},{"messageId":"262","fix":"272","desc":"264"},"suggestUnknown",{"range":"273","text":"274"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"273","text":"275"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"276","text":"274"},{"range":"276","text":"275"},{"range":"277","text":"274"},{"range":"277","text":"275"},{"range":"278","text":"274"},{"range":"278","text":"275"},{"range":"279","text":"274"},{"range":"279","text":"275"},[32,35],"unknown","never",[894,897],[222,225],[1364,1367],[1536,1539]]