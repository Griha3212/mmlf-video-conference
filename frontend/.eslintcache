[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"28","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"29","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"30"},{"size":545,"mtime":1610473645677,"results":"31","hashOfConfig":"32"},{"size":436,"mtime":1609149080634,"results":"33","hashOfConfig":"32"},{"size":1020,"mtime":1610988569202,"results":"34","hashOfConfig":"32"},{"size":88,"mtime":1609151476043,"results":"35","hashOfConfig":"32"},{"size":254,"mtime":1609941695606,"results":"36","hashOfConfig":"32"},{"size":4843,"mtime":1610437764729,"results":"37","hashOfConfig":"32"},{"size":845,"mtime":1609924589133,"results":"38","hashOfConfig":"32"},{"size":433,"mtime":1609754100539,"results":"39","hashOfConfig":"32"},{"size":487,"mtime":1611058165349,"results":"40","hashOfConfig":"32"},{"size":2980,"mtime":1610443450073,"results":"41","hashOfConfig":"32"},{"size":455,"mtime":1609923543629,"results":"42","hashOfConfig":"32"},{"size":304,"mtime":1609923543632,"results":"43","hashOfConfig":"32"},{"size":368,"mtime":1609937434279,"results":"44","hashOfConfig":"32"},{"size":5903,"mtime":1610988640873,"results":"45","hashOfConfig":"32"},{"size":948,"mtime":1610805274238,"results":"46","hashOfConfig":"32"},{"size":360,"mtime":1609927664710,"results":"47","hashOfConfig":"32"},{"size":474,"mtime":1609927609396,"results":"48","hashOfConfig":"32"},{"size":13612,"mtime":1611072455415,"results":"49","hashOfConfig":"32"},{"size":2466,"mtime":1611071111372,"results":"50","hashOfConfig":"32"},{"size":752,"mtime":1610469885795,"results":"51","hashOfConfig":"32"},{"size":1081,"mtime":1611060351088,"results":"52","hashOfConfig":"32"},{"size":304,"mtime":1610521474487,"results":"53","hashOfConfig":"32"},{"size":5748,"mtime":1611048414412,"results":"54","hashOfConfig":"32"},{"size":3195,"mtime":1610889342460,"results":"55","hashOfConfig":"32"},{"size":804,"mtime":1610544223943,"results":"56","hashOfConfig":"32"},{"size":304,"mtime":1610534492141,"results":"57","hashOfConfig":"32"},{"size":2083,"mtime":1611057438970,"results":"58","hashOfConfig":"32"},{"size":1217,"mtime":1610804935909,"results":"59","hashOfConfig":"32"},{"size":9758,"mtime":1611055307527,"results":"60","hashOfConfig":"32"},{"size":3774,"mtime":1610912132641,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"vtgqsx",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"65"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",["137","138"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './indexTheme';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["139","140","141","142","143","144"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts",["145"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",["146"],"const getLocalStorageData = (): any => {\n  const accessToken = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n\n  return {\n    token: { accessToken, refreshToken },\n  };\n};\n\nexport default getLocalStorageData;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["147","148","149","150"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["151"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["152","153","154","155","156","157","158"],"import React, {\r\n  FC, memo, useEffect, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\ninterface UserData {\r\n  isAdmin: boolean;\r\n}\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  // const loadUserInfoFromLocalStorage = async () => {\r\n  //   if (token.accessToken && token.refreshToken) {\r\n  //     setUserData(parseToken(token.accessToken as string));\r\n  //     console.log('here admin :>> ');\r\n  //     console.log('userData', parseToken(token.accessToken as string));\r\n  //     setIsAuth(true);\r\n  //   } else {\r\n  //     setIsAuth(false);\r\n  //   }\r\n  // };\r\n\r\n  // loadUserInfoFromLocalStorage();\r\n\r\n  // useEffect(() => {\r\n  //   loadUserInfoFromLocalStorage();\r\n\r\n  //   // if (token.accessToken && token.refreshToken) {\r\n  //   //   setUserData(parseToken(token.accessToken as string));\r\n  //   //   console.log('here admin :>> ');\r\n  //   //   console.log('userData', userData);\r\n  //   //   setIsAuth(true);\r\n  //   // } else {\r\n  //   //   setIsAuth(false);\r\n  //   // }\r\n  // }, []);\r\n\r\n  console.log('userData ProtectedRoutes :>> ', userData);\r\n\r\n  // // if (!isAdmin) return <Redirect to=\"/signin\" />;\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (userData.hasAccessToStatisticPage) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // if (isAuth && !userData?.isAdmin) return <Redirect to=\"/user\" />;\r\n  // if (isAuth && userData?.isAdmin) return <Redirect to=\"/admin\" />;\r\n\r\n  //   return (\r\n  //     <Route\r\n  //       {...rest}\r\n  //       render={props =>\r\n  //         isLoggedIn ? (\r\n  //           <Component {...props} />\r\n  //         ) : (\r\n  //             <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n  //           )\r\n  //       }\r\n  //     />\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n\r\n  // return (\r\n\r\n  //   <Switch>\r\n  //     {(userData && userData.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n  //   </Switch>\r\n\r\n  // );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["159","160","161","162","163","164"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",["165"],"export const parseToken = (token: string) => {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  const jsonPayload = JSON.parse(decodeURIComponent(atob(base64).split('').map((c) => `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`).join('')));\r\n  return jsonPayload;\r\n};\r\n\r\nexport default parseToken;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["166","167","168","169","170","171","172","173","174"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm } from 'react-hook-form';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport clsx from 'clsx';\r\nimport useStyles from './style';\r\nimport { apiGetUser } from '../../api/user';\r\nimport parseToken from '../../utils/parseToken';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { apiChangeActiveSpeakerInChannel, apiSetBrakeInChannel } from '../../api/admin';\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\ntype DataForAdmin = {\r\n  channelForShowing: {\r\n    break: boolean, id: number, link: string,\r\n    number: number\r\n  },\r\n  description: string;\r\n  id: number;\r\n  letter: string;\r\n  name: string;\r\n  speakers: Array<Speaker>\r\n\r\n};\r\n\r\ntype FormData = {\r\n  loginCode: string;\r\n};\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AdminPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [error]: [string, (error: string) => void] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [activeSpeaker, setActiveSpeaker] = React.useState('');\r\n\r\n  const [selectedSpeakerToActivate, setSelectedSpeakerToActivate] = React.useState('');\r\n\r\n  const [dataForAdmin, setDataForAdmin] = React.useState<DataForAdmin>();\r\n\r\n  const loadDataForAdmin = async () => {\r\n    const response = await apiGetUser(userData.id, token);\r\n    setDataForAdmin(response);\r\n\r\n    if (response && response.channelForShowing && response.channelForShowing.activeSpeaker) {\r\n      setActiveSpeaker(`${response.channelForShowing.activeSpeaker.lastName} ${response.channelForShowing.activeSpeaker.firstName}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForAdmin();\r\n  }, []);\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  const activateSelectedSpeaker = async (speakerId: string) => {\r\n    const response = await apiChangeActiveSpeakerInChannel(\r\n      token,\r\n      Number(speakerId),\r\n      Number(dataForAdmin && dataForAdmin.channelForShowing.number),\r\n    );\r\n\r\n    setActiveSpeaker(`${response.lastName} ${response.firstName}`);\r\n  };\r\n\r\n  const setBreakBetweenSessions = async () => {\r\n    setActiveSpeaker('');\r\n  };\r\n\r\n  const renderSpeakersDataForAdmin = (element: Speaker) => {\r\n    if (!element.isModerator) {\r\n      return (\r\n\r\n        <Grid container xs={12} justify=\"center\">\r\n          <Button\r\n            onClick={(e) => { setSelectedSpeakerToActivate(e.currentTarget.value); }}\r\n            value={element.id}\r\n            data-id=\"\"\r\n            className={classes.speakerButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {`${element.lastName}  ${element.firstName}`}\r\n          </Button>\r\n        </Grid>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Администратора\r\n\r\n          </Typography>\r\n          <p>\r\n            {' '}\r\n            {dataForAdmin && dataForAdmin.letter}\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <Grid container>\r\n        <Grid item container xs={6}>\r\n\r\n          <Grid item xs={6}>\r\n            {\r\n              dataForAdmin && dataForAdmin.speakers.map(\r\n                (element) => renderSpeakersDataForAdmin(element),\r\n              )\r\n            }\r\n          </Grid>\r\n\r\n          <Grid item justify=\"center\" xs={6}>\r\n            <p className={classes.textCenter}>\r\n              {' '}\r\n              <Button onClick={() => activateSelectedSpeaker(selectedSpeakerToActivate)} variant=\"contained\" color=\"primary\">Активировать выбранного спикера</Button>\r\n            </p>\r\n\r\n            <p className={classes.textCenter}>\r\n              {' '}\r\n              <Button onClick={() => setBreakBetweenSessions()} variant=\"contained\" color=\"primary\">Активировать перерыв</Button>\r\n              {' '}\r\n            </p>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <p>\r\n            Активный спикер:\r\n            {' '}\r\n            {`${activeSpeaker}`}\r\n          </p>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AdminPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["175"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts",["191"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["192","193","194","195","196","197","198","199"],"import React, { memo, useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport { createPortal } from 'react-dom';\nimport useStyles from './style';\n\nconst VideoPlayerMain = (props: any) => {\n  const classes = useStyles();\n\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef;\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\n\n  const playVideo = (): any => {\n\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      data-testid=\"loading-page\"\n    >\n      <div\n        className={props.classNameInner}\n        ref={inputRef}\n      >\n        <Iframe\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\n          url={props.videoURL}\n          width=\"100%\"\n          height=\"290px\"\n          position=\"relative\"\n          allow=\"fullscreen\"\n          onLoad={playVideo()}\n        />\n      </div>\n    </Grid>\n\n  );\n};\n\nexport default memo(VideoPlayerMain);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["200","201","202","203","204","205","206","207"],"import React, { memo, useEffect } from 'react';\nimport {\n  Grid, CircularProgress, Typography, Button,\n} from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport Divider from '@material-ui/core/Divider';\nimport useStyles from './style';\nimport VideoPlayerMain from '../VideoPlayerMain/VideoPlayerMain';\nimport ModeratorCard from '../ModeratorCard/ModeratorCard';\nimport noAvatar from '../../img/speakersImg/noAvatar.svg';\nimport { apiVoteForSpeaker } from '../../api/user';\n\nconst SessionInfoBlock = (props: any) => {\n  const { currentSpeakerInfo, currentSpeakerRate, activeSessionSpeakersAllRates } = props;\n  const classes = useStyles();\n  const [rate, setRate] = React.useState<number | null>(currentSpeakerRate || 4);\n  const [closedAccess, setClosedAccess] = React.useState(true);\n\n  // check timers logic-----------------------------------------------\n  useEffect(() => {\n    setRate(currentSpeakerRate);\n  }, [currentSpeakerRate]);\n\n  useEffect(() => {\n    setClosedAccess(true);\n\n    const currentSpeakerLocalStorageData = localStorage.getItem(\n      `${String(currentSpeakerInfo && currentSpeakerInfo.id)}`,\n    );\n\n    if (currentSpeakerLocalStorageData === 'viewed') {\n      setClosedAccess(false);\n    }\n  }, [currentSpeakerInfo]);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (currentSpeakerInfo) {\n        const currentSpeakerLocalStorageData = localStorage.getItem(\n          `${String(currentSpeakerInfo && currentSpeakerInfo.id)}`,\n        );\n\n        if (currentSpeakerLocalStorageData === 'viewed') {\n          setClosedAccess(false);\n        } else {\n          setClosedAccess(true);\n        }\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [currentSpeakerInfo]);\n\n  //-------------------------------------------------------------------\n\n  const sendVoteForSpeaker = async (rateDirectlyFromUI: number | null) => {\n    const response = await apiVoteForSpeaker(\n      props.currentSpeakerInfo.id,\n      props.userId,\n      props.token,\n      rateDirectlyFromUI,\n    );\n  };\n\n  return (\n    <>\n\n      <Grid item container className={classes.darkBlueBckg}>\n        <Grid item xs={12}>\n          <p className={props.currentSessionLetter && props.currentSessionLetter.length > 10\n            ? classes.sessionLetterTextLong : classes.sessionLetterText}\n          >\n            {props.currentSessionLetter || 'Сессия #'}\n          </p>\n\n        </Grid>\n\n        <p className={classes.sessionNameText}>\n          {props.currentSessionDescription || 'Тема сессии'}\n        </p>\n\n      </Grid>\n\n      <Grid item container justify=\"space-between\" className={classes.lightBlueBckg}>\n\n        <Grid item className={classes.speakerInfoBlock} xs={8}>\n          <p className={classes.speakerTheme}>\n            {currentSpeakerInfo && currentSpeakerInfo.topicName || 'Тема доклада'}\n          </p>\n\n          <Grid container spacing={5}>\n\n            <Grid item xs={2}>\n              <img className={classes.speakerAvatarImg} width=\"100%\" src={currentSpeakerInfo && currentSpeakerInfo.linkToImg || noAvatar} alt=\"\" />\n\n            </Grid>\n            <Grid item xs={8}>\n              <p className={classes.speakerHeaderText}>Спикер</p>\n              <p className={classes.speakerFullNameText}>{`${currentSpeakerInfo && currentSpeakerInfo.lastName || 'ФАМИЛИЯ'} ${currentSpeakerInfo && currentSpeakerInfo.firstName || 'Имя'}`}</p>\n              <p className={classes.speakerFullCompanyText}>{`${currentSpeakerInfo && currentSpeakerInfo.company || 'Компания'}, ${currentSpeakerInfo && currentSpeakerInfo.statusInCompany || 'должность'}`}</p>\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n        <Grid alignItems=\"center\" alignContent=\"center\" xs={3}>\n\n          <p className={classes.textCenter}>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography className={classes.rateSpeakerText} component=\"legend\">Оцените выступление</Typography>\n              <Rating\n                className={classes.rateSpeakerStarsImg}\n                name=\"simple-controlled\"\n                value={rate}\n                disabled={closedAccess}\n                onChange={async (event, newValue) => {\n                  setRate(newValue);\n                  sendVoteForSpeaker(newValue);\n                }}\n              />\n            </Box>\n          </p>\n\n          <p className={classes.textCenter}>\n            <Button\n              disabled={closedAccess}\n              onClick={() => window.open(`${currentSpeakerInfo && currentSpeakerInfo.linkToPresentation}`, '_blank')}\n              className={classes.loadPresenationButton}\n            >\n              Скачать презентацию\n\n            </Button>\n          </p>\n\n          {\n            currentSpeakerInfo && currentSpeakerInfo.linkToZoom ? (\n              <p className={classes.textCenter}>\n                <Button\n                  disabled={closedAccess}\n                  onClick={() => window.open(`${currentSpeakerInfo && currentSpeakerInfo.linkToZoom}`, '_blank')}\n                  className={classes.goToZoomButton}\n                >\n                  Перейти в Zoom\n\n                </Button>\n              </p>\n            ) : null\n          }\n\n        </Grid>\n\n        {/* <p className={classes.speakerTheme}>\n          {props.currentSpeakerTheme || 'Тема доклада'}\n        </p>\n        <p className={classes.sessionNameText}>\n          {props.currentSessionName || 'Тема сессии'}\n        </p> */}\n\n      </Grid>\n\n    </>\n  );\n};\n\nexport default memo(SessionInfoBlock);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx",["208","209","210","211","212","213","214","215","216","217"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["218","219","220","221"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["222","223"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\nexport const apiChangeActiveSpeakerInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  speakerIdToActivate: number,\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveSpeakerInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerIdToActivate, channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetBrakeInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setBrakeInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["224","225","226","227","228","229","230","231","232","233"],"/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable consistent-return */\n/* eslint-disable array-callback-return */\nimport React, { memo, useEffect } from 'react';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\n// import { useEffect } from 'react';\nimport useStyles from './style';\nimport noAvatar from '../../img/speakersImg/noAvatar.svg';\nimport PDF from '../../img/pdf_icon.svg';\nimport Zoom from '../../img/zoomfondo-blanco-vertical-seeklogo.svg';\n\ntype Vote = {\n\n  createdAt: Date;\n  id: number;\n  rate: number;\n  speaker: Speaker\n\n};\n\ntype Speaker = {\n\n  company: string;\n  firstName: string;\n  id: number;\n  innerSystemName: string;\n  isModerator: boolean;\n  lastName: string;\n  linkToImg: string;\n  linkToPresentation: string;\n  linkToZoom: string;\n  topicName: string;\n\n};\n\nconst SpeakersSessionInfoBlock = (props: any) => {\n  const classes = useStyles();\n  const [value] = React.useState<number | null>(5);\n\n  const {\n    currentModeratorInfo,\n    currentSessionSpeakersInfo,\n    currentSessionSpeakersAllRates,\n    dataForUser,\n  } = props;\n\n  const [currentSessionSpeakersAllRatesState,\n    setCurrentSessionSpeakersAllRatesState] =\n    React.useState<Vote[]>(currentSessionSpeakersAllRates);\n\n  useEffect(() => {\n    setCurrentSessionSpeakersAllRatesState(currentSessionSpeakersAllRates);\n  }, [currentSessionSpeakersAllRates]);\n\n  console.log('currentSessionSpeakersAllRatesState :>> ', currentSessionSpeakersAllRatesState);\n\n  console.log('currentSessionSpeakersAllRates :>> ', currentSessionSpeakersAllRates);\n  // console.log('currentSessionSpeakersInfo :>> ', currentSessionSpeakersInfo);\n  // console.log('dataForUser :>> ', dataForUser);\n\n  const checkIsWatched = (speakerId: number) => {\n    if (dataForUser && dataForUser.foundUser && dataForUser.foundUser.watchedSpeakers) {\n      const foundWtchedSpeaker = dataForUser.foundUser.watchedSpeakers.find(\n        (speaker: any) => speaker.id === speakerId,\n      );\n\n      if (foundWtchedSpeaker) {\n        return false;\n      } else {\n        return true;\n      }\n    } else return true;\n  };\n\n  const renderSpeakersRates = (element: any) => {\n    if (currentSessionSpeakersAllRatesState) {\n      if (currentSessionSpeakersAllRatesState!.length > 0) {\n        const foundRate = currentSessionSpeakersAllRatesState!.find(\n          (vote: any) => vote.speaker.id === element.id,\n        );\n\n        if (foundRate) {\n          return foundRate.rate;\n        } else return 4;\n      }\n    }\n  };\n\n  const renderMockedSessionSpeakers = () => (\n    <>\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n    </>\n  );\n\n  const renderSessionSpeakers = () => (\n\n    currentSessionSpeakersInfo.map((element: any) => {\n      if (!element.isModerator) {\n        return (\n          <>\n            <Grid item>\n\n              <p className={classes.speakerAvatarInsideSessionParagraph}>\n                <img className={classes.speakerAvatarInsideSession} src={element.linkToImg} alt=\"\" />\n              </p>\n              <p className={classes.speakerNameInsideSession}>{element.lastName}</p>\n              <p className={classes.speakerNameInsideSession}>{element.firstName}</p>\n              <p>\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                  {console.log('element :>> ', element)}\n                  <Rating\n                    className={classes.smallScoreStarImg}\n                    name=\"read-only\"\n                    disabled={checkIsWatched(element.id)}\n                    value={renderSpeakersRates(element)}\n                    readOnly\n                  />\n                </Box>\n\n              </p>\n\n              <Grid container justify=\"space-around\">\n                <Grid item>\n\n                  <img\n                    className={classes.pointerImg}\n                    src={PDF}\n                    onClick={() => window.open(`${element.linkToPresentation}`, '_blank')}\n                    alt=\"\"\n                  />\n\n                </Grid>\n\n                {\n                  element.linkToZoom ? (\n                    <Grid item>\n\n                      <img\n                        src={Zoom}\n                        className={classes.pointerImg}\n                        onClick={() => window.open(`${element.linkToZoom}`, '_blank')}\n                        alt=\"\"\n                      />\n\n                    </Grid>\n                  ) : null\n                }\n\n              </Grid>\n\n            </Grid>\n          </>\n        );\n      }\n    })\n  );\n\n  return (\n    <>\n\n      <Grid item container className={classes.mainContainerBckg}>\n\n        <Grid item xs={8}><p className={classes.speakersBlockHeader}>Спикеры сессии</p></Grid>\n\n        <Grid item className={classes.moderatorContainerInfoBlock} container xs={4}>\n\n          <Grid item xs={3}>\n            <img width=\"100%\" src={currentModeratorInfo && currentModeratorInfo.linkToImg || noAvatar} alt=\"\" />\n\n          </Grid>\n          <Grid className={classes.moderatorInfoBlock} item xs={8}>\n            <div>\n              <p className={classes.moderatorHeaderText}>Модератор</p>\n              <p className={classes.moderatorFullName}>{`${currentModeratorInfo && currentModeratorInfo.lastName || 'ФАМИЛИЯ'} ${currentModeratorInfo && currentModeratorInfo.firstName || 'Имя'}`}</p>\n            </div>\n          </Grid>\n\n        </Grid>\n\n        <Grid justify=\"space-around\" container xs={12}>\n\n          {\n            currentSessionSpeakersInfo ? renderSessionSpeakers() : renderMockedSessionSpeakers()\n          }\n\n        </Grid>\n\n      </Grid>\n\n    </>\n  );\n};\n\nexport default memo(SpeakersSessionInfoBlock);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],{"ruleId":"234","severity":1,"message":"235","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":23},{"ruleId":"234","severity":1,"message":"238","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":15},{"ruleId":"239","replacedBy":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":3,"column":25,"nodeType":"253","messageId":"254","endLine":3,"endColumn":57},{"ruleId":"255","severity":1,"message":"256","line":1,"column":33,"nodeType":"257","messageId":"258","endLine":1,"endColumn":36,"suggestions":"259"},{"ruleId":"234","severity":1,"message":"260","line":19,"column":3,"nodeType":"236","messageId":"237","endLine":19,"endColumn":14},{"ruleId":"234","severity":1,"message":"261","line":19,"column":16,"nodeType":"236","messageId":"237","endLine":19,"endColumn":22},{"ruleId":"234","severity":1,"message":"262","line":28,"column":11,"nodeType":"236","messageId":"237","endLine":28,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":33,"column":23,"nodeType":"257","messageId":"258","endLine":33,"endColumn":26,"suggestions":"263"},{"ruleId":"255","severity":1,"message":"256","line":10,"column":12,"nodeType":"257","messageId":"258","endLine":10,"endColumn":15,"suggestions":"264"},{"ruleId":"234","severity":1,"message":"265","line":2,"column":13,"nodeType":"236","messageId":"237","endLine":2,"endColumn":22},{"ruleId":"234","severity":1,"message":"266","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":19},{"ruleId":"234","severity":1,"message":"267","line":16,"column":8,"nodeType":"236","messageId":"237","endLine":16,"endColumn":17},{"ruleId":"234","severity":1,"message":"268","line":19,"column":11,"nodeType":"236","messageId":"237","endLine":19,"endColumn":19},{"ruleId":"234","severity":1,"message":"269","line":24,"column":18,"nodeType":"236","messageId":"237","endLine":24,"endColumn":27},{"ruleId":"234","severity":1,"message":"270","line":28,"column":20,"nodeType":"236","messageId":"237","endLine":28,"endColumn":31},{"ruleId":"271","severity":1,"message":"272","line":56,"column":3,"nodeType":"273","messageId":"274","endLine":56,"endColumn":14},{"ruleId":"239","replacedBy":"275"},{"ruleId":"241","replacedBy":"276"},{"ruleId":"243","replacedBy":"277"},{"ruleId":"245","replacedBy":"278"},{"ruleId":"247","replacedBy":"279"},{"ruleId":"249","replacedBy":"280"},{"ruleId":"251","severity":1,"message":"252","line":1,"column":27,"nodeType":"253","messageId":"254","endLine":1,"endColumn":51},{"ruleId":"234","severity":1,"message":"281","line":18,"column":10,"nodeType":"236","messageId":"237","endLine":18,"endColumn":17},{"ruleId":"234","severity":1,"message":"282","line":21,"column":8,"nodeType":"236","messageId":"237","endLine":21,"endColumn":12},{"ruleId":"234","severity":1,"message":"283","line":26,"column":43,"nodeType":"236","messageId":"237","endLine":26,"endColumn":63},{"ruleId":"234","severity":1,"message":"284","line":56,"column":6,"nodeType":"236","messageId":"237","endLine":56,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":60,"column":23,"nodeType":"257","messageId":"258","endLine":60,"endColumn":26,"suggestions":"285"},{"ruleId":"234","severity":1,"message":"286","line":69,"column":10,"nodeType":"236","messageId":"237","endLine":69,"endColumn":17},{"ruleId":"234","severity":1,"message":"287","line":69,"column":19,"nodeType":"236","messageId":"237","endLine":69,"endColumn":29},{"ruleId":"234","severity":1,"message":"288","line":70,"column":10,"nodeType":"236","messageId":"237","endLine":70,"endColumn":17},{"ruleId":"234","severity":1,"message":"289","line":70,"column":19,"nodeType":"236","messageId":"237","endLine":70,"endColumn":29},{"ruleId":"234","severity":1,"message":"290","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":16},{"ruleId":"234","severity":1,"message":"291","line":11,"column":3,"nodeType":"236","messageId":"237","endLine":11,"endColumn":13},{"ruleId":"255","severity":1,"message":"256","line":89,"column":23,"nodeType":"257","messageId":"258","endLine":89,"endColumn":26,"suggestions":"292"},{"ruleId":"271","severity":1,"message":"272","line":156,"column":3,"nodeType":"273","messageId":"274","endLine":156,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":158,"column":48,"nodeType":"257","messageId":"258","endLine":158,"endColumn":51,"suggestions":"293"},{"ruleId":"255","severity":1,"message":"256","line":160,"column":56,"nodeType":"257","messageId":"258","endLine":160,"endColumn":59,"suggestions":"294"},{"ruleId":"255","severity":1,"message":"256","line":188,"column":21,"nodeType":"257","messageId":"258","endLine":188,"endColumn":24,"suggestions":"295"},{"ruleId":"271","severity":1,"message":"272","line":211,"column":9,"nodeType":"273","messageId":"274","endLine":211,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":233,"column":3,"nodeType":"273","messageId":"274","endLine":233,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":236,"column":47,"nodeType":"257","messageId":"258","endLine":236,"endColumn":50,"suggestions":"296"},{"ruleId":"255","severity":1,"message":"256","line":257,"column":46,"nodeType":"257","messageId":"258","endLine":257,"endColumn":49,"suggestions":"297"},{"ruleId":"255","severity":1,"message":"256","line":285,"column":41,"nodeType":"257","messageId":"258","endLine":285,"endColumn":44,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":286,"column":28,"nodeType":"301","messageId":"302","endLine":286,"endColumn":40,"suggestions":"303"},{"ruleId":"271","severity":1,"message":"272","line":294,"column":27,"nodeType":"273","messageId":"274","endLine":294,"endColumn":38},{"ruleId":"271","severity":1,"message":"272","line":323,"column":3,"nodeType":"273","messageId":"274","endLine":323,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":388,"column":12,"nodeType":"273","messageId":"274","endLine":388,"endColumn":23},{"ruleId":"234","severity":1,"message":"304","line":15,"column":9,"nodeType":"236","messageId":"237","endLine":15,"endColumn":20},{"ruleId":"234","severity":1,"message":"305","line":2,"column":16,"nodeType":"236","messageId":"237","endLine":2,"endColumn":32},{"ruleId":"234","severity":1,"message":"306","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":22},{"ruleId":"255","severity":1,"message":"256","line":7,"column":33,"nodeType":"257","messageId":"258","endLine":7,"endColumn":36,"suggestions":"307"},{"ruleId":"234","severity":1,"message":"308","line":8,"column":9,"nodeType":"236","messageId":"237","endLine":8,"endColumn":16},{"ruleId":"234","severity":1,"message":"309","line":10,"column":22,"nodeType":"236","messageId":"237","endLine":10,"endColumn":35},{"ruleId":"234","severity":1,"message":"310","line":11,"column":9,"nodeType":"236","messageId":"237","endLine":11,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":12,"column":19,"nodeType":"257","messageId":"258","endLine":12,"endColumn":22,"suggestions":"311"},{"ruleId":"255","severity":1,"message":"256","line":14,"column":25,"nodeType":"257","messageId":"258","endLine":14,"endColumn":28,"suggestions":"312"},{"ruleId":"234","severity":1,"message":"305","line":3,"column":9,"nodeType":"236","messageId":"237","endLine":3,"endColumn":25},{"ruleId":"234","severity":1,"message":"313","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"314","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":15},{"ruleId":"234","severity":1,"message":"315","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":23},{"ruleId":"234","severity":1,"message":"316","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":15,"column":34,"nodeType":"257","messageId":"258","endLine":15,"endColumn":37,"suggestions":"317"},{"ruleId":"234","severity":1,"message":"318","line":16,"column":51,"nodeType":"236","messageId":"237","endLine":16,"endColumn":80},{"ruleId":"234","severity":1,"message":"319","line":58,"column":11,"nodeType":"236","messageId":"237","endLine":58,"endColumn":19},{"ruleId":"234","severity":1,"message":"305","line":3,"column":9,"nodeType":"236","messageId":"237","endLine":3,"endColumn":25},{"ruleId":"234","severity":1,"message":"320","line":3,"column":27,"nodeType":"236","messageId":"237","endLine":3,"endColumn":37},{"ruleId":"234","severity":1,"message":"321","line":3,"column":39,"nodeType":"236","messageId":"237","endLine":3,"endColumn":45},{"ruleId":"234","severity":1,"message":"313","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"322","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":11},{"ruleId":"234","severity":1,"message":"323","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":14},{"ruleId":"234","severity":1,"message":"314","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":15},{"ruleId":"234","severity":1,"message":"315","line":10,"column":8,"nodeType":"236","messageId":"237","endLine":10,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":12,"column":31,"nodeType":"257","messageId":"258","endLine":12,"endColumn":34,"suggestions":"324"},{"ruleId":"234","severity":1,"message":"308","line":13,"column":9,"nodeType":"236","messageId":"237","endLine":13,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":14,"column":12,"nodeType":"257","messageId":"258","endLine":14,"endColumn":15,"suggestions":"325"},{"ruleId":"255","severity":1,"message":"256","line":37,"column":12,"nodeType":"257","messageId":"258","endLine":37,"endColumn":15,"suggestions":"326"},{"ruleId":"255","severity":1,"message":"256","line":59,"column":12,"nodeType":"257","messageId":"258","endLine":59,"endColumn":15,"suggestions":"327"},{"ruleId":"255","severity":1,"message":"256","line":81,"column":12,"nodeType":"257","messageId":"258","endLine":81,"endColumn":15,"suggestions":"328"},{"ruleId":"255","severity":1,"message":"256","line":13,"column":12,"nodeType":"257","messageId":"258","endLine":13,"endColumn":15,"suggestions":"329"},{"ruleId":"255","severity":1,"message":"256","line":34,"column":12,"nodeType":"257","messageId":"258","endLine":34,"endColumn":15,"suggestions":"330"},{"ruleId":"255","severity":1,"message":"256","line":41,"column":42,"nodeType":"257","messageId":"258","endLine":41,"endColumn":45,"suggestions":"331"},{"ruleId":"271","severity":1,"message":"272","line":60,"column":3,"nodeType":"273","messageId":"274","endLine":60,"endColumn":14},{"ruleId":"271","severity":1,"message":"272","line":62,"column":3,"nodeType":"273","messageId":"274","endLine":62,"endColumn":14},{"ruleId":"255","severity":1,"message":"256","line":69,"column":19,"nodeType":"257","messageId":"258","endLine":69,"endColumn":22,"suggestions":"332"},{"ruleId":"255","severity":1,"message":"256","line":80,"column":41,"nodeType":"257","messageId":"258","endLine":80,"endColumn":44,"suggestions":"333"},{"ruleId":"299","severity":1,"message":"300","line":82,"column":11,"nodeType":"301","messageId":"302","endLine":82,"endColumn":47,"suggestions":"334"},{"ruleId":"299","severity":1,"message":"300","line":83,"column":27,"nodeType":"301","messageId":"302","endLine":83,"endColumn":63,"suggestions":"335"},{"ruleId":"255","severity":1,"message":"256","line":84,"column":18,"nodeType":"257","messageId":"258","endLine":84,"endColumn":21,"suggestions":"336"},{"ruleId":"255","severity":1,"message":"256","line":256,"column":46,"nodeType":"257","messageId":"258","endLine":256,"endColumn":49,"suggestions":"337"},{"ruleId":"271","severity":1,"message":"272","line":269,"column":20,"nodeType":"273","messageId":"274","endLine":269,"endColumn":31},"@typescript-eslint/no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'theme' is defined but never used.","lines-around-directive",["338"],"no-spaced-func",["339"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["340","341"],"'useLocation' is defined but never used.","'Prompt' is defined but never used.","'Props' is defined but never used.",["342","343"],["344","345"],"'useEffect' is defined but never used.","'LoadingPage' is defined but never used.","'LoginPage' is defined but never used.","'UserData' is defined but never used.","'setIsAuth' is assigned a value but never used.","'setUserData' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected",["338"],["339"],[],[],[],[],"'useForm' is defined but never used.","'clsx' is defined but never used.","'apiSetBrakeInChannel' is defined but never used.","'FormData' is defined but never used.",["346","347"],"'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'Hidden' is defined but never used.","'useReducer' is defined but never used.",["348","349"],["350","351"],["352","353"],["354","355"],["356","357"],["358","359"],["360","361"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["362"],"'breakpoints' is assigned a value but never used.","'CircularProgress' is defined but never used.","'createPortal' is defined but never used.",["363","364"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["365","366"],["367","368"],"'Iframe' is defined but never used.","'Divider' is defined but never used.","'VideoPlayerMain' is defined but never used.","'ModeratorCard' is defined but never used.",["369","370"],"'activeSessionSpeakersAllRates' is assigned a value but never used.","'response' is assigned a value but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Rating' is defined but never used.",["371","372"],["373","374"],["375","376"],["377","378"],["379","380"],["381","382"],["383","384"],["385","386"],["387","388"],["389","390"],["391"],["392"],["393","394"],["395","396"],"padding-line-between-statements","func-call-spacing",{"messageId":"397","fix":"398","desc":"399"},{"messageId":"400","fix":"401","desc":"402"},{"messageId":"397","fix":"403","desc":"399"},{"messageId":"400","fix":"404","desc":"402"},{"messageId":"397","fix":"405","desc":"399"},{"messageId":"400","fix":"406","desc":"402"},{"messageId":"397","fix":"407","desc":"399"},{"messageId":"400","fix":"408","desc":"402"},{"messageId":"397","fix":"409","desc":"399"},{"messageId":"400","fix":"410","desc":"402"},{"messageId":"397","fix":"411","desc":"399"},{"messageId":"400","fix":"412","desc":"402"},{"messageId":"397","fix":"413","desc":"399"},{"messageId":"400","fix":"414","desc":"402"},{"messageId":"397","fix":"415","desc":"399"},{"messageId":"400","fix":"416","desc":"402"},{"messageId":"397","fix":"417","desc":"399"},{"messageId":"400","fix":"418","desc":"402"},{"messageId":"397","fix":"419","desc":"399"},{"messageId":"400","fix":"420","desc":"402"},{"messageId":"397","fix":"421","desc":"399"},{"messageId":"400","fix":"422","desc":"402"},{"messageId":"423","fix":"424","desc":"425"},{"messageId":"397","fix":"426","desc":"399"},{"messageId":"400","fix":"427","desc":"402"},{"messageId":"397","fix":"428","desc":"399"},{"messageId":"400","fix":"429","desc":"402"},{"messageId":"397","fix":"430","desc":"399"},{"messageId":"400","fix":"431","desc":"402"},{"messageId":"397","fix":"432","desc":"399"},{"messageId":"400","fix":"433","desc":"402"},{"messageId":"397","fix":"434","desc":"399"},{"messageId":"400","fix":"435","desc":"402"},{"messageId":"397","fix":"436","desc":"399"},{"messageId":"400","fix":"437","desc":"402"},{"messageId":"397","fix":"438","desc":"399"},{"messageId":"400","fix":"439","desc":"402"},{"messageId":"397","fix":"440","desc":"399"},{"messageId":"400","fix":"441","desc":"402"},{"messageId":"397","fix":"442","desc":"399"},{"messageId":"400","fix":"443","desc":"402"},{"messageId":"397","fix":"444","desc":"399"},{"messageId":"400","fix":"445","desc":"402"},{"messageId":"397","fix":"446","desc":"399"},{"messageId":"400","fix":"447","desc":"402"},{"messageId":"397","fix":"448","desc":"399"},{"messageId":"400","fix":"449","desc":"402"},{"messageId":"397","fix":"450","desc":"399"},{"messageId":"400","fix":"451","desc":"402"},{"messageId":"397","fix":"452","desc":"399"},{"messageId":"400","fix":"453","desc":"402"},{"messageId":"423","fix":"454","desc":"425"},{"messageId":"423","fix":"455","desc":"425"},{"messageId":"397","fix":"456","desc":"399"},{"messageId":"400","fix":"457","desc":"402"},{"messageId":"397","fix":"458","desc":"399"},{"messageId":"400","fix":"459","desc":"402"},"suggestUnknown",{"range":"460","text":"461"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"460","text":"462"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"463","text":"461"},{"range":"463","text":"462"},{"range":"464","text":"461"},{"range":"464","text":"462"},{"range":"465","text":"461"},{"range":"465","text":"462"},{"range":"466","text":"461"},{"range":"466","text":"462"},{"range":"467","text":"461"},{"range":"467","text":"462"},{"range":"468","text":"461"},{"range":"468","text":"462"},{"range":"469","text":"461"},{"range":"469","text":"462"},{"range":"470","text":"461"},{"range":"470","text":"462"},{"range":"471","text":"461"},{"range":"471","text":"462"},{"range":"472","text":"461"},{"range":"472","text":"462"},"suggestOptionalChain",{"range":"473","text":"474"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"475","text":"461"},{"range":"475","text":"462"},{"range":"476","text":"461"},{"range":"476","text":"462"},{"range":"477","text":"461"},{"range":"477","text":"462"},{"range":"478","text":"461"},{"range":"478","text":"462"},{"range":"479","text":"461"},{"range":"479","text":"462"},{"range":"480","text":"461"},{"range":"480","text":"462"},{"range":"481","text":"461"},{"range":"481","text":"462"},{"range":"482","text":"461"},{"range":"482","text":"462"},{"range":"483","text":"461"},{"range":"483","text":"462"},{"range":"484","text":"461"},{"range":"484","text":"462"},{"range":"485","text":"461"},{"range":"485","text":"462"},{"range":"486","text":"461"},{"range":"486","text":"462"},{"range":"487","text":"461"},{"range":"487","text":"462"},{"range":"488","text":"461"},{"range":"488","text":"462"},{"range":"489","text":"474"},{"range":"490","text":"474"},{"range":"491","text":"461"},{"range":"491","text":"462"},{"range":"492","text":"461"},{"range":"492","text":"462"},[32,35],"unknown","never",[965,968],[222,225],[1694,1697],[2534,2537],[4933,4936],[5038,5041],[6151,6154],[8036,8039],[8630,8633],[9354,9357],[9403,9404],"?",[250,253],[396,399],[498,501],[606,609],[421,424],[302,305],[793,796],[1300,1303],[1781,1784],[361,364],[891,894],[1003,1006],[2072,2075],[2284,2287],[2386,2387],[2463,2464],[2488,2491],[6746,6749]]