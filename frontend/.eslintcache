[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"28","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"29","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"30"},{"size":545,"mtime":1610473645677,"results":"31","hashOfConfig":"32"},{"size":436,"mtime":1609149080634,"results":"33","hashOfConfig":"32"},{"size":2247,"mtime":1610446074715,"results":"34","hashOfConfig":"32"},{"size":88,"mtime":1609151476043,"results":"35","hashOfConfig":"32"},{"size":254,"mtime":1609941695606,"results":"36","hashOfConfig":"32"},{"size":4843,"mtime":1610437764729,"results":"37","hashOfConfig":"32"},{"size":845,"mtime":1609924589133,"results":"38","hashOfConfig":"32"},{"size":433,"mtime":1609754100539,"results":"39","hashOfConfig":"32"},{"size":266,"mtime":1610804962769,"results":"40","hashOfConfig":"32"},{"size":2980,"mtime":1610443450073,"results":"41","hashOfConfig":"32"},{"size":455,"mtime":1609923543629,"results":"42","hashOfConfig":"32"},{"size":304,"mtime":1609923543632,"results":"43","hashOfConfig":"32"},{"size":368,"mtime":1609937434279,"results":"44","hashOfConfig":"32"},{"size":7572,"mtime":1610877698024,"results":"45","hashOfConfig":"32"},{"size":948,"mtime":1610805274238,"results":"46","hashOfConfig":"32"},{"size":360,"mtime":1609927664710,"results":"47","hashOfConfig":"32"},{"size":474,"mtime":1609927609396,"results":"48","hashOfConfig":"32"},{"size":10232,"mtime":1610888470799,"results":"49","hashOfConfig":"32"},{"size":2013,"mtime":1610559596608,"results":"50","hashOfConfig":"32"},{"size":752,"mtime":1610469885795,"results":"51","hashOfConfig":"32"},{"size":1126,"mtime":1610644921808,"results":"52","hashOfConfig":"32"},{"size":304,"mtime":1610521474487,"results":"53","hashOfConfig":"32"},{"size":3703,"mtime":1610905226219,"results":"54","hashOfConfig":"32"},{"size":3195,"mtime":1610889342460,"results":"55","hashOfConfig":"32"},{"size":804,"mtime":1610544223943,"results":"56","hashOfConfig":"32"},{"size":304,"mtime":1610534492141,"results":"57","hashOfConfig":"32"},{"size":597,"mtime":1610718060940,"results":"58","hashOfConfig":"32"},{"size":1217,"mtime":1610804935909,"results":"59","hashOfConfig":"32"},{"size":7747,"mtime":1610916857223,"results":"60","hashOfConfig":"32"},{"size":3774,"mtime":1610912132641,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"vtgqsx",{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"65"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"65"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"65"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"65"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",["140","141"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './indexTheme';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["142","143","144","145","146","147"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\reportWebVitals.ts",["148"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",["149","150","151","152","153"],"import React, {\n  memo, FC, useState, useEffect,\n} from 'react';\nimport {\n  Route,\n  Router,\n  Switch,\n} from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport history from './core/history';\nimport logo from './logo.svg';\nimport './App.css';\nimport getLocalStorageData from './utils/helpers/localStorage.helper';\nimport LoginPage from './containers/Login/LoginPage';\nimport { ProtectedRoutes } from './containers/ProtectedRoutes/ProtectedRoutes';\nimport parseToken from './utils/parseToken';\nimport AdminPage from './containers/Admin/AdminPage';\nimport UserPage from './containers/User/UserPage';\n\n// console.log('process.env.API_URL :>> ', process.env.REACT_APP_API_URL);\n\nexport const App: FC = () => {\n  const [isAuth, setIsAuth] = useState(getLocalStorageData().token.accessToken);\n\n  // console.log('APP isAuth :>> ', isAuth);\n\n  // useEffect(() => {\n  //   const { token } = getLocalStorageData();\n\n  //   if (token.accessToken && token.refreshToken) {\n  //     const userData = parseToken(token.accessToken as string);\n  //     console.log('userData :>> ', userData);\n  //     console.log('isAuth App :>> ', isAuth);\n  //     setIsAuth(true);\n  //   } else {\n  //     setIsAuth(false);\n  //   }\n\n  //   // if (token.accessToken && Object.keys(currentUser).length === 0) {\n  //   //   // const userData = parseToken(token.accessToken as string);\n  //   //   // const key = new Date().getTime() + Math.random();\n  //   //   // dispatch(checkLogin(userData.data.clientData?.id, userData.data.id, token, key));\n  //   //   setIsAuth(true);\n  //   // } else if (token.accessToken && Object.keys(currentUser).length > 0) {\n  //   //   setIsAuth(true);\n  //   // } else {\n  //   //   setIsAuth(false);\n  //   // }\n  // });\n\n  return (\n\n    <Router history={history}>\n      <CssBaseline />\n      {/* <Snackbar /> */}\n\n      <Switch>\n        <Route path=\"/signin\" component={LoginPage} />\n        <Route path=\"/admin\" component={AdminPage} />\n        <Route path=\"/user\" component={UserPage} />\n        {/* TO DO page for stats viewing */}\n        <Route path=\"/stats\" component={UserPage} />\n\n        <Route path=\"/\" component={ProtectedRoutes} />\n      </Switch>\n\n    </Router>\n  );\n};\n\nexport default memo(App);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",["154"],"const getLocalStorageData = (): any => {\n  const accessToken = localStorage.getItem('token');\n  const refreshToken = localStorage.getItem('refreshToken');\n\n  return {\n    token: { accessToken, refreshToken },\n  };\n};\n\nexport default getLocalStorageData;\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["155","156","157","158"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["159"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["160","161","162","163","164","165","166"],"import React, {\r\n  FC, memo, useEffect, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\nimport LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\ninterface UserData {\r\n  isAdmin: boolean;\r\n}\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  // const loadUserInfoFromLocalStorage = async () => {\r\n  //   if (token.accessToken && token.refreshToken) {\r\n  //     setUserData(parseToken(token.accessToken as string));\r\n  //     console.log('here admin :>> ');\r\n  //     console.log('userData', parseToken(token.accessToken as string));\r\n  //     setIsAuth(true);\r\n  //   } else {\r\n  //     setIsAuth(false);\r\n  //   }\r\n  // };\r\n\r\n  // loadUserInfoFromLocalStorage();\r\n\r\n  // useEffect(() => {\r\n  //   loadUserInfoFromLocalStorage();\r\n\r\n  //   // if (token.accessToken && token.refreshToken) {\r\n  //   //   setUserData(parseToken(token.accessToken as string));\r\n  //   //   console.log('here admin :>> ');\r\n  //   //   console.log('userData', userData);\r\n  //   //   setIsAuth(true);\r\n  //   // } else {\r\n  //   //   setIsAuth(false);\r\n  //   // }\r\n  // }, []);\r\n\r\n  console.log('userData ProtectedRoutes :>> ', userData);\r\n\r\n  // // if (!isAdmin) return <Redirect to=\"/signin\" />;\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (userData.hasAccessToStatisticPage) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // if (isAuth && !userData?.isAdmin) return <Redirect to=\"/user\" />;\r\n  // if (isAuth && userData?.isAdmin) return <Redirect to=\"/admin\" />;\r\n\r\n  //   return (\r\n  //     <Route\r\n  //       {...rest}\r\n  //       render={props =>\r\n  //         isLoggedIn ? (\r\n  //           <Component {...props} />\r\n  //         ) : (\r\n  //             <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n  //           )\r\n  //       }\r\n  //     />\r\n  //   )\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n\r\n  // return (\r\n\r\n  //   <Switch>\r\n  //     {(userData && userData.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n  //   </Switch>\r\n\r\n  // );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["167","168","169","170","171","172"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",["173"],"export const parseToken = (token: string) => {\r\n  const base64Url = token.split('.')[1];\r\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  const jsonPayload = JSON.parse(decodeURIComponent(atob(base64).split('').map((c) => `%${(`00${c.charCodeAt(0).toString(16)}`).slice(-2)}`).join('')));\r\n  return jsonPayload;\r\n};\r\n\r\nexport default parseToken;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent, useCallback,\r\n} from 'react';\r\n\r\nimport { Copyright } from '@material-ui/icons';\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport clsx from 'clsx';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport useStyles from './style';\r\nimport { apiLogin } from '../../api/login';\r\nimport { apiGetUser } from '../../api/user';\r\nimport parseToken from '../../utils/parseToken';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { apiChangeActiveSpeakerInChannel, apiSetBrakeInChannel } from '../../api/admin';\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\ntype DataForAdmin = {\r\n  channelForShowing: {\r\n    break: boolean, id: number, link: string,\r\n    number: number\r\n  },\r\n  description: string;\r\n  id: number;\r\n  letter: string;\r\n  name: string;\r\n  speakers: Array<Speaker>\r\n\r\n};\r\n\r\ntype FormData = {\r\n  loginCode: string;\r\n};\r\n\r\ninterface Props {\r\n  onSubmit: (data: FormData) => void;\r\n\r\n}\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst AdminPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [error, setError]: [string, (error: string) => void] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [activeSpeaker, setActiveSpeaker] = React.useState('');\r\n\r\n  const [selectedSpeakerToActivate, setSelectedSpeakerToActivate] = React.useState('');\r\n\r\n  const [dataForAdmin, setDataForAdmin] = React.useState<DataForAdmin>();\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    control, errors: fieldsErrors,\r\n  } = useForm<FormData>();\r\n  const onSubmit = async (data: FormData) => {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n\r\n    let response;\r\n  };\r\n\r\n  const loadDataForAdmin = async () => {\r\n    const response = await apiGetUser(userData.id, token);\r\n    setDataForAdmin(response);\r\n\r\n    if (response && response.channelForShowing && response.channelForShowing.activeSpeaker) {\r\n      setActiveSpeaker(`${response.channelForShowing.activeSpeaker.lastName} ${response.channelForShowing.activeSpeaker.firstName}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForAdmin();\r\n  }, []);\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  const activateSelectedSpeaker = async (speakerId: string) => {\r\n    const response = await apiChangeActiveSpeakerInChannel(\r\n      token,\r\n      Number(speakerId),\r\n      Number(dataForAdmin && dataForAdmin.channelForShowing.number),\r\n    );\r\n\r\n    setActiveSpeaker(`${response.lastName} ${response.firstName}`);\r\n\r\n    console.log('response2 :>> ', response);\r\n    // setDataForAdmin(response);\r\n  };\r\n\r\n  const setBreakBetweenSessions = async () => {\r\n    const response = await apiSetBrakeInChannel(\r\n      token,\r\n      Number(dataForAdmin && dataForAdmin.channelForShowing.number),\r\n    );\r\n\r\n    setActiveSpeaker('');\r\n\r\n    console.log('response3 :>> ', response);\r\n    // setDataForAdmin(response);\r\n  };\r\n\r\n  // const sendLoginDataToServer =\r\n\r\n  // const renderSpeakersDataForAdmin = () => {\r\n  //   if (dataForAdmin) {\r\n  //     dataForAdmin.speakers.map((element) => {\r\n  //       console.log('element :>> ', element);\r\n  //       if (!element.isModerator) {\r\n  //         <p>\r\n  //           {element.lastName}\r\n  //           {' '}\r\n  //           {element.firstName}\r\n  //         </p>;\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n  const renderSpeakersDataForAdmin = (element: Speaker) => {\r\n    if (!element.isModerator) {\r\n      return (\r\n\r\n        <Grid container xs={12} justify=\"center\">\r\n          <Button\r\n            onClick={(e) => { setSelectedSpeakerToActivate(e.currentTarget.value); }}\r\n            value={element.id}\r\n            data-id=\"\"\r\n            className={classes.speakerButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {`${element.lastName}  ${element.firstName}`}\r\n          </Button>\r\n        </Grid>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Администратора\r\n\r\n          </Typography>\r\n          <p>\r\n            {' '}\r\n            {dataForAdmin && dataForAdmin.letter}\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <Grid container>\r\n        <Grid item container xs={6}>\r\n\r\n          <Grid item xs={6}>\r\n            {\r\n              dataForAdmin && dataForAdmin.speakers.map(\r\n                (element) => renderSpeakersDataForAdmin(element),\r\n              )\r\n            }\r\n          </Grid>\r\n\r\n          <Grid item justify=\"center\" xs={6}>\r\n            <p className={classes.textCenter}>\r\n              {' '}\r\n              <Button onClick={() => activateSelectedSpeaker(selectedSpeakerToActivate)} variant=\"contained\" color=\"primary\">Активировать выбранного спикера</Button>\r\n            </p>\r\n\r\n            <p className={classes.textCenter}>\r\n              {' '}\r\n              <Button onClick={() => setBreakBetweenSessions()} variant=\"contained\" color=\"primary\">Активировать перерыв</Button>\r\n              {' '}\r\n            </p>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid item xs={6}>\r\n          <p>\r\n            Активный спикер:\r\n            {' '}\r\n            {`${activeSpeaker}`}\r\n          </p>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AdminPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["198"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226"],"import React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\nimport { Copyright } from '@material-ui/icons';\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport clsx from 'clsx';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport userEvent from '@testing-library/user-event';\r\nimport useStyles from './style';\r\nimport { apiLogin } from '../../api/login';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport parseToken from '../../utils/parseToken';\r\nimport VideoPlayerMain from '../../components/VideoPlayerMain/VideoPlayerMain';\r\nimport SessionInfoBlock from '../../components/SessionInfoBlock/SessionInfoBlock';\r\nimport topMMLFLogo from '../../img/mmlfLogo2021.svg';\r\nimport SpeakersSessionInfoBlock from '../../components/SpeakersSessionInfoBlock/SpeakersSessionInfoBlock';\r\nimport { apiGetUser } from '../../api/user';\r\n\r\ntype DataForUser = {\r\n  channelForShowing: {\r\n    break: boolean, id: number, link: string,\r\n    number: number\r\n  },\r\n  description: string;\r\n  id: number;\r\n  letter: string;\r\n  name: string;\r\n  speakers: Array<Speaker>\r\n\r\n};\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\ntype FormData = {\r\n  loginCode: string;\r\n};\r\n\r\ninterface Props {\r\n  onSubmit: (data: FormData) => void;\r\n\r\n}\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// const socket = io({\r\n//   path: `${process.env.REACT_APP_API_URL}`,\r\n//   reconnection: true,\r\n//   reconnectionAttempts: Infinity,\r\n//   reconnectionDelay: 1000,\r\n//   reconnectionDelayMax: 5000,\r\n//   randomizationFactor: 0.5,\r\n//   timeout: 20000,\r\n//   autoConnect: true,\r\n// });\r\n\r\nconst socket = io(`${process.env.REACT_APP_API_URL}`);\r\n\r\nconst UserPage: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  if (userData.isAdmin) {\r\n    return <Redirect to=\"/admin\" />;\r\n  }\r\n\r\n  if (userData.hasAccessToStatisticPage) {\r\n    return <Redirect to=\"/stats\" />;\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  const [user, setUser] = useState(parseToken(token.accessToken as string));\r\n  const history = useHistory();\r\n\r\n  console.log('user :>> ', user);\r\n\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [error, setError]: [string, (error: string) => void] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n  const [dataForUser, setDataForUser] = React.useState<DataForUser>();\r\n\r\n  // active session info\r\n  const [activeSessionLetter, setActiveSessionLetter] = React.useState<DataForUser>();\r\n  const [activeSessionDescription, setActiveSessionDescription] = React.useState<DataForUser>();\r\n\r\n  // active speaker info\r\n  const [activeSpeakerInfo, setActiveSpeakerInfo] = React.useState<DataForUser>();\r\n\r\n  // active moderator info\r\n  const [activeModeratorInfo, setActiveModeratorInfo] = React.useState<DataForUser>();\r\n\r\n  // active session speakers info\r\n  const [activeSessionSpeakersInfo, setActiveSessionSpeakersInfo] = React.useState<DataForUser>();\r\n\r\n  // will start hook again if user will be changed\r\n  useEffect(() => {\r\n    socket.emit('connectToPersonalRoom', user.id);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('giveMeConnectionInfo', (data: any) => {\r\n      console.log('giveMeConnectionInfo data :>> ', data);\r\n      socket.emit('connectToPersonalRoom', user.id);\r\n    });\r\n    return () => {\r\n      socket.off('giveMeConnectionInfo');\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on('connectToPersonalRoom', (data: any) => {\r\n      if (data.message === 'disconnect current user') {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        history.push('/');\r\n      }\r\n    });\r\n    return () => {\r\n      socket.off('connectToPersonalRoom');\r\n    };\r\n  });\r\n\r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    control, errors: fieldsErrors,\r\n  } = useForm<FormData>();\r\n  const onSubmit = async (data: FormData) => {\r\n    if (!loading) {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n    }\r\n    const response = await apiLogin(data.loginCode);\r\n\r\n    console.log('response :>> ', response);\r\n\r\n    if (response && response.status === 404) {\r\n      setError('Нет соединения');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (response && response.status === 400) {\r\n      setError('Ошибка');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (!response) {\r\n      setError('Нет соединения');\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (response && response.status === 500) {\r\n      setError(`${response.data}`);\r\n      setOpen(true);\r\n      setSuccess(false);\r\n      setLoading(false);\r\n    }\r\n    if (response && response.token && response.refreshToken) {\r\n      localStorage.setItem('token', response.token);\r\n      localStorage.setItem('refreshToken', response.refreshToken);\r\n      setSuccess(true);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  const loadDataForUser = async () => {\r\n    const response = await apiGetUser(userData.id, token);\r\n    setDataForUser(response);\r\n\r\n    if (response) {\r\n      setActiveSessionLetter(response && response.channelUserInfo\r\n        && response.channelUserInfo.activeSession && response.channelUserInfo.activeSession.letter);\r\n\r\n      setActiveSessionDescription(response && response.channelUserInfo\r\n        && response.channelUserInfo.activeSession\r\n        && response.channelUserInfo.activeSession.description);\r\n\r\n      setActiveSpeakerInfo(response && response.channelUserInfo\r\n        && response.channelUserInfo.activeSpeaker);\r\n\r\n      setActiveModeratorInfo(response && response.channelUserInfo\r\n        && response.channelUserInfo.activeSession &&\r\n        response.channelUserInfo.activeSession.speakers.find(\r\n          (element: any) => element.isModerator,\r\n        ));\r\n\r\n      setActiveSessionSpeakersInfo(response && response.channelUserInfo\r\n        && response.channelUserInfo.activeSession\r\n        && response.channelUserInfo.activeSession.speakers);\r\n\r\n      // console.log('activeSpeakerInfo :>> ', activeSpeakerInfo);\r\n\r\n      console.log('activeModeratorInfo :>> ', activeModeratorInfo);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForUser();\r\n  }, []);\r\n\r\n  // const sendLoginDataToServer =\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Пользователя\r\n          </Typography>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      {/* header */}\r\n      <Grid container xl justify=\"space-between\" className={`${classes.mainContainer} ${classes.darkBlueBckg} ${classes.topPart}`}>\r\n\r\n        <Grid item className={classes.myAuto} xl={3}>\r\n          <img className={classes.mmlfTopLogoImg} src={topMMLFLogo} alt=\"\" />\r\n        </Grid>\r\n\r\n        <Grid item className={classes.myAuto} xl={6}>\r\n          <Typography className={classes.conferenceTopText} align=\"center\">Конференция</Typography>\r\n        </Grid>\r\n\r\n        <Grid item className={classes.myAuto} xl={3}>\r\n          <Button className={classes.loadProgramButton}>Скачать программу</Button>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Grid container xl justify=\"center\">\r\n\r\n        <VideoPlayerMain videoURL=\"https://facecast.net/v/pybh3r\" />\r\n\r\n      </Grid>\r\n\r\n      <Grid className={classes.redBckgContainer} container justify=\"center\">\r\n\r\n        <Grid item className={classes.innerContainer} justify=\"center\">\r\n\r\n          <SessionInfoBlock\r\n            currentSessionLetter={activeSessionLetter}\r\n            currentSessionDescription={activeSessionDescription}\r\n            currentSpeakerInfo={activeSpeakerInfo}\r\n          />\r\n\r\n        </Grid>\r\n\r\n        <Grid item className={classes.innerContainer} justify=\"center\">\r\n\r\n          <SpeakersSessionInfoBlock\r\n            currentModeratorInfo={activeModeratorInfo}\r\n            currentSessionSpeakersInfo={activeSessionSpeakersInfo}\r\n          />\r\n\r\n        </Grid>\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(UserPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\indexTheme.ts",["227"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["228","229","230","231","232","233","234","235"],"import React, { memo, useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport { createPortal } from 'react-dom';\nimport useStyles from './style';\n\nconst VideoPlayerMain = (props: any) => {\n  const classes = useStyles();\n\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef;\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\n\n  const playVideo = (): any => {\n\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      data-testid=\"loading-page\"\n    >\n      <div\n        className=\"myClassname2\"\n        ref={inputRef}\n      >\n        <Iframe\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\n          url={props.videoURL}\n          width=\"100%\"\n          height=\"auto\"\n          id=\"myId\"\n          className=\"myClassname\"\n          position=\"relative\"\n          allow=\"fullscreen\"\n          onLoad={playVideo()}\n        />\n      </div>\n    </Grid>\n\n  );\n};\n\nexport default memo(VideoPlayerMain);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["236","237","238","239","240","241","242"],"import React, { memo } from 'react';\nimport {\n  Grid, CircularProgress, Typography, Button,\n} from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport Divider from '@material-ui/core/Divider';\nimport useStyles from './style';\nimport VideoPlayerMain from '../VideoPlayerMain/VideoPlayerMain';\nimport ModeratorCard from '../ModeratorCard/ModeratorCard';\nimport noAvatar from '../../img/speakersImg/noAvatar.svg';\n\nconst SessionInfoBlock = (props: any) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState<number | null>(2);\n\n  const { currentSpeakerInfo } = props;\n\n  console.log('currentSpeakerInfo :>> ', currentSpeakerInfo);\n\n  return (\n    <>\n\n      <Grid item container className={classes.darkBlueBckg}>\n        <Grid item xs={12}>\n          <p className={props.currentSessionLetter && props.currentSessionLetter.length > 10\n            ? classes.sessionLetterTextLong : classes.sessionLetterText}\n          >\n            {props.currentSessionLetter || 'Сессия #'}\n          </p>\n\n        </Grid>\n\n        <p className={classes.sessionNameText}>\n          {props.currentSessionDescription || 'Тема сессии'}\n        </p>\n\n      </Grid>\n\n      <Grid item container justify=\"space-between\" className={classes.lightBlueBckg}>\n\n        <Grid item className={classes.speakerInfoBlock} xs={8}>\n          <p className={classes.speakerTheme}>\n            {currentSpeakerInfo && currentSpeakerInfo.topicName || 'Тема доклада'}\n          </p>\n\n          <Grid container spacing={5}>\n\n            <Grid item xs={2}>\n              <img className={classes.speakerAvatarImg} width=\"100%\" src={currentSpeakerInfo && currentSpeakerInfo.linkToImg || noAvatar} alt=\"\" />\n\n            </Grid>\n            <Grid item xs={8}>\n              <p className={classes.speakerHeaderText}>Спикер</p>\n              <p className={classes.speakerFullNameText}>{`${currentSpeakerInfo && currentSpeakerInfo.lastName || 'ФАМИЛИЯ'} ${currentSpeakerInfo && currentSpeakerInfo.firstName || 'Имя'}`}</p>\n              <p className={classes.speakerFullCompanyText}>{`${currentSpeakerInfo && currentSpeakerInfo.company || 'Компания'}, ${currentSpeakerInfo && currentSpeakerInfo.statusInCompany || 'должность'}`}</p>\n            </Grid>\n          </Grid>\n\n        </Grid>\n\n        <Grid alignItems=\"center\" alignContent=\"center\" xs={3}>\n\n          <p className={classes.textCenter}>\n            <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n              <Typography className={classes.rateSpeakerText} component=\"legend\">Оцените выступление</Typography>\n              <Rating\n                className={classes.rateSpeakerStarsImg}\n                name=\"simple-controlled\"\n                value={value}\n                onChange={(event, newValue) => {\n                  setValue(newValue);\n                }}\n              />\n            </Box>\n          </p>\n\n          <p className={classes.textCenter}>\n            <Button className={classes.loadPresenationButton}>Скачать презентацию</Button>\n          </p>\n\n          <p className={classes.textCenter}>\n            <Button className={classes.goToZoomButton}>Перейти в Zoom</Button>\n          </p>\n\n        </Grid>\n\n        {/* <p className={classes.speakerTheme}>\n          {props.currentSpeakerTheme || 'Тема доклада'}\n        </p>\n        <p className={classes.sessionNameText}>\n          {props.currentSessionName || 'Тема сессии'}\n        </p> */}\n\n      </Grid>\n\n    </>\n  );\n};\n\nexport default memo(SessionInfoBlock);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx",["243","244","245","246","247","248","249","250","251","252"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["253"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiGetUser = async (\n  userId: string,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getUser}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["254","255"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\nexport const apiChangeActiveSpeakerInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  speakerIdToActivate: number,\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveSpeakerInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerIdToActivate, channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetBrakeInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setBrakeInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["256","257","258"],"/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable consistent-return */\n/* eslint-disable array-callback-return */\nimport React, { memo } from 'react';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Rating from '@material-ui/lab/Rating';\nimport useStyles from './style';\nimport noAvatar from '../../img/speakersImg/noAvatar.svg';\nimport PDF from '../../img/pdf_icon.svg';\nimport Zoom from '../../img/zoomfondo-blanco-vertical-seeklogo.svg';\n\nconst SpeakersSessionInfoBlock = (props: any) => {\n  const classes = useStyles();\n  const [value] = React.useState<number | null>(5);\n\n  const { currentModeratorInfo, currentSessionSpeakersInfo } = props;\n\n  console.log('currentSessionSpeakersInfo :>> ', currentSessionSpeakersInfo);\n\n  const renderMockedSessionSpeakers = () => (\n    <>\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n\n      <Grid item>\n\n        <p className={classes.speakerAvatarInsideSessionParagraph}>\n          <img className={classes.speakerAvatarInsideSession} src={noAvatar} alt=\"\" />\n        </p>\n        <p className={classes.speakerNameInsideSession}>ФАМИЛИЯ</p>\n        <p className={classes.speakerNameInsideSession}>Имя</p>\n        <p>\n          {' '}\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n          </Box>\n\n        </p>\n\n        <Grid container justify=\"space-around\">\n          <Grid item>\n\n            <img src={PDF} alt=\"\" />\n\n          </Grid>\n          <Grid item>\n\n            <img src={Zoom} alt=\"\" />\n\n          </Grid>\n\n        </Grid>\n\n      </Grid>\n    </>\n  );\n\n  const renderSessionSpeakers = () => (\n\n    currentSessionSpeakersInfo.map((element: any) => {\n      if (!element.isModerator) {\n        return (\n          <>\n            <Grid item>\n\n              <p className={classes.speakerAvatarInsideSessionParagraph}>\n                <img className={classes.speakerAvatarInsideSession} src={element.linkToImg} alt=\"\" />\n              </p>\n              <p className={classes.speakerNameInsideSession}>{element.lastName}</p>\n              <p className={classes.speakerNameInsideSession}>{element.firstName}</p>\n              <p>\n                <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n                  <Rating className={classes.smallScoreStarImg} name=\"read-only\" value={value} readOnly />\n                </Box>\n\n              </p>\n\n              <Grid container justify=\"space-around\">\n                <Grid item>\n\n                  <img\n                    className={classes.pointerImg}\n                    src={PDF}\n                    onClick={() => window.open(`${element.linkToPresentation}`, '_blank')}\n                    alt=\"\"\n                  />\n\n                </Grid>\n\n                {\n                  element.linkToZoom ? (\n                    <Grid item>\n\n                      <img\n                        src={Zoom}\n                        className={classes.pointerImg}\n                        onClick={() => window.open(`${element.linkToZoom}`, '_blank')}\n                        alt=\"\"\n                      />\n\n                    </Grid>\n                  ) : null\n                }\n\n              </Grid>\n\n            </Grid>\n          </>\n        );\n      }\n    })\n  );\n\n  return (\n    <>\n\n      <Grid item container className={classes.mainContainerBckg}>\n\n        <Grid item xs={8}><p className={classes.speakersBlockHeader}>Спикеры сессии</p></Grid>\n\n        <Grid item className={classes.moderatorContainerInfoBlock} container xs={4}>\n\n          <Grid item xs={3}>\n            <img width=\"100%\" src={currentModeratorInfo && currentModeratorInfo.linkToImg || noAvatar} alt=\"\" />\n\n          </Grid>\n          <Grid className={classes.moderatorInfoBlock} item xs={8}>\n            <div>\n              <p className={classes.moderatorHeaderText}>Модератор</p>\n              <p className={classes.moderatorFullName}>{`${currentModeratorInfo && currentModeratorInfo.lastName || 'ФАМИЛИЯ'} ${currentModeratorInfo && currentModeratorInfo.firstName || 'Имя'}`}</p>\n            </div>\n          </Grid>\n\n        </Grid>\n\n        <Grid justify=\"space-around\" container xs={12}>\n\n          {\n            currentSessionSpeakersInfo ? renderSessionSpeakers() : renderMockedSessionSpeakers()\n          }\n\n        </Grid>\n\n      </Grid>\n\n    </>\n  );\n};\n\nexport default memo(SpeakersSessionInfoBlock);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],{"ruleId":"259","severity":1,"message":"260","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":23},{"ruleId":"259","severity":1,"message":"263","line":7,"column":10,"nodeType":"261","messageId":"262","endLine":7,"endColumn":15},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":3,"column":25,"nodeType":"278","messageId":"279","endLine":3,"endColumn":57},{"ruleId":"259","severity":1,"message":"280","line":2,"column":23,"nodeType":"261","messageId":"262","endLine":2,"endColumn":32},{"ruleId":"259","severity":1,"message":"281","line":11,"column":8,"nodeType":"261","messageId":"262","endLine":11,"endColumn":12},{"ruleId":"259","severity":1,"message":"282","line":16,"column":8,"nodeType":"261","messageId":"262","endLine":16,"endColumn":18},{"ruleId":"259","severity":1,"message":"283","line":23,"column":10,"nodeType":"261","messageId":"262","endLine":23,"endColumn":16},{"ruleId":"259","severity":1,"message":"284","line":23,"column":18,"nodeType":"261","messageId":"262","endLine":23,"endColumn":27},{"ruleId":"285","severity":1,"message":"286","line":1,"column":33,"nodeType":"287","messageId":"288","endLine":1,"endColumn":36,"suggestions":"289"},{"ruleId":"259","severity":1,"message":"290","line":19,"column":3,"nodeType":"261","messageId":"262","endLine":19,"endColumn":14},{"ruleId":"259","severity":1,"message":"291","line":19,"column":16,"nodeType":"261","messageId":"262","endLine":19,"endColumn":22},{"ruleId":"259","severity":1,"message":"292","line":28,"column":11,"nodeType":"261","messageId":"262","endLine":28,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":33,"column":23,"nodeType":"287","messageId":"288","endLine":33,"endColumn":26,"suggestions":"293"},{"ruleId":"285","severity":1,"message":"286","line":10,"column":12,"nodeType":"287","messageId":"288","endLine":10,"endColumn":15,"suggestions":"294"},{"ruleId":"259","severity":1,"message":"280","line":2,"column":13,"nodeType":"261","messageId":"262","endLine":2,"endColumn":22},{"ruleId":"259","severity":1,"message":"295","line":11,"column":8,"nodeType":"261","messageId":"262","endLine":11,"endColumn":19},{"ruleId":"259","severity":1,"message":"296","line":16,"column":8,"nodeType":"261","messageId":"262","endLine":16,"endColumn":17},{"ruleId":"259","severity":1,"message":"297","line":19,"column":11,"nodeType":"261","messageId":"262","endLine":19,"endColumn":19},{"ruleId":"259","severity":1,"message":"284","line":24,"column":18,"nodeType":"261","messageId":"262","endLine":24,"endColumn":27},{"ruleId":"259","severity":1,"message":"298","line":28,"column":20,"nodeType":"261","messageId":"262","endLine":28,"endColumn":31},{"ruleId":"299","severity":1,"message":"300","line":56,"column":3,"nodeType":"301","messageId":"302","endLine":56,"endColumn":14},{"ruleId":"264","replacedBy":"303"},{"ruleId":"266","replacedBy":"304"},{"ruleId":"268","replacedBy":"305"},{"ruleId":"270","replacedBy":"306"},{"ruleId":"272","replacedBy":"307"},{"ruleId":"274","replacedBy":"308"},{"ruleId":"276","severity":1,"message":"277","line":1,"column":27,"nodeType":"278","messageId":"279","endLine":1,"endColumn":51},{"ruleId":"259","severity":1,"message":"309","line":6,"column":16,"nodeType":"261","messageId":"262","endLine":6,"endColumn":27},{"ruleId":"259","severity":1,"message":"310","line":9,"column":10,"nodeType":"261","messageId":"262","endLine":9,"endColumn":19},{"ruleId":"259","severity":1,"message":"311","line":15,"column":8,"nodeType":"261","messageId":"262","endLine":15,"endColumn":17},{"ruleId":"259","severity":1,"message":"312","line":16,"column":8,"nodeType":"261","messageId":"262","endLine":16,"endColumn":24},{"ruleId":"259","severity":1,"message":"313","line":17,"column":8,"nodeType":"261","messageId":"262","endLine":17,"endColumn":16},{"ruleId":"259","severity":1,"message":"314","line":18,"column":8,"nodeType":"261","messageId":"262","endLine":18,"endColumn":12},{"ruleId":"259","severity":1,"message":"315","line":20,"column":8,"nodeType":"261","messageId":"262","endLine":20,"endColumn":11},{"ruleId":"259","severity":1,"message":"316","line":23,"column":10,"nodeType":"261","messageId":"262","endLine":23,"endColumn":20},{"ruleId":"259","severity":1,"message":"317","line":25,"column":19,"nodeType":"261","messageId":"262","endLine":25,"endColumn":29},{"ruleId":"259","severity":1,"message":"318","line":29,"column":8,"nodeType":"261","messageId":"262","endLine":29,"endColumn":24},{"ruleId":"259","severity":1,"message":"319","line":31,"column":10,"nodeType":"261","messageId":"262","endLine":31,"endColumn":18},{"ruleId":"259","severity":1,"message":"292","line":69,"column":11,"nodeType":"261","messageId":"262","endLine":69,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":74,"column":23,"nodeType":"287","messageId":"288","endLine":74,"endColumn":26,"suggestions":"320"},{"ruleId":"259","severity":1,"message":"298","line":81,"column":20,"nodeType":"261","messageId":"262","endLine":81,"endColumn":31},{"ruleId":"259","severity":1,"message":"321","line":85,"column":17,"nodeType":"261","messageId":"262","endLine":85,"endColumn":25},{"ruleId":"259","severity":1,"message":"322","line":94,"column":9,"nodeType":"261","messageId":"262","endLine":94,"endColumn":24},{"ruleId":"259","severity":1,"message":"323","line":99,"column":5,"nodeType":"261","messageId":"262","endLine":99,"endColumn":17},{"ruleId":"259","severity":1,"message":"324","line":100,"column":5,"nodeType":"261","messageId":"262","endLine":100,"endColumn":12},{"ruleId":"259","severity":1,"message":"325","line":100,"column":22,"nodeType":"261","messageId":"262","endLine":100,"endColumn":34},{"ruleId":"259","severity":1,"message":"326","line":102,"column":9,"nodeType":"261","messageId":"262","endLine":102,"endColumn":17},{"ruleId":"259","severity":1,"message":"327","line":102,"column":27,"nodeType":"261","messageId":"262","endLine":102,"endColumn":41},{"ruleId":"259","severity":1,"message":"328","line":108,"column":9,"nodeType":"261","messageId":"262","endLine":108,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":140,"column":5,"nodeType":"301","messageId":"302","endLine":140,"endColumn":16},{"ruleId":"299","severity":1,"message":"300","line":152,"column":5,"nodeType":"301","messageId":"302","endLine":152,"endColumn":16},{"ruleId":"259","severity":1,"message":"329","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":16},{"ruleId":"259","severity":1,"message":"310","line":6,"column":10,"nodeType":"261","messageId":"262","endLine":6,"endColumn":19},{"ruleId":"259","severity":1,"message":"311","line":12,"column":8,"nodeType":"261","messageId":"262","endLine":12,"endColumn":17},{"ruleId":"259","severity":1,"message":"312","line":13,"column":8,"nodeType":"261","messageId":"262","endLine":13,"endColumn":24},{"ruleId":"259","severity":1,"message":"313","line":14,"column":8,"nodeType":"261","messageId":"262","endLine":14,"endColumn":16},{"ruleId":"259","severity":1,"message":"314","line":15,"column":8,"nodeType":"261","messageId":"262","endLine":15,"endColumn":12},{"ruleId":"259","severity":1,"message":"315","line":17,"column":8,"nodeType":"261","messageId":"262","endLine":17,"endColumn":11},{"ruleId":"259","severity":1,"message":"316","line":20,"column":10,"nodeType":"261","messageId":"262","endLine":20,"endColumn":20},{"ruleId":"259","severity":1,"message":"317","line":22,"column":19,"nodeType":"261","messageId":"262","endLine":22,"endColumn":29},{"ruleId":"259","severity":1,"message":"318","line":26,"column":8,"nodeType":"261","messageId":"262","endLine":26,"endColumn":24},{"ruleId":"259","severity":1,"message":"330","line":29,"column":8,"nodeType":"261","messageId":"262","endLine":29,"endColumn":17},{"ruleId":"259","severity":1,"message":"292","line":72,"column":11,"nodeType":"261","messageId":"262","endLine":72,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":77,"column":23,"nodeType":"287","messageId":"288","endLine":77,"endColumn":26,"suggestions":"331"},{"ruleId":"259","severity":1,"message":"284","line":95,"column":18,"nodeType":"261","messageId":"262","endLine":95,"endColumn":27},{"ruleId":"259","severity":1,"message":"298","line":98,"column":20,"nodeType":"261","messageId":"262","endLine":98,"endColumn":31},{"ruleId":"259","severity":1,"message":"332","line":110,"column":16,"nodeType":"261","messageId":"262","endLine":110,"endColumn":23},{"ruleId":"299","severity":1,"message":"300","line":113,"column":3,"nodeType":"301","messageId":"302","endLine":113,"endColumn":14},{"ruleId":"259","severity":1,"message":"333","line":119,"column":10,"nodeType":"261","messageId":"262","endLine":119,"endColumn":21},{"ruleId":"285","severity":1,"message":"286","line":140,"column":46,"nodeType":"287","messageId":"288","endLine":140,"endColumn":49,"suggestions":"334"},{"ruleId":"299","severity":1,"message":"300","line":141,"column":7,"nodeType":"301","messageId":"302","endLine":141,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":150,"column":47,"nodeType":"287","messageId":"288","endLine":150,"endColumn":50,"suggestions":"335"},{"ruleId":"259","severity":1,"message":"322","line":162,"column":9,"nodeType":"261","messageId":"262","endLine":162,"endColumn":24},{"ruleId":"259","severity":1,"message":"323","line":167,"column":5,"nodeType":"261","messageId":"262","endLine":167,"endColumn":17},{"ruleId":"259","severity":1,"message":"324","line":168,"column":5,"nodeType":"261","messageId":"262","endLine":168,"endColumn":12},{"ruleId":"259","severity":1,"message":"325","line":168,"column":22,"nodeType":"261","messageId":"262","endLine":168,"endColumn":34},{"ruleId":"259","severity":1,"message":"326","line":170,"column":9,"nodeType":"261","messageId":"262","endLine":170,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":177,"column":5,"nodeType":"301","messageId":"302","endLine":177,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":239,"column":21,"nodeType":"287","messageId":"288","endLine":239,"endColumn":24,"suggestions":"336"},{"ruleId":"299","severity":1,"message":"300","line":248,"column":7,"nodeType":"301","messageId":"302","endLine":248,"endColumn":18},{"ruleId":"259","severity":1,"message":"337","line":15,"column":9,"nodeType":"261","messageId":"262","endLine":15,"endColumn":20},{"ruleId":"259","severity":1,"message":"318","line":2,"column":16,"nodeType":"261","messageId":"262","endLine":2,"endColumn":32},{"ruleId":"259","severity":1,"message":"338","line":4,"column":10,"nodeType":"261","messageId":"262","endLine":4,"endColumn":22},{"ruleId":"285","severity":1,"message":"286","line":7,"column":33,"nodeType":"287","messageId":"288","endLine":7,"endColumn":36,"suggestions":"339"},{"ruleId":"259","severity":1,"message":"340","line":8,"column":9,"nodeType":"261","messageId":"262","endLine":8,"endColumn":16},{"ruleId":"259","severity":1,"message":"341","line":10,"column":22,"nodeType":"261","messageId":"262","endLine":10,"endColumn":35},{"ruleId":"259","severity":1,"message":"342","line":11,"column":9,"nodeType":"261","messageId":"262","endLine":11,"endColumn":18},{"ruleId":"285","severity":1,"message":"286","line":12,"column":19,"nodeType":"287","messageId":"288","endLine":12,"endColumn":22,"suggestions":"343"},{"ruleId":"285","severity":1,"message":"286","line":14,"column":25,"nodeType":"287","messageId":"288","endLine":14,"endColumn":28,"suggestions":"344"},{"ruleId":"259","severity":1,"message":"318","line":3,"column":9,"nodeType":"261","messageId":"262","endLine":3,"endColumn":25},{"ruleId":"259","severity":1,"message":"345","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":14},{"ruleId":"259","severity":1,"message":"346","line":8,"column":8,"nodeType":"261","messageId":"262","endLine":8,"endColumn":15},{"ruleId":"259","severity":1,"message":"347","line":10,"column":8,"nodeType":"261","messageId":"262","endLine":10,"endColumn":23},{"ruleId":"259","severity":1,"message":"348","line":11,"column":8,"nodeType":"261","messageId":"262","endLine":11,"endColumn":21},{"ruleId":"285","severity":1,"message":"286","line":14,"column":34,"nodeType":"287","messageId":"288","endLine":14,"endColumn":37,"suggestions":"349"},{"ruleId":"299","severity":1,"message":"300","line":20,"column":3,"nodeType":"301","messageId":"302","endLine":20,"endColumn":14},{"ruleId":"259","severity":1,"message":"318","line":3,"column":9,"nodeType":"261","messageId":"262","endLine":3,"endColumn":25},{"ruleId":"259","severity":1,"message":"350","line":3,"column":27,"nodeType":"261","messageId":"262","endLine":3,"endColumn":37},{"ruleId":"259","severity":1,"message":"351","line":3,"column":39,"nodeType":"261","messageId":"262","endLine":3,"endColumn":45},{"ruleId":"259","severity":1,"message":"345","line":5,"column":8,"nodeType":"261","messageId":"262","endLine":5,"endColumn":14},{"ruleId":"259","severity":1,"message":"315","line":6,"column":8,"nodeType":"261","messageId":"262","endLine":6,"endColumn":11},{"ruleId":"259","severity":1,"message":"352","line":7,"column":8,"nodeType":"261","messageId":"262","endLine":7,"endColumn":14},{"ruleId":"259","severity":1,"message":"346","line":8,"column":8,"nodeType":"261","messageId":"262","endLine":8,"endColumn":15},{"ruleId":"259","severity":1,"message":"347","line":10,"column":8,"nodeType":"261","messageId":"262","endLine":10,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":12,"column":31,"nodeType":"287","messageId":"288","endLine":12,"endColumn":34,"suggestions":"353"},{"ruleId":"259","severity":1,"message":"340","line":13,"column":9,"nodeType":"261","messageId":"262","endLine":13,"endColumn":16},{"ruleId":"285","severity":1,"message":"286","line":14,"column":12,"nodeType":"287","messageId":"288","endLine":14,"endColumn":15,"suggestions":"354"},{"ruleId":"285","severity":1,"message":"286","line":13,"column":12,"nodeType":"287","messageId":"288","endLine":13,"endColumn":15,"suggestions":"355"},{"ruleId":"285","severity":1,"message":"286","line":34,"column":12,"nodeType":"287","messageId":"288","endLine":34,"endColumn":15,"suggestions":"356"},{"ruleId":"285","severity":1,"message":"286","line":16,"column":42,"nodeType":"287","messageId":"288","endLine":16,"endColumn":45,"suggestions":"357"},{"ruleId":"299","severity":1,"message":"300","line":22,"column":3,"nodeType":"301","messageId":"302","endLine":22,"endColumn":14},{"ruleId":"285","severity":1,"message":"286","line":186,"column":46,"nodeType":"287","messageId":"288","endLine":186,"endColumn":49,"suggestions":"358"},"@typescript-eslint/no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'theme' is defined but never used.","lines-around-directive",["359"],"no-spaced-func",["360"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","'useEffect' is defined but never used.","'logo' is defined but never used.","'parseToken' is defined but never used.","'isAuth' is assigned a value but never used.","'setIsAuth' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["361","362"],"'useLocation' is defined but never used.","'Prompt' is defined but never used.","'Props' is defined but never used.",["363","364"],["365","366"],"'LoadingPage' is defined but never used.","'LoginPage' is defined but never used.","'UserData' is defined but never used.","'setUserData' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected",["359"],["360"],[],[],[],[],"'useCallback' is defined but never used.","'Copyright' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'Controller' is defined but never used.","'CircularProgress' is defined but never used.","'apiLogin' is defined but never used.",["367","368"],"'setError' is assigned a value but never used.","'buttonClassname' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'control' is assigned a value but never used.","'fieldsErrors' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'data' is defined but never used.","'response' is defined but never used.","'Hidden' is defined but never used.","'userEvent' is defined but never used.",["369","370"],"'setUser' is assigned a value but never used.","'dataForUser' is assigned a value but never used.",["371","372"],["373","374"],["375","376"],"'breakpoints' is assigned a value but never used.","'createPortal' is defined but never used.",["377","378"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["379","380"],["381","382"],"'Iframe' is defined but never used.","'Divider' is defined but never used.","'VideoPlayerMain' is defined but never used.","'ModeratorCard' is defined but never used.",["383","384"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Rating' is defined but never used.",["385","386"],["387","388"],["389","390"],["391","392"],["393","394"],["395","396"],"padding-line-between-statements","func-call-spacing",{"messageId":"397","fix":"398","desc":"399"},{"messageId":"400","fix":"401","desc":"402"},{"messageId":"397","fix":"403","desc":"399"},{"messageId":"400","fix":"404","desc":"402"},{"messageId":"397","fix":"405","desc":"399"},{"messageId":"400","fix":"406","desc":"402"},{"messageId":"397","fix":"407","desc":"399"},{"messageId":"400","fix":"408","desc":"402"},{"messageId":"397","fix":"409","desc":"399"},{"messageId":"400","fix":"410","desc":"402"},{"messageId":"397","fix":"411","desc":"399"},{"messageId":"400","fix":"412","desc":"402"},{"messageId":"397","fix":"413","desc":"399"},{"messageId":"400","fix":"414","desc":"402"},{"messageId":"397","fix":"415","desc":"399"},{"messageId":"400","fix":"416","desc":"402"},{"messageId":"397","fix":"417","desc":"399"},{"messageId":"400","fix":"418","desc":"402"},{"messageId":"397","fix":"419","desc":"399"},{"messageId":"400","fix":"420","desc":"402"},{"messageId":"397","fix":"421","desc":"399"},{"messageId":"400","fix":"422","desc":"402"},{"messageId":"397","fix":"423","desc":"399"},{"messageId":"400","fix":"424","desc":"402"},{"messageId":"397","fix":"425","desc":"399"},{"messageId":"400","fix":"426","desc":"402"},{"messageId":"397","fix":"427","desc":"399"},{"messageId":"400","fix":"428","desc":"402"},{"messageId":"397","fix":"429","desc":"399"},{"messageId":"400","fix":"430","desc":"402"},{"messageId":"397","fix":"431","desc":"399"},{"messageId":"400","fix":"432","desc":"402"},{"messageId":"397","fix":"433","desc":"399"},{"messageId":"400","fix":"434","desc":"402"},{"messageId":"397","fix":"435","desc":"399"},{"messageId":"400","fix":"436","desc":"402"},"suggestUnknown",{"range":"437","text":"438"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"437","text":"439"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"440","text":"438"},{"range":"440","text":"439"},{"range":"441","text":"438"},{"range":"441","text":"439"},{"range":"442","text":"438"},{"range":"442","text":"439"},{"range":"443","text":"438"},{"range":"443","text":"439"},{"range":"444","text":"438"},{"range":"444","text":"439"},{"range":"445","text":"438"},{"range":"445","text":"439"},{"range":"446","text":"438"},{"range":"446","text":"439"},{"range":"447","text":"438"},{"range":"447","text":"439"},{"range":"448","text":"438"},{"range":"448","text":"439"},{"range":"449","text":"438"},{"range":"449","text":"439"},{"range":"450","text":"438"},{"range":"450","text":"439"},{"range":"451","text":"438"},{"range":"451","text":"439"},{"range":"452","text":"438"},{"range":"452","text":"439"},{"range":"453","text":"438"},{"range":"453","text":"439"},{"range":"454","text":"438"},{"range":"454","text":"439"},{"range":"455","text":"438"},{"range":"455","text":"439"},{"range":"456","text":"438"},{"range":"456","text":"439"},[32,35],"unknown","never",[965,968],[222,225],[2262,2265],[2503,2506],[4676,4679],[4961,4964],[7549,7552],[250,253],[396,399],[498,501],[543,546],[421,424],[302,305],[361,364],[891,894],[624,627],[4971,4974]]