[{"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx":"1","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx":"2","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts":"3","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts":"4","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx":"5","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts":"6","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts":"7","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts":"8","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx":"9","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx":"10","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts":"11","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts":"12","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx":"13","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts":"14","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx":"15","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts":"16","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx":"17","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts":"18","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx":"19","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts":"20","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx":"21","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts":"22","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx":"23","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts":"24","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts":"25","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts":"26","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx":"27","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts":"28","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx":"29","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts":"30","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts":"31"},{"size":462,"mtime":1611587033817,"results":"32","hashOfConfig":"33"},{"size":999,"mtime":1611219535180,"results":"34","hashOfConfig":"33"},{"size":88,"mtime":1609151476043,"results":"35","hashOfConfig":"33"},{"size":355,"mtime":1611587774795,"results":"36","hashOfConfig":"33"},{"size":4843,"mtime":1610437764729,"results":"37","hashOfConfig":"33"},{"size":845,"mtime":1609924589133,"results":"38","hashOfConfig":"33"},{"size":433,"mtime":1609754100539,"results":"39","hashOfConfig":"33"},{"size":666,"mtime":1611590718624,"results":"40","hashOfConfig":"33"},{"size":1360,"mtime":1611588354280,"results":"41","hashOfConfig":"33"},{"size":455,"mtime":1609923543629,"results":"42","hashOfConfig":"33"},{"size":304,"mtime":1609923543632,"results":"43","hashOfConfig":"33"},{"size":816,"mtime":1611588730436,"results":"44","hashOfConfig":"33"},{"size":7098,"mtime":1611562544240,"results":"45","hashOfConfig":"33"},{"size":1287,"mtime":1611562566718,"results":"46","hashOfConfig":"33"},{"size":360,"mtime":1609927664710,"results":"47","hashOfConfig":"33"},{"size":474,"mtime":1609927609396,"results":"48","hashOfConfig":"33"},{"size":23231,"mtime":1611728274637,"results":"49","hashOfConfig":"33"},{"size":10840,"mtime":1611728188136,"results":"50","hashOfConfig":"33"},{"size":1088,"mtime":1611078096440,"results":"51","hashOfConfig":"33"},{"size":304,"mtime":1610521474487,"results":"52","hashOfConfig":"33"},{"size":8790,"mtime":1611725214689,"results":"53","hashOfConfig":"33"},{"size":10072,"mtime":1611725177970,"results":"54","hashOfConfig":"33"},{"size":804,"mtime":1610544223943,"results":"55","hashOfConfig":"33"},{"size":304,"mtime":1610534492141,"results":"56","hashOfConfig":"33"},{"size":3599,"mtime":1611590733718,"results":"57","hashOfConfig":"33"},{"size":1257,"mtime":1611561293120,"results":"58","hashOfConfig":"33"},{"size":19790,"mtime":1611728046609,"results":"59","hashOfConfig":"33"},{"size":6565,"mtime":1611725446644,"results":"60","hashOfConfig":"33"},{"size":8065,"mtime":1611654867557,"results":"61","hashOfConfig":"33"},{"size":1409,"mtime":1611245672776,"results":"62","hashOfConfig":"33"},{"size":551,"mtime":1611587442270,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"vtgqsx",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\index.tsx",[],["138","139","140","141","142","143"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\App.tsx",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\history.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\helpers\\localStorage.helper.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\LoginPage.tsx",["144","145","146","147"],"import React, {\n  FC, memo, useState,\n  ChangeEvent,\n} from 'react';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm, Controller } from 'react-hook-form';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  useLocation, Prompt, useHistory,\n} from 'react-router-dom';\nimport useStyles from './style';\nimport { apiLogin } from '../../api/login';\n\ntype FormData = {\n  loginCode: string;\n};\n\ninterface Props {\n  onSubmit: (data: FormData) => void;\n\n}\n\nfunction Alert(props: any) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst LoginPage: FC = () => {\n  const classes = useStyles();\n\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError]: [string, (error: string) => void] = useState('');\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const {\n    handleSubmit,\n    control, errors: fieldsErrors,\n  } = useForm<FormData>();\n  const onSubmit = async (data: FormData) => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n    }\n    const response = await apiLogin(data.loginCode);\n\n    if (response && response.status === 404) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 400) {\n      setError('Ошибка');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (!response) {\n      setError('Нет соединения');\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n\n    if (response && response.status === 500) {\n      setError(`${response.data}`);\n      setOpen(true);\n      setSuccess(false);\n      setLoading(false);\n    }\n    if (response && response.token && response.refreshToken) {\n      localStorage.setItem('token', response.token);\n      localStorage.setItem('refreshToken', response.refreshToken);\n      setSuccess(true);\n      setLoading(false);\n      history.push('/user');\n    }\n  };\n\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    await setOpen(false);\n  };\n\n  return (\n\n    <Container component=\"main\" maxWidth=\"xs\">\n\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          {error}\n        </Alert>\n      </Snackbar>\n\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Вход\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Controller\n            name=\"loginCode\"\n            as={(\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                fullWidth\n                id=\"loginCode\"\n                label=\"Полученный код\"\n                autoFocus\n              // error={!!fieldsErrors.loginCode?.message}\n              // helperText={fieldsErrors.loginCode ? fieldsErrors.loginCode.message : null}\n              />\n            )}\n            control={control}\n            defaultValue=\"\"\n            rules={{\n              required: 'Введите пожалуйста код',\n              // pattern: {\n              //   value: /^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]+$/i,\n              //   message: 'Incorrect value',\n              // },\n            }}\n          />\n          {fieldsErrors.loginCode && <Typography variant=\"caption\" color=\"error\">{fieldsErrors.loginCode.message}</Typography>}\n          <div className={classes.wrapper}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.submit}\n              className={buttonClassname}\n              disabled={loading}\n            >\n              Войти\n            </Button>\n            {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\n          </div>\n        </form>\n      </div>\n    </Container>\n\n  );\n};\n\nexport default memo(LoginPage);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Login\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\login.ts",["148"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\n// Login\nexport const apiLogin = async (\n  loginCode: string,\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.login}`;\n\n  try {\n    const { data } = await axios.post(url, { loginCode });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\core\\api.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ProtectedRoutes\\ProtectedRoutes.tsx",["149","150","151"],"import React, {\r\n  FC, memo, useState,\r\n} from 'react';\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport AdminPage from '../Admin/AdminPage';\r\n\r\n// import LoadingPage from '../../components/LoadingPage/LoadingPage';\r\nimport ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { parseToken } from '../../utils/parseToken';\r\nimport LoginPage from '../Login/LoginPage';\r\nimport UserPage from '../User/UserPage';\r\n\r\nexport const ProtectedRoutes: FC = () => {\r\n  const [isAuth, setIsAuth] = useState(!!getLocalStorageData().token.accessToken);\r\n  if (!isAuth) return <Redirect to=\"/signin\" />;\r\n  const { token } = getLocalStorageData();\r\n\r\n  const [userData, setUserData] = useState(parseToken(token.accessToken as string));\r\n\r\n  if (userData.isAdmin) return <Redirect to=\"/admin\" />;\r\n  if (userData.hasAccessToStatisticPage) return <Redirect to=\"/stats\" />;\r\n  if (!userData.isAdmin) return <Redirect to=\"/user\" />;\r\n\r\n  // }\r\n\r\n  return (\r\n\r\n    <ContentContainer>\r\n      <Switch>\r\n        {(!userData?.isAdmin) && <Route path=\"/user\" component={UserPage} />}\r\n        {(userData?.isAdmin) && <Route path=\"/admin\" component={AdminPage} />}\r\n      </Switch>\r\n    </ContentContainer>\r\n  );\r\n};\r\n\r\nexport default memo(ProtectedRoutes);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\LoadingPage.tsx",[],["152","153","154","155","156","157"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\LoadingPage\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\utils\\parseToken.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\AdminPage.tsx",["158"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n  ChangeEvent,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport useStyles from './style';\r\nimport { apiGetUser } from '../../api/user';\r\nimport parseToken from '../../utils/parseToken';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport { apiChangeActiveSpeakerInChannel, apiSetBrakeInChannel } from '../../api/admin';\r\n\r\ntype Speaker = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n};\r\n\r\ntype DataForAdmin = {\r\n  // channelAdminInfo: {\r\n  //   break: boolean, id: number, link: string,\r\n  //   number: number\r\n  // },\r\n  // description: string;\r\n  // id: number;\r\n  // letter: string;\r\n  // name: string;\r\n  // speakers: Array<Speaker>\r\n\r\n  channelAdminInfo: {\r\n    number: number,\r\n  }\r\n\r\n  foundAllSessionsInAdminChannel: Array<Session>\r\n\r\n};\r\n\r\nfunction Alert(props: any) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\ntype Session = {\r\n\r\n  description: string;\r\n  id: number;\r\n  letter: string;\r\n  name: string;\r\n  nextSessionDescription: string;\r\n  nextSessionLetter: string;\r\n  speakers: Array<Speaker>;\r\n  voteFoAllSession: boolean;\r\n\r\n};\r\n\r\nconst AdminPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [error]: [string, (error: string) => void] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [activeSpeaker, setActiveSpeaker] = useState('');\r\n\r\n  const [selectedSpeakerToActivate, setSelectedSpeakerToActivate] = useState('');\r\n\r\n  const [dataForAdmin, setDataForAdmin] = useState<DataForAdmin>();\r\n  const [activeButtonId, setActiveButtonId] = useState<number | undefined>();\r\n\r\n  const loadDataForAdmin = async () => {\r\n    const response = await apiGetUser(userData.id, token);\r\n    setDataForAdmin(response);\r\n\r\n    if (response && response.channelAdminInfo && response.channelAdminInfo.activeSpeaker) {\r\n      setActiveSpeaker(`${response.channelAdminInfo.activeSpeaker.lastName} ${response.channelAdminInfo.activeSpeaker.firstName}`);\r\n      setActiveButtonId(response.channelAdminInfo.activeSpeaker.id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForAdmin();\r\n  }, []);\r\n\r\n  const handleClose = async (event: ChangeEvent<unknown>, reason: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    await setOpen(false);\r\n  };\r\n\r\n  const activateSelectedSpeaker = async (speakerId: string) => {\r\n    const response = await apiChangeActiveSpeakerInChannel(\r\n      token,\r\n      Number(speakerId),\r\n      Number(dataForAdmin && dataForAdmin.channelAdminInfo.number),\r\n    );\r\n\r\n    setActiveSpeaker(`${response.lastName} ${response.firstName}`);\r\n  };\r\n\r\n  const setBreakBetweenSessions = async () => {\r\n    await apiSetBrakeInChannel(\r\n      token,\r\n      Number(dataForAdmin && dataForAdmin.channelAdminInfo.number),\r\n      Number(activeButtonId),\r\n    );\r\n    setActiveSpeaker('');\r\n    setActiveButtonId(undefined);\r\n  };\r\n\r\n  const renderSpeakersDataForAdmin = (element: Speaker) => {\r\n    if (!element.isModerator) {\r\n      return (\r\n\r\n        <Grid container xs={12} justify=\"center\">\r\n          <Button\r\n            onClick={(e) => {\r\n              setSelectedSpeakerToActivate(e.currentTarget.value);\r\n              setActiveButtonId(Number(e.currentTarget.value));\r\n            }}\r\n            value={element.id}\r\n            data-id=\"\"\r\n            className={activeButtonId === element.id ?\r\n              classes.speakerButtonActive : classes.speakerButton}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n          >\r\n            {`${element.lastName}  ${element.firstName}`}\r\n          </Button>\r\n        </Grid>\r\n\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            {error}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Администратора\r\n          </Typography>\r\n          <p className={classes.sessionLetter}>\r\n            Канал №\r\n            {dataForAdmin && String(dataForAdmin.channelAdminInfo.number)}\r\n          </p>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <Grid container justify=\"space-around\">\r\n\r\n        <Grid item xs={4}>\r\n\r\n          {\r\n            dataForAdmin && dataForAdmin.foundAllSessionsInAdminChannel.map(\r\n              (session: Session) => (\r\n                <>\r\n                  <p className={classes.sessionLetter}>\r\n                    {session.letter}\r\n                  </p>\r\n                  <p>\r\n                    {session.speakers.map(\r\n                      (speaker: Speaker) => renderSpeakersDataForAdmin(speaker),\r\n                    )}\r\n                  </p>\r\n                </>\r\n              ),\r\n            )\r\n          }\r\n\r\n          {/* {\r\n            dataForAdmin && dataForAdmin.foundAllSessionsInAdminChannel.map(\r\n              (element: Session) => renderSpeakersDataForAdmin(element),\r\n            )\r\n          } */}\r\n        </Grid>\r\n\r\n        <Grid item justify=\"center\" xs={4}>\r\n          <p className={`${classes.textCenter} ${classes.activateSelectedSpeakerP}`}>\r\n            <Button onClick={() => activateSelectedSpeaker(selectedSpeakerToActivate)} variant=\"contained\" color=\"primary\">Активировать выбранного спикера</Button>\r\n          </p>\r\n\r\n          <p className={classes.textCenter}>\r\n            <Button onClick={() => setBreakBetweenSessions()} variant=\"contained\" color=\"primary\">Активировать перерыв</Button>\r\n          </p>\r\n        </Grid>\r\n\r\n        <Grid item xs={4}>\r\n          <p className={classes.activeSpeakerText}>\r\n            Активный спикер:\r\n            {' '}\r\n            {`${activeSpeaker}`}\r\n          </p>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(AdminPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Admin\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\ContentContainer.tsx",["159"],"import React, { FC } from 'react';\r\nimport { Hidden } from '@material-ui/core';\r\nimport useStyles from './style';\r\n\r\nexport const ContentContainer: FC = ({ children }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n\r\n      <div className={classes.container}>\r\n        {children}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContentContainer;\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\ContentContainer\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\UserPage.tsx",["160","161","162","163","164","165","166"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\User\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\VideoPlayerMain.tsx",["167","168","169","170","171","172","173","174"],"import React, { memo, useState } from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport Iframe from 'react-iframe';\nimport { createPortal } from 'react-dom';\nimport useStyles from './style';\n\nconst VideoPlayerMain = (props: any) => {\n  const classes = useStyles();\n\n  const [contentRef, setContentRef] = useState(null);\n  const mountNode = contentRef;\n  const inputRef: any = React.useRef<HTMLInputElement>(null); // note the passed in `null` arg\n\n  const playVideo = (): any => {\n\n  };\n\n  return (\n    <Grid\n      container\n      justify=\"center\"\n      alignItems=\"center\"\n      data-testid=\"loading-page\"\n    >\n      <div\n        className={props.classNameInner}\n        ref={inputRef}\n      >\n        <Iframe\n          // test url https://facecast.net/v/pybh3r?nolabel&noanimation&autorun=true&t=30\n          url={props.videoURL}\n          width=\"100%\"\n          height={props.height}\n          position=\"relative\"\n          allow=\"fullscreen\"\n          onLoad={playVideo()}\n        />\n      </div>\n    </Grid>\n\n  );\n};\n\nexport default memo(VideoPlayerMain);\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\VideoPlayerMain\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\SessionInfoBlock.tsx",["175","176"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\ModeratorCard.tsx",["177","178","179","180","181","182","183","184","185","186"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\ModeratorCard\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\user.ts",["187","188","189","190","191","192","193"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n\n// Login\nexport const apiGetUser = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getUser}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiVoteForSpeaker = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  rate: number | null,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.voteForSpeaker}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId, rate }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakers = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakers}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateContactedSpeakers = async (\n  speakerId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateContactedSpeakers}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserUpdateWatchedSpeakersAllInSession = async (\n  sessionId: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.userUpdateWatchedSpeakersAll}`;\n\n  try {\n    const { data } = await axios.post(url, { sessionId, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiGetAllChannels = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getAllChannels}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiUserChangeActiveChannel = async (\n  channelNumber: number,\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelNumber, userId }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\admin.ts",["194","195"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n// import request from './apiRequest';\n\nexport const apiChangeActiveSpeakerInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  speakerIdToActivate: number,\n  channelForShowingNumber: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.changeActiveSpeakerInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { speakerIdToActivate, channelForShowingNumber }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n\nexport const apiSetBrakeInChannel = async (\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n  channelForShowingNumber: number,\n  prevSpeakerid: number,\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.setBrakeInChannel}`;\n\n  try {\n    const { data } = await axios.post(url, { channelForShowingNumber, prevSpeakerid }, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\SpeakersSessionInfoBlock.tsx",["196","197","198","199","200","201","202","203","204"],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\components\\SpeakersSessionInfoBlock\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\StatsPage.tsx",["205","206","207","208","209","210","211"],"/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport React, {\r\n  FC, memo, useState, useEffect,\r\n} from 'react';\r\n\r\n// import ContentContainer from '../ContentContainer/ContentContainer';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { apiGetStats } from '../../api/stats';\r\nimport getLocalStorageData from '../../utils/helpers/localStorage.helper';\r\nimport parseToken from '../../utils/parseToken';\r\nimport useStyles from './style';\r\n\r\ntype User = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  email: string;\r\n\r\n};\r\n\r\ntype Vote = {\r\n  rate: number;\r\n  user: User;\r\n  createdAt: Date;\r\n};\r\n\r\ntype DataForStats = {\r\n\r\n  company: string;\r\n  firstName: string;\r\n  id: number;\r\n  innerSystemName: string;\r\n  isModerator: boolean;\r\n  lastName: string;\r\n  linkToImg: string;\r\n  linkToPresentation: string;\r\n  linkToZoom: string;\r\n  topicName: string;\r\n\r\n  usersWhoWatchedSpeaker: Array<User>;\r\n  usersWhoSendContacts: Array<User>;\r\n  votes: Array<Vote>;\r\n\r\n};\r\n\r\nconst StatsPage: FC = () => {\r\n  const classes = useStyles();\r\n  const { token } = getLocalStorageData();\r\n  const [userData] = useState(parseToken(token.accessToken as string));\r\n\r\n  const [dataForStatsViewer, setDataForStatsViewer] = useState<DataForStats[]>();\r\n\r\n  const loadDataForStatsViewer = async () => {\r\n    const response = await apiGetStats(userData.id, token);\r\n    setDataForStatsViewer(response);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadDataForStatsViewer();\r\n  }, []);\r\n\r\n  const Row = (props: { row: DataForStats }) => {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    let sum = 0;\r\n\r\n    row.votes.map((element) => {\r\n      sum += element.rate;\r\n    });\r\n\r\n    const medianValue = (+sum / +row.votes.length || 0).toFixed(2);\r\n\r\n    const renderRate = (historyRow: any) => {\r\n      const currentRate = row && row!.votes.find(\r\n        (element: any) => element.user.id === historyRow.id,\r\n      );\r\n\r\n      if (currentRate && currentRate.createdAt && !currentRate.rate) return '0';\r\n      return currentRate && currentRate.rate || 'без оценки';\r\n    };\r\n\r\n    const renderContactCheckbox = (historyRow: any) => {\r\n      console.log('row :>> ', row);\r\n\r\n      const currentContact = row && row!.usersWhoSendContacts.find(\r\n        (element: any) => element.id === historyRow.id,\r\n      );\r\n\r\n      if (currentContact) return true;\r\n\r\n      return false;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <TableRow className={classes.root}>\r\n          <TableCell align=\"center\">\r\n            <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n            </IconButton>\r\n          </TableCell>\r\n          <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n            {`${row.firstName} ${row.lastName}`}\r\n          </TableCell>\r\n          <TableCell align=\"center\">{row.usersWhoWatchedSpeaker.length}</TableCell>\r\n          <TableCell align=\"center\">{row.votes.length}</TableCell>\r\n          <TableCell align=\"center\">{medianValue}</TableCell>\r\n        </TableRow>\r\n        <TableRow>\r\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <Box margin={1}>\r\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  Подробнее\r\n                </Typography>\r\n                <Table size=\"small\" aria-label=\"purchases\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\">Имя Фамилия участника</TableCell>\r\n                      <TableCell align=\"center\">Просмотрел</TableCell>\r\n                      <TableCell align=\"center\">Хочет отправить контакты</TableCell>\r\n                      <TableCell align=\"center\">Email</TableCell>\r\n                      <TableCell align=\"center\">Оценка</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {row.usersWhoWatchedSpeaker.map((historyRow) => (\r\n                      <TableRow key={historyRow.id}>\r\n                        <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                          {`${historyRow.firstName} ${historyRow.lastName}`}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            defaultChecked\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <Checkbox\r\n                            checked={renderContactCheckbox(historyRow)}\r\n                            color=\"primary\"\r\n                            disabled\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{`${historyRow.email || '-'}`}</TableCell>\r\n                        <TableCell align=\"center\">{renderRate(historyRow)}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </Box>\r\n            </Collapse>\r\n          </TableCell>\r\n        </TableRow>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.pageNameContainer} component=\"main\" maxWidth=\"xs\">\r\n\r\n        <CssBaseline />\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Страница Просмотра Статистики\r\n          </Typography>\r\n\r\n        </div>\r\n\r\n      </Container>\r\n\r\n      <div className={classes.root}>\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"collapsible table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell align=\"center\">Имя Фамилия спикера</TableCell>\r\n                <TableCell align=\"center\">Количество просмотров</TableCell>\r\n                <TableCell align=\"center\">Количество оценок</TableCell>\r\n                <TableCell align=\"center\">Средняя оценка</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataForStatsViewer && dataForStatsViewer.map((row) => (\r\n                <Row key={row.id} row={row} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(StatsPage);\r\n","C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\containers\\Stats\\style.ts",[],"C:\\Users\\Griha\\mmlf-video-conference\\frontend\\src\\api\\stats.ts",["212"],"/* eslint-disable import/prefer-default-export */\nimport axios from 'axios';\nimport api from '../core/api';\n\nexport const apiGetStats = async (\n  userId: number,\n  token: {\n    accessToken: string | null;\n    refreshToken: string | null;\n  },\n\n): Promise<any> => {\n  const url = `${process.env.REACT_APP_API_URL}${api.getStats}${userId}`;\n\n  try {\n    const { data } = await axios.get(url, {\n      headers: {\n        Authorization: `Bearer ${token.accessToken}`,\n      },\n    });\n    return data;\n  } catch (error) {\n    return error.response;\n  }\n};\n",{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":19,"column":3,"nodeType":"227","messageId":"228","endLine":19,"endColumn":14},{"ruleId":"225","severity":1,"message":"229","line":19,"column":16,"nodeType":"227","messageId":"228","endLine":19,"endColumn":22},{"ruleId":"225","severity":1,"message":"230","line":28,"column":11,"nodeType":"227","messageId":"228","endLine":28,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":33,"column":23,"nodeType":"233","messageId":"234","endLine":33,"endColumn":26,"suggestions":"235"},{"ruleId":"231","severity":1,"message":"232","line":10,"column":12,"nodeType":"233","messageId":"234","endLine":10,"endColumn":15,"suggestions":"236"},{"ruleId":"225","severity":1,"message":"237","line":16,"column":8,"nodeType":"227","messageId":"228","endLine":16,"endColumn":17},{"ruleId":"225","severity":1,"message":"238","line":20,"column":18,"nodeType":"227","messageId":"228","endLine":20,"endColumn":27},{"ruleId":"225","severity":1,"message":"239","line":24,"column":20,"nodeType":"227","messageId":"228","endLine":24,"endColumn":31},{"ruleId":"213","replacedBy":"240"},{"ruleId":"215","replacedBy":"241"},{"ruleId":"217","replacedBy":"242"},{"ruleId":"219","replacedBy":"243"},{"ruleId":"221","replacedBy":"244"},{"ruleId":"223","replacedBy":"245"},{"ruleId":"231","severity":1,"message":"232","line":60,"column":23,"nodeType":"233","messageId":"234","endLine":60,"endColumn":26,"suggestions":"246"},{"ruleId":"225","severity":1,"message":"247","line":2,"column":10,"nodeType":"227","messageId":"228","endLine":2,"endColumn":16},{"ruleId":"225","severity":1,"message":"248","line":215,"column":9,"nodeType":"227","messageId":"228","endLine":215,"endColumn":31},{"ruleId":"231","severity":1,"message":"232","line":277,"column":47,"nodeType":"233","messageId":"234","endLine":277,"endColumn":50,"suggestions":"249"},{"ruleId":"231","severity":1,"message":"232","line":299,"column":46,"nodeType":"233","messageId":"234","endLine":299,"endColumn":49,"suggestions":"250"},{"ruleId":"231","severity":1,"message":"232","line":330,"column":62,"nodeType":"233","messageId":"234","endLine":330,"endColumn":65,"suggestions":"251"},{"ruleId":"231","severity":1,"message":"232","line":346,"column":67,"nodeType":"233","messageId":"234","endLine":346,"endColumn":70,"suggestions":"252"},{"ruleId":"231","severity":1,"message":"232","line":383,"column":41,"nodeType":"233","messageId":"234","endLine":383,"endColumn":44,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":384,"column":28,"nodeType":"256","messageId":"257","endLine":384,"endColumn":40,"suggestions":"258"},{"ruleId":"225","severity":1,"message":"259","line":2,"column":16,"nodeType":"227","messageId":"228","endLine":2,"endColumn":32},{"ruleId":"225","severity":1,"message":"260","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":7,"column":33,"nodeType":"233","messageId":"234","endLine":7,"endColumn":36,"suggestions":"261"},{"ruleId":"225","severity":1,"message":"262","line":8,"column":9,"nodeType":"227","messageId":"228","endLine":8,"endColumn":16},{"ruleId":"225","severity":1,"message":"263","line":10,"column":22,"nodeType":"227","messageId":"228","endLine":10,"endColumn":35},{"ruleId":"225","severity":1,"message":"264","line":11,"column":9,"nodeType":"227","messageId":"228","endLine":11,"endColumn":18},{"ruleId":"231","severity":1,"message":"232","line":12,"column":19,"nodeType":"233","messageId":"234","endLine":12,"endColumn":22,"suggestions":"265"},{"ruleId":"231","severity":1,"message":"232","line":14,"column":25,"nodeType":"233","messageId":"234","endLine":14,"endColumn":28,"suggestions":"266"},{"ruleId":"231","severity":1,"message":"232","line":12,"column":34,"nodeType":"233","messageId":"234","endLine":12,"endColumn":37,"suggestions":"267"},{"ruleId":"231","severity":1,"message":"232","line":127,"column":19,"nodeType":"233","messageId":"234","endLine":127,"endColumn":22,"suggestions":"268"},{"ruleId":"225","severity":1,"message":"259","line":3,"column":9,"nodeType":"227","messageId":"228","endLine":3,"endColumn":25},{"ruleId":"225","severity":1,"message":"269","line":3,"column":27,"nodeType":"227","messageId":"228","endLine":3,"endColumn":37},{"ruleId":"225","severity":1,"message":"270","line":3,"column":39,"nodeType":"227","messageId":"228","endLine":3,"endColumn":45},{"ruleId":"225","severity":1,"message":"271","line":5,"column":8,"nodeType":"227","messageId":"228","endLine":5,"endColumn":14},{"ruleId":"225","severity":1,"message":"272","line":6,"column":8,"nodeType":"227","messageId":"228","endLine":6,"endColumn":11},{"ruleId":"225","severity":1,"message":"273","line":7,"column":8,"nodeType":"227","messageId":"228","endLine":7,"endColumn":14},{"ruleId":"225","severity":1,"message":"274","line":8,"column":8,"nodeType":"227","messageId":"228","endLine":8,"endColumn":15},{"ruleId":"225","severity":1,"message":"275","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":12,"column":31,"nodeType":"233","messageId":"234","endLine":12,"endColumn":34,"suggestions":"276"},{"ruleId":"225","severity":1,"message":"262","line":13,"column":9,"nodeType":"227","messageId":"228","endLine":13,"endColumn":16},{"ruleId":"231","severity":1,"message":"232","line":13,"column":12,"nodeType":"233","messageId":"234","endLine":13,"endColumn":15,"suggestions":"277"},{"ruleId":"231","severity":1,"message":"232","line":36,"column":12,"nodeType":"233","messageId":"234","endLine":36,"endColumn":15,"suggestions":"278"},{"ruleId":"231","severity":1,"message":"232","line":58,"column":12,"nodeType":"233","messageId":"234","endLine":58,"endColumn":15,"suggestions":"279"},{"ruleId":"231","severity":1,"message":"232","line":80,"column":12,"nodeType":"233","messageId":"234","endLine":80,"endColumn":15,"suggestions":"280"},{"ruleId":"231","severity":1,"message":"232","line":102,"column":12,"nodeType":"233","messageId":"234","endLine":102,"endColumn":15,"suggestions":"281"},{"ruleId":"231","severity":1,"message":"232","line":124,"column":12,"nodeType":"233","messageId":"234","endLine":124,"endColumn":15,"suggestions":"282"},{"ruleId":"231","severity":1,"message":"232","line":146,"column":12,"nodeType":"233","messageId":"234","endLine":146,"endColumn":15,"suggestions":"283"},{"ruleId":"231","severity":1,"message":"232","line":13,"column":12,"nodeType":"233","messageId":"234","endLine":13,"endColumn":15,"suggestions":"284"},{"ruleId":"231","severity":1,"message":"232","line":35,"column":12,"nodeType":"233","messageId":"234","endLine":35,"endColumn":15,"suggestions":"285"},{"ruleId":"231","severity":1,"message":"232","line":47,"column":42,"nodeType":"233","messageId":"234","endLine":47,"endColumn":45,"suggestions":"286"},{"ruleId":"231","severity":1,"message":"232","line":70,"column":19,"nodeType":"233","messageId":"234","endLine":70,"endColumn":22,"suggestions":"287"},{"ruleId":"231","severity":1,"message":"232","line":84,"column":19,"nodeType":"233","messageId":"234","endLine":84,"endColumn":22,"suggestions":"288"},{"ruleId":"231","severity":1,"message":"232","line":92,"column":25,"nodeType":"233","messageId":"234","endLine":92,"endColumn":28,"suggestions":"289"},{"ruleId":"231","severity":1,"message":"232","line":107,"column":41,"nodeType":"233","messageId":"234","endLine":107,"endColumn":44,"suggestions":"290"},{"ruleId":"254","severity":1,"message":"255","line":109,"column":11,"nodeType":"256","messageId":"257","endLine":109,"endColumn":47,"suggestions":"291"},{"ruleId":"254","severity":1,"message":"255","line":110,"column":27,"nodeType":"256","messageId":"257","endLine":110,"endColumn":63,"suggestions":"292"},{"ruleId":"231","severity":1,"message":"232","line":111,"column":18,"nodeType":"233","messageId":"234","endLine":111,"endColumn":21,"suggestions":"293"},{"ruleId":"231","severity":1,"message":"232","line":362,"column":46,"nodeType":"233","messageId":"234","endLine":362,"endColumn":49,"suggestions":"294"},{"ruleId":"231","severity":1,"message":"232","line":98,"column":37,"nodeType":"233","messageId":"234","endLine":98,"endColumn":40,"suggestions":"295"},{"ruleId":"254","severity":1,"message":"255","line":99,"column":34,"nodeType":"256","messageId":"257","endLine":99,"endColumn":38,"suggestions":"296"},{"ruleId":"231","severity":1,"message":"232","line":100,"column":19,"nodeType":"233","messageId":"234","endLine":100,"endColumn":22,"suggestions":"297"},{"ruleId":"231","severity":1,"message":"232","line":107,"column":48,"nodeType":"233","messageId":"234","endLine":107,"endColumn":51,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":108,"column":7,"nodeType":"301","messageId":"302","endLine":108,"endColumn":18},{"ruleId":"254","severity":1,"message":"255","line":110,"column":37,"nodeType":"256","messageId":"257","endLine":110,"endColumn":41,"suggestions":"303"},{"ruleId":"231","severity":1,"message":"232","line":111,"column":19,"nodeType":"233","messageId":"234","endLine":111,"endColumn":22,"suggestions":"304"},{"ruleId":"231","severity":1,"message":"232","line":12,"column":12,"nodeType":"233","messageId":"234","endLine":12,"endColumn":15,"suggestions":"305"},"lines-around-directive",["306"],"no-spaced-func",["307"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useLocation' is defined but never used.","Identifier","unusedVar","'Prompt' is defined but never used.","'Props' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["308","309"],["310","311"],"'LoginPage' is defined but never used.","'setIsAuth' is assigned a value but never used.","'setUserData' is assigned a value but never used.",["306"],["307"],[],[],[],[],["312","313"],"'Hidden' is defined but never used.","'updateContactedSpeaker' is assigned a value but never used.",["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["324"],"'CircularProgress' is defined but never used.","'createPortal' is defined but never used.",["325","326"],"'classes' is assigned a value but never used.","'setContentRef' is assigned a value but never used.","'mountNode' is assigned a value but never used.",["327","328"],["329","330"],["331","332"],["333","334"],"'Typography' is defined but never used.","'Button' is defined but never used.","'Iframe' is defined but never used.","'Box' is defined but never used.","'Rating' is defined but never used.","'Divider' is defined but never used.","'VideoPlayerMain' is defined but never used.",["335","336"],["337","338"],["339","340"],["341","342"],["343","344"],["345","346"],["347","348"],["349","350"],["351","352"],["353","354"],["355","356"],["357","358"],["359","360"],["361","362"],["363","364"],["365"],["366"],["367","368"],["369","370"],["371","372"],["373"],["374","375"],["376","377"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["378"],["379","380"],["381","382"],"padding-line-between-statements","func-call-spacing",{"messageId":"383","fix":"384","desc":"385"},{"messageId":"386","fix":"387","desc":"388"},{"messageId":"383","fix":"389","desc":"385"},{"messageId":"386","fix":"390","desc":"388"},{"messageId":"383","fix":"391","desc":"385"},{"messageId":"386","fix":"392","desc":"388"},{"messageId":"383","fix":"393","desc":"385"},{"messageId":"386","fix":"394","desc":"388"},{"messageId":"383","fix":"395","desc":"385"},{"messageId":"386","fix":"396","desc":"388"},{"messageId":"383","fix":"397","desc":"385"},{"messageId":"386","fix":"398","desc":"388"},{"messageId":"383","fix":"399","desc":"385"},{"messageId":"386","fix":"400","desc":"388"},{"messageId":"383","fix":"401","desc":"385"},{"messageId":"386","fix":"402","desc":"388"},{"messageId":"403","fix":"404","desc":"405"},{"messageId":"383","fix":"406","desc":"385"},{"messageId":"386","fix":"407","desc":"388"},{"messageId":"383","fix":"408","desc":"385"},{"messageId":"386","fix":"409","desc":"388"},{"messageId":"383","fix":"410","desc":"385"},{"messageId":"386","fix":"411","desc":"388"},{"messageId":"383","fix":"412","desc":"385"},{"messageId":"386","fix":"413","desc":"388"},{"messageId":"383","fix":"414","desc":"385"},{"messageId":"386","fix":"415","desc":"388"},{"messageId":"383","fix":"416","desc":"385"},{"messageId":"386","fix":"417","desc":"388"},{"messageId":"383","fix":"418","desc":"385"},{"messageId":"386","fix":"419","desc":"388"},{"messageId":"383","fix":"420","desc":"385"},{"messageId":"386","fix":"421","desc":"388"},{"messageId":"383","fix":"422","desc":"385"},{"messageId":"386","fix":"423","desc":"388"},{"messageId":"383","fix":"424","desc":"385"},{"messageId":"386","fix":"425","desc":"388"},{"messageId":"383","fix":"426","desc":"385"},{"messageId":"386","fix":"427","desc":"388"},{"messageId":"383","fix":"428","desc":"385"},{"messageId":"386","fix":"429","desc":"388"},{"messageId":"383","fix":"430","desc":"385"},{"messageId":"386","fix":"431","desc":"388"},{"messageId":"383","fix":"432","desc":"385"},{"messageId":"386","fix":"433","desc":"388"},{"messageId":"383","fix":"434","desc":"385"},{"messageId":"386","fix":"435","desc":"388"},{"messageId":"383","fix":"436","desc":"385"},{"messageId":"386","fix":"437","desc":"388"},{"messageId":"383","fix":"438","desc":"385"},{"messageId":"386","fix":"439","desc":"388"},{"messageId":"383","fix":"440","desc":"385"},{"messageId":"386","fix":"441","desc":"388"},{"messageId":"383","fix":"442","desc":"385"},{"messageId":"386","fix":"443","desc":"388"},{"messageId":"383","fix":"444","desc":"385"},{"messageId":"386","fix":"445","desc":"388"},{"messageId":"403","fix":"446","desc":"405"},{"messageId":"403","fix":"447","desc":"405"},{"messageId":"383","fix":"448","desc":"385"},{"messageId":"386","fix":"449","desc":"388"},{"messageId":"383","fix":"450","desc":"385"},{"messageId":"386","fix":"451","desc":"388"},{"messageId":"383","fix":"452","desc":"385"},{"messageId":"386","fix":"453","desc":"388"},{"messageId":"403","fix":"454","desc":"405"},{"messageId":"383","fix":"455","desc":"385"},{"messageId":"386","fix":"456","desc":"388"},{"messageId":"383","fix":"457","desc":"385"},{"messageId":"386","fix":"458","desc":"388"},{"messageId":"403","fix":"459","desc":"405"},{"messageId":"383","fix":"460","desc":"385"},{"messageId":"386","fix":"461","desc":"388"},{"messageId":"383","fix":"462","desc":"385"},{"messageId":"386","fix":"463","desc":"388"},"suggestUnknown",{"range":"464","text":"465"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"464","text":"466"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"467","text":"465"},{"range":"467","text":"466"},{"range":"468","text":"465"},{"range":"468","text":"466"},{"range":"469","text":"465"},{"range":"469","text":"466"},{"range":"470","text":"465"},{"range":"470","text":"466"},{"range":"471","text":"465"},{"range":"471","text":"466"},{"range":"472","text":"465"},{"range":"472","text":"466"},{"range":"473","text":"465"},{"range":"473","text":"466"},"suggestOptionalChain",{"range":"474","text":"475"},"Consider using the optional chain operator `?.` instead. This operator includes runtime checks, so it is safer than the compile-only non-null assertion operator.",{"range":"476","text":"465"},{"range":"476","text":"466"},{"range":"477","text":"465"},{"range":"477","text":"466"},{"range":"478","text":"465"},{"range":"478","text":"466"},{"range":"479","text":"465"},{"range":"479","text":"466"},{"range":"480","text":"465"},{"range":"480","text":"466"},{"range":"481","text":"465"},{"range":"481","text":"466"},{"range":"482","text":"465"},{"range":"482","text":"466"},{"range":"483","text":"465"},{"range":"483","text":"466"},{"range":"484","text":"465"},{"range":"484","text":"466"},{"range":"485","text":"465"},{"range":"485","text":"466"},{"range":"486","text":"465"},{"range":"486","text":"466"},{"range":"487","text":"465"},{"range":"487","text":"466"},{"range":"488","text":"465"},{"range":"488","text":"466"},{"range":"489","text":"465"},{"range":"489","text":"466"},{"range":"490","text":"465"},{"range":"490","text":"466"},{"range":"491","text":"465"},{"range":"491","text":"466"},{"range":"492","text":"465"},{"range":"492","text":"466"},{"range":"493","text":"465"},{"range":"493","text":"466"},{"range":"494","text":"465"},{"range":"494","text":"466"},{"range":"495","text":"465"},{"range":"495","text":"466"},{"range":"496","text":"475"},{"range":"497","text":"475"},{"range":"498","text":"465"},{"range":"498","text":"466"},{"range":"499","text":"465"},{"range":"499","text":"466"},{"range":"500","text":"465"},{"range":"500","text":"466"},{"range":"501","text":"475"},{"range":"502","text":"465"},{"range":"502","text":"466"},{"range":"503","text":"465"},{"range":"503","text":"466"},{"range":"504","text":"475"},{"range":"505","text":"465"},{"range":"505","text":"466"},{"range":"506","text":"465"},{"range":"506","text":"466"},[965,968],"unknown","never",[222,225],[1706,1709],[9857,9860],[10457,10460],[11339,11342],[11834,11837],[13037,13040],[13086,13087],"?",[250,253],[396,399],[498,501],[446,449],[4162,4165],[421,424],[263,266],[754,757],[1261,1264],[1775,1778],[2301,2304],[2785,2788],[3273,3276],[361,364],[916,919],[1408,1411],[2205,2208],[2662,2665],[3017,3020],[3768,3771],[3872,3873],[3950,3951],[3976,3979],[12821,12824],[2867,2870],[2914,2915],[2947,2950],[3205,3208],[3294,3295],[3342,3345],[255,258]]